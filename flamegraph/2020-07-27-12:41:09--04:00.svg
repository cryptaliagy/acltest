<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="358" onload="init(evt)" viewBox="0 0 1200 358" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="358.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >"2020-07-27-12:41:09--04:00 cProfile"</text>
<text id="details" x="10.00" y="341" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="341" > </text>
<g id="frames">
<g >
<title>copy.py:219:_deepcopy_tuple (727,466 samples, 0.19%)</title><rect x="53.1" y="197" width="2.2" height="15.0" fill="rgb(222,143,17)" rx="2" ry="2" />
<text  x="56.11" y="207.5" ></text>
</g>
<g >
<title>reduction.py:38:__init__ (1,457,481 samples, 0.37%)</title><rect x="17.3" y="165" width="4.4" height="15.0" fill="rgb(248,202,46)" rx="2" ry="2" />
<text  x="20.26" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (454,612 samples, 0.12%)</title><rect x="457.9" y="85" width="1.4" height="15.0" fill="rgb(206,225,7)" rx="2" ry="2" />
<text  x="460.89" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:585:__str__ (535,659 samples, 0.14%)</title><rect x="294.2" y="181" width="1.6" height="15.0" fill="rgb(240,77,24)" rx="2" ry="2" />
<text  x="297.18" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:423:AddressListExclude (70,143,942 samples, 18.03%)</title><rect x="76.6" y="197" width="212.8" height="15.0" fill="rgb(250,186,41)" rx="2" ry="2" />
<text  x="79.63" y="207.5" >nacaddr.py:423:AddressListEx..</text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (1,387,691 samples, 0.36%)</title><rect x="265.7" y="101" width="4.2" height="15.0" fill="rgb(212,59,41)" rx="2" ry="2" />
<text  x="268.73" y="111.5" ></text>
</g>
<g >
<title>copy.py:268:_reconstruct (630,025 samples, 0.16%)</title><rect x="38.2" y="197" width="1.9" height="15.0" fill="rgb(208,50,21)" rx="2" ry="2" />
<text  x="41.20" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (558,519 samples, 0.14%)</title><rect x="287.7" y="53" width="1.7" height="15.0" fill="rgb(218,13,5)" rx="2" ry="2" />
<text  x="290.71" y="63.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (3,430,622 samples, 0.88%)</title><rect x="423.3" y="101" width="10.4" height="15.0" fill="rgb(217,115,1)" rx="2" ry="2" />
<text  x="426.28" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (658,289 samples, 0.17%)</title><rect x="263.7" y="53" width="2.0" height="15.0" fill="rgb(241,94,8)" rx="2" ry="2" />
<text  x="266.74" y="63.5" ></text>
</g>
<g >
<title>yacc.py:1003:parseopt_notrack (45,625,160 samples, 11.73%)</title><rect x="324.4" y="213" width="138.4" height="15.0" fill="rgb(241,138,44)" rx="2" ry="2" />
<text  x="327.39" y="223.5" >yacc.py:1003:pars..</text>
</g>
<g >
<title>policy.py:1013:AddObject (3,484,581 samples, 0.90%)</title><rect x="452.2" y="165" width="10.6" height="15.0" fill="rgb(245,221,6)" rx="2" ry="2" />
<text  x="455.21" y="175.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (2,836,579 samples, 0.73%)</title><rect x="40.1" y="229" width="8.6" height="15.0" fill="rgb(209,130,6)" rx="2" ry="2" />
<text  x="43.11" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:683:overlaps (17,890,661 samples, 4.60%)</title><rect x="90.7" y="181" width="54.3" height="15.0" fill="rgb(218,206,40)" rx="2" ry="2" />
<text  x="93.68" y="191.5" >ipadd..</text>
</g>
<g >
<title>aclgenerator.py:272:__init__ (1,412,669 samples, 0.36%)</title><rect x="317.3" y="229" width="4.3" height="15.0" fill="rgb(239,58,32)" rx="2" ry="2" />
<text  x="320.33" y="239.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (1,260,469 samples, 0.32%)</title><rect x="69.8" y="213" width="3.8" height="15.0" fill="rgb(216,193,33)" rx="2" ry="2" />
<text  x="72.82" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:153:__init__ (644,069 samples, 0.17%)</title><rect x="455.7" y="101" width="2.0" height="15.0" fill="rgb(233,199,14)" rx="2" ry="2" />
<text  x="458.73" y="111.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (771,910 samples, 0.20%)</title><rect x="59.4" y="197" width="2.4" height="15.0" fill="rgb(220,72,35)" rx="2" ry="2" />
<text  x="62.45" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:550:__int__ (599,193 samples, 0.15%)</title><rect x="115.2" y="149" width="1.8" height="15.0" fill="rgb(249,82,14)" rx="2" ry="2" />
<text  x="118.20" y="159.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (1,479,010 samples, 0.38%)</title><rect x="367.7" y="69" width="4.4" height="15.0" fill="rgb(240,225,27)" rx="2" ry="2" />
<text  x="370.66" y="79.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (2,832,562 samples, 0.73%)</title><rect x="40.1" y="213" width="8.6" height="15.0" fill="rgb(213,153,46)" rx="2" ry="2" />
<text  x="43.12" y="223.5" ></text>
</g>
<g >
<title>policy.py:1279:AddressCleanup (978,654 samples, 0.25%)</title><rect x="341.7" y="149" width="2.9" height="15.0" fill="rgb(240,38,35)" rx="2" ry="2" />
<text  x="344.66" y="159.5" ></text>
</g>
<g >
<title>policy.py:190:AddFilter (2,345,569 samples, 0.60%)</title><rect x="334.4" y="165" width="7.1" height="15.0" fill="rgb(216,6,10)" rx="2" ry="2" />
<text  x="337.42" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (2,105,734 samples, 0.54%)</title><rect x="452.9" y="117" width="6.4" height="15.0" fill="rgb(218,69,39)" rx="2" ry="2" />
<text  x="455.89" y="127.5" ></text>
</g>
<g >
<title>__init__.py:1031:log (682,742 samples, 0.18%)</title><rect x="23.4" y="197" width="2.1" height="15.0" fill="rgb(221,155,53)" rx="2" ry="2" />
<text  x="26.42" y="207.5" ></text>
</g>
<g >
<title>threading.py:1000:join (239,300,869 samples, 61.52%)</title><rect x="464.1" y="277" width="725.9" height="15.0" fill="rgb(213,222,7)" rx="2" ry="2" />
<text  x="467.12" y="287.5" >threading.py:1000:join</text>
</g>
<g >
<title>__init__.py:810:emit (554,927 samples, 0.14%)</title><rect x="23.8" y="85" width="1.7" height="15.0" fill="rgb(242,33,6)" rx="2" ry="2" />
<text  x="26.80" y="95.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (1,254,854 samples, 0.32%)</title><rect x="411.7" y="69" width="3.8" height="15.0" fill="rgb(226,28,46)" rx="2" ry="2" />
<text  x="414.71" y="79.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,891,101 samples, 0.74%)</title><rect x="57.6" y="213" width="8.8" height="15.0" fill="rgb(216,207,8)" rx="2" ry="2" />
<text  x="60.64" y="223.5" ></text>
</g>
<g >
<title>reduction.py:48:dumps (1,849,678 samples, 0.48%)</title><rect x="16.1" y="181" width="5.6" height="15.0" fill="rgb(248,139,26)" rx="2" ry="2" />
<text  x="19.07" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:153:__init__ (2,764,360 samples, 0.71%)</title><rect x="433.7" y="101" width="8.4" height="15.0" fill="rgb(240,214,2)" rx="2" ry="2" />
<text  x="436.69" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (2,061,744 samples, 0.53%)</title><rect x="365.9" y="85" width="6.2" height="15.0" fill="rgb(253,87,12)" rx="2" ry="2" />
<text  x="368.90" y="95.5" ></text>
</g>
<g >
<title>nacaddr.py:395:SortAddrList (972,116 samples, 0.25%)</title><rect x="341.7" y="117" width="2.9" height="15.0" fill="rgb(207,201,29)" rx="2" ry="2" />
<text  x="344.68" y="127.5" ></text>
</g>
<g >
<title>string.py:107:substitute (472,366 samples, 0.12%)</title><rect x="295.8" y="197" width="1.4" height="15.0" fill="rgb(226,32,15)" rx="2" ry="2" />
<text  x="298.80" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (1,381,347 samples, 0.36%)</title><rect x="393.4" y="85" width="4.2" height="15.0" fill="rgb(212,111,9)" rx="2" ry="2" />
<text  x="396.42" y="95.5" ></text>
</g>
<g >
<title>__init__.py:898:handle (558,680 samples, 0.14%)</title><rect x="23.8" y="117" width="1.7" height="15.0" fill="rgb(217,90,30)" rx="2" ry="2" />
<text  x="26.79" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (545,477 samples, 0.14%)</title><rect x="456.0" y="85" width="1.7" height="15.0" fill="rgb(251,109,37)" rx="2" ry="2" />
<text  x="459.03" y="95.5" ></text>
</g>
<g >
<title>aclgen.py:588:main (389,009,368 samples, 100.00%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(213,72,47)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >aclgen.py:588:main</text>
</g>
<g >
<title>juniper.py:186:__str__ (6,601,210 samples, 1.70%)</title><rect x="297.3" y="229" width="20.0" height="15.0" fill="rgb(222,152,38)" rx="2" ry="2" />
<text  x="300.31" y="239.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (726,646 samples, 0.19%)</title><rect x="53.1" y="181" width="2.2" height="15.0" fill="rgb(245,71,1)" rx="2" ry="2" />
<text  x="56.11" y="191.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (745,158 samples, 0.19%)</title><rect x="44.2" y="165" width="2.2" height="15.0" fill="rgb(237,130,28)" rx="2" ry="2" />
<text  x="47.18" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:647:__lt__ (539,073 samples, 0.14%)</title><rect x="203.5" y="149" width="1.6" height="15.0" fill="rgb(217,38,13)" rx="2" ry="2" />
<text  x="206.48" y="159.5" ></text>
</g>
<g >
<title>lex.py:862:lex (805,901 samples, 0.21%)</title><rect x="321.9" y="229" width="2.5" height="15.0" fill="rgb(217,3,4)" rx="2" ry="2" />
<text  x="324.94" y="239.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (749,874 samples, 0.19%)</title><rect x="61.8" y="197" width="2.3" height="15.0" fill="rgb(239,229,46)" rx="2" ry="2" />
<text  x="64.79" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (681,317 samples, 0.18%)</title><rect x="183.5" y="117" width="2.0" height="15.0" fill="rgb(211,92,23)" rx="2" ry="2" />
<text  x="186.46" y="127.5" ></text>
</g>
<g >
<title>naming.py:456:GetNet (3,474,530 samples, 0.89%)</title><rect x="452.2" y="133" width="10.6" height="15.0" fill="rgb(243,84,51)" rx="2" ry="2" />
<text  x="455.24" y="143.5" ></text>
</g>
<g >
<title>policy.py:1290:cleanup (2,241,208 samples, 0.58%)</title><rect x="334.7" y="117" width="6.8" height="15.0" fill="rgb(226,227,50)" rx="2" ry="2" />
<text  x="337.74" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (1,081,254 samples, 0.28%)</title><rect x="87.4" y="181" width="3.3" height="15.0" fill="rgb(211,116,48)" rx="2" ry="2" />
<text  x="90.40" y="191.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,901,498 samples, 0.75%)</title><rect x="48.8" y="213" width="8.8" height="15.0" fill="rgb(216,21,16)" rx="2" ry="2" />
<text  x="51.80" y="223.5" ></text>
</g>
<g >
<title>juniper.py:956:__str__ (6,625,276 samples, 1.70%)</title><rect x="297.2" y="245" width="20.1" height="15.0" fill="rgb(246,198,24)" rx="2" ry="2" />
<text  x="300.24" y="255.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (726,500 samples, 0.19%)</title><rect x="53.1" y="165" width="2.2" height="15.0" fill="rgb(212,225,30)" rx="2" ry="2" />
<text  x="56.11" y="175.5" ></text>
</g>
<g >
<title>naming.py:456:GetNet (626,989 samples, 0.16%)</title><rect x="448.9" y="117" width="1.9" height="15.0" fill="rgb(229,135,32)" rx="2" ry="2" />
<text  x="451.91" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (2,993,884 samples, 0.77%)</title><rect x="271.6" y="101" width="9.1" height="15.0" fill="rgb(242,94,33)" rx="2" ry="2" />
<text  x="274.58" y="111.5" ></text>
</g>
<g >
<title>managers.py:783:_callmethod (2,940,717 samples, 0.76%)</title><rect x="14.5" y="213" width="8.9" height="15.0" fill="rgb(222,18,52)" rx="2" ry="2" />
<text  x="17.49" y="223.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (14,554,282 samples, 3.74%)</title><rect x="29.5" y="245" width="44.1" height="15.0" fill="rgb(237,84,46)" rx="2" ry="2" />
<text  x="32.50" y="255.5" >copy..</text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (675,563 samples, 0.17%)</title><rect x="248.3" y="69" width="2.0" height="15.0" fill="rgb(213,117,54)" rx="2" ry="2" />
<text  x="251.28" y="79.5" ></text>
</g>
<g >
<title>nacaddr.py:93:supernet_of (700,122 samples, 0.18%)</title><rect x="319.5" y="181" width="2.1" height="15.0" fill="rgb(212,159,47)" rx="2" ry="2" />
<text  x="322.49" y="191.5" ></text>
</g>
<g >
<title>lex.py:576:validate_all (727,168 samples, 0.19%)</title><rect x="322.2" y="213" width="2.2" height="15.0" fill="rgb(249,222,44)" rx="2" ry="2" />
<text  x="325.18" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (864,956 samples, 0.22%)</title><rect x="377.2" y="85" width="2.7" height="15.0" fill="rgb(215,214,11)" rx="2" ry="2" />
<text  x="380.24" y="95.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (2,252,924 samples, 0.58%)</title><rect x="442.1" y="101" width="6.8" height="15.0" fill="rgb(212,66,50)" rx="2" ry="2" />
<text  x="445.07" y="111.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.min&gt; (627,515 samples, 0.16%)</title><rect x="229.6" y="85" width="1.9" height="15.0" fill="rgb(246,213,11)" rx="2" ry="2" />
<text  x="232.63" y="95.5" ></text>
</g>
<g >
<title>cisco.py:1232:__str__ (704,037 samples, 0.18%)</title><rect x="27.4" y="245" width="2.1" height="15.0" fill="rgb(239,163,52)" rx="2" ry="2" />
<text  x="30.36" y="255.5" ></text>
</g>
<g >
<title>iptables.py:809:__str__ (73,710,173 samples, 18.95%)</title><rect x="73.6" y="245" width="223.6" height="15.0" fill="rgb(223,37,14)" rx="2" ry="2" />
<text  x="76.65" y="255.5" >iptables.py:809:__str__</text>
</g>
<g >
<title>policy.py:1862:p_target (3,368,373 samples, 0.87%)</title><rect x="334.4" y="197" width="10.2" height="15.0" fill="rgb(220,20,23)" rx="2" ry="2" />
<text  x="337.41" y="207.5" ></text>
</g>
<g >
<title>policy.py:1279:AddressCleanup (2,253,704 samples, 0.58%)</title><rect x="334.7" y="133" width="6.8" height="15.0" fill="rgb(216,35,30)" rx="2" ry="2" />
<text  x="337.70" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (1,749,270 samples, 0.45%)</title><rect x="410.2" y="85" width="5.3" height="15.0" fill="rgb(226,205,37)" rx="2" ry="2" />
<text  x="413.21" y="95.5" ></text>
</g>
<g >
<title>junipersrx.py:630:_BuildAddressBook (767,975 samples, 0.20%)</title><rect x="319.3" y="197" width="2.3" height="15.0" fill="rgb(253,60,8)" rx="2" ry="2" />
<text  x="322.29" y="207.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (610,185 samples, 0.16%)</title><rect x="34.4" y="165" width="1.9" height="15.0" fill="rgb(252,36,45)" rx="2" ry="2" />
<text  x="37.44" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (1,205,922 samples, 0.31%)</title><rect x="368.5" y="53" width="3.6" height="15.0" fill="rgb(238,18,9)" rx="2" ry="2" />
<text  x="371.49" y="63.5" ></text>
</g>
<g >
<title>connection.py:374:_recv (551,248 samples, 0.14%)</title><rect x="21.7" y="165" width="1.7" height="15.0" fill="rgb(234,5,24)" rx="2" ry="2" />
<text  x="24.73" y="175.5" ></text>
</g>
<g >
<title>connection.py:202:send (2,347,471 samples, 0.60%)</title><rect x="14.6" y="197" width="7.1" height="15.0" fill="rgb(231,21,15)" rx="2" ry="2" />
<text  x="17.56" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (473,544 samples, 0.12%)</title><rect x="454.3" y="85" width="1.4" height="15.0" fill="rgb(241,211,9)" rx="2" ry="2" />
<text  x="457.29" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (6,791,635 samples, 1.75%)</title><rect x="231.5" y="101" width="20.6" height="15.0" fill="rgb(239,213,42)" rx="2" ry="2" />
<text  x="234.54" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:859:_get_networks_key (465,482 samples, 0.12%)</title><rect x="189.8" y="133" width="1.5" height="15.0" fill="rgb(234,84,1)" rx="2" ry="2" />
<text  x="192.84" y="143.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (12,285,703 samples, 3.16%)</title><rect x="252.1" y="133" width="37.3" height="15.0" fill="rgb(205,21,45)" rx="2" ry="2" />
<text  x="255.14" y="143.5" >nac..</text>
</g>
<g >
<title>~:0:&lt;method 'match' of 're.Pattern' objects&gt; (432,264 samples, 0.11%)</title><rect x="323.1" y="165" width="1.3" height="15.0" fill="rgb(229,174,20)" rx="2" ry="2" />
<text  x="326.07" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (453,368 samples, 0.12%)</title><rect x="310.2" y="165" width="1.4" height="15.0" fill="rgb(210,102,9)" rx="2" ry="2" />
<text  x="313.22" y="175.5" ></text>
</g>
<g >
<title>__init__.py:1434:log (680,024 samples, 0.17%)</title><rect x="23.4" y="181" width="2.1" height="15.0" fill="rgb(233,10,52)" rx="2" ry="2" />
<text  x="26.43" y="191.5" ></text>
</g>
<g >
<title>lex.py:728:validate_rules (711,310 samples, 0.18%)</title><rect x="322.2" y="197" width="2.2" height="15.0" fill="rgb(251,135,41)" rx="2" ry="2" />
<text  x="325.23" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:588:__hash__ (1,068,710 samples, 0.27%)</title><rect x="177.2" y="117" width="3.3" height="15.0" fill="rgb(239,46,46)" rx="2" ry="2" />
<text  x="180.25" y="127.5" ></text>
</g>
<g >
<title>__init__.py:1575:callHandlers (560,688 samples, 0.14%)</title><rect x="23.8" y="133" width="1.7" height="15.0" fill="rgb(218,101,29)" rx="2" ry="2" />
<text  x="26.79" y="143.5" ></text>
</g>
<g >
<title>policy.py:2526:ParsePolicy (46,537,938 samples, 11.96%)</title><rect x="321.6" y="245" width="141.2" height="15.0" fill="rgb(227,176,24)" rx="2" ry="2" />
<text  x="324.62" y="255.5" >policy.py:2526:Pa..</text>
</g>
<g >
<title>policy.py:172:__init__ (2,345,902 samples, 0.60%)</title><rect x="334.4" y="181" width="7.1" height="15.0" fill="rgb(252,56,20)" rx="2" ry="2" />
<text  x="337.42" y="191.5" ></text>
</g>
<g >
<title>junipersrx.py:336:_TranslatePolicy (861,907 samples, 0.22%)</title><rect x="319.0" y="213" width="2.6" height="15.0" fill="rgb(224,69,51)" rx="2" ry="2" />
<text  x="322.00" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (436,759 samples, 0.11%)</title><rect x="447.6" y="37" width="1.3" height="15.0" fill="rgb(206,67,39)" rx="2" ry="2" />
<text  x="450.58" y="47.5" ></text>
</g>
<g >
<title>lex.py:831:validate_module (668,152 samples, 0.17%)</title><rect x="322.4" y="181" width="2.0" height="15.0" fill="rgb(229,60,20)" rx="2" ry="2" />
<text  x="325.36" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (898,885 samples, 0.23%)</title><rect x="459.9" y="101" width="2.7" height="15.0" fill="rgb(210,134,53)" rx="2" ry="2" />
<text  x="462.87" y="111.5" ></text>
</g>
<g >
<title>connection.py:246:recv (568,760 samples, 0.15%)</title><rect x="21.7" y="197" width="1.7" height="15.0" fill="rgb(234,139,38)" rx="2" ry="2" />
<text  x="24.68" y="207.5" ></text>
</g>
<g >
<title>juniper.py:653:_MinimizePrefixes (2,361,821 samples, 0.61%)</title><rect x="304.4" y="213" width="7.2" height="15.0" fill="rgb(254,150,6)" rx="2" ry="2" />
<text  x="307.43" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:647:__lt__ (426,937 samples, 0.11%)</title><rect x="340.2" y="69" width="1.3" height="15.0" fill="rgb(207,213,43)" rx="2" ry="2" />
<text  x="343.24" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (2,495,163 samples, 0.64%)</title><rect x="281.8" y="101" width="7.6" height="15.0" fill="rgb(226,218,47)" rx="2" ry="2" />
<text  x="284.84" y="111.5" ></text>
</g>
<g >
<title>connection.py:406:_recv_bytes (555,342 samples, 0.14%)</title><rect x="21.7" y="181" width="1.7" height="15.0" fill="rgb(230,163,27)" rx="2" ry="2" />
<text  x="24.72" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (1,200,697 samples, 0.31%)</title><rect x="307.9" y="181" width="3.7" height="15.0" fill="rgb(232,47,34)" rx="2" ry="2" />
<text  x="310.95" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (2,599,073 samples, 0.67%)</title><rect x="257.8" y="101" width="7.9" height="15.0" fill="rgb(236,151,6)" rx="2" ry="2" />
<text  x="260.85" y="111.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (624,952 samples, 0.16%)</title><rect x="36.3" y="181" width="1.9" height="15.0" fill="rgb(217,65,14)" rx="2" ry="2" />
<text  x="39.30" y="191.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (748,843 samples, 0.19%)</title><rect x="50.8" y="197" width="2.3" height="15.0" fill="rgb(247,129,28)" rx="2" ry="2" />
<text  x="53.83" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (1,254,699 samples, 0.32%)</title><rect x="117.0" y="149" width="3.8" height="15.0" fill="rgb(217,197,21)" rx="2" ry="2" />
<text  x="120.02" y="159.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'issuperset' of 'frozenset' objects&gt; (419,481 samples, 0.11%)</title><rect x="370.9" y="37" width="1.2" height="15.0" fill="rgb(235,141,26)" rx="2" ry="2" />
<text  x="373.88" y="47.5" ></text>
</g>
<g >
<title>nacaddr.py:178:__deepcopy__ (917,430 samples, 0.24%)</title><rect x="66.4" y="229" width="2.8" height="15.0" fill="rgb(208,19,39)" rx="2" ry="2" />
<text  x="69.41" y="239.5" ></text>
</g>
<g >
<title>iptables.py:545:_GenerateAddressStatement (907,109 samples, 0.23%)</title><rect x="293.1" y="197" width="2.7" height="15.0" fill="rgb(246,45,25)" rx="2" ry="2" />
<text  x="296.05" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:360:get_mixed_type_key (880,954 samples, 0.23%)</title><rect x="188.6" y="149" width="2.7" height="15.0" fill="rgb(240,81,4)" rx="2" ry="2" />
<text  x="191.58" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (1,318,275 samples, 0.34%)</title><rect x="246.3" y="85" width="4.0" height="15.0" fill="rgb(210,8,41)" rx="2" ry="2" />
<text  x="249.34" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:670:__contains__ (8,067,689 samples, 2.07%)</title><rect x="96.4" y="165" width="24.4" height="15.0" fill="rgb(218,52,31)" rx="2" ry="2" />
<text  x="99.36" y="175.5" >i..</text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (1,313,130 samples, 0.34%)</title><rect x="181.5" y="133" width="4.0" height="15.0" fill="rgb(224,155,47)" rx="2" ry="2" />
<text  x="184.54" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:202:summarize_address_range (13,032,692 samples, 3.35%)</title><rect x="212.6" y="117" width="39.5" height="15.0" fill="rgb(213,63,6)" rx="2" ry="2" />
<text  x="215.60" y="127.5" >ipa..</text>
</g>
<g >
<title>yacc.py:325:parse (45,625,593 samples, 11.73%)</title><rect x="324.4" y="229" width="138.4" height="15.0" fill="rgb(223,13,44)" rx="2" ry="2" />
<text  x="327.39" y="239.5" >yacc.py:325:parse</text>
</g>
<g >
<title>__init__.py:336:info (686,347 samples, 0.18%)</title><rect x="23.4" y="229" width="2.1" height="15.0" fill="rgb(233,145,10)" rx="2" ry="2" />
<text  x="26.41" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:1883:__init__ (594,492 samples, 0.15%)</title><rect x="250.3" y="85" width="1.8" height="15.0" fill="rgb(254,168,52)" rx="2" ry="2" />
<text  x="253.33" y="95.5" ></text>
</g>
<g >
<title>nacaddr.py:120:supernet (413,899 samples, 0.11%)</title><rect x="159.1" y="149" width="1.3" height="15.0" fill="rgb(249,112,2)" rx="2" ry="2" />
<text  x="162.10" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (500,571 samples, 0.13%)</title><rect x="202.0" y="149" width="1.5" height="15.0" fill="rgb(240,117,31)" rx="2" ry="2" />
<text  x="204.96" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (1,698,101 samples, 0.44%)</title><rect x="168.2" y="117" width="5.2" height="15.0" fill="rgb(249,184,14)" rx="2" ry="2" />
<text  x="171.20" y="127.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,893,298 samples, 0.74%)</title><rect x="31.3" y="213" width="8.8" height="15.0" fill="rgb(248,50,41)" rx="2" ry="2" />
<text  x="34.33" y="223.5" ></text>
</g>
<g >
<title>naming.py:442:GetNetAddr (3,475,015 samples, 0.89%)</title><rect x="452.2" y="149" width="10.6" height="15.0" fill="rgb(215,98,9)" rx="2" ry="2" />
<text  x="455.24" y="159.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (749,927 samples, 0.19%)</title><rect x="41.9" y="181" width="2.3" height="15.0" fill="rgb(220,109,6)" rx="2" ry="2" />
<text  x="44.88" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (1,085,167 samples, 0.28%)</title><rect x="430.4" y="85" width="3.3" height="15.0" fill="rgb(211,3,42)" rx="2" ry="2" />
<text  x="433.40" y="95.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method posix.read&gt; (544,412 samples, 0.14%)</title><rect x="21.8" y="149" width="1.6" height="15.0" fill="rgb(230,141,10)" rx="2" ry="2" />
<text  x="24.75" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (1,023,155 samples, 0.26%)</title><rect x="412.4" y="53" width="3.1" height="15.0" fill="rgb(220,63,26)" rx="2" ry="2" />
<text  x="415.41" y="63.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (880,108 samples, 0.23%)</title><rect x="427.7" y="69" width="2.7" height="15.0" fill="rgb(221,43,9)" rx="2" ry="2" />
<text  x="430.73" y="79.5" ></text>
</g>
<g >
<title>naming.py:442:GetNetAddr (34,939,591 samples, 8.98%)</title><rect x="346.1" y="165" width="105.9" height="15.0" fill="rgb(222,70,13)" rx="2" ry="2" />
<text  x="349.05" y="175.5" >naming.py:44..</text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (2,341,201 samples, 0.60%)</title><rect x="435.0" y="85" width="7.1" height="15.0" fill="rgb(236,69,54)" rx="2" ry="2" />
<text  x="437.97" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:699:hostmask (2,916,069 samples, 0.75%)</title><rect x="132.7" y="149" width="8.9" height="15.0" fill="rgb(230,91,48)" rx="2" ry="2" />
<text  x="135.73" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (2,542,119 samples, 0.65%)</title><rect x="372.1" y="101" width="7.8" height="15.0" fill="rgb(239,210,42)" rx="2" ry="2" />
<text  x="375.15" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:186:_count_righthand_zero_bits (1,562,618 samples, 0.40%)</title><rect x="226.8" y="101" width="4.7" height="15.0" fill="rgb(222,202,54)" rx="2" ry="2" />
<text  x="229.80" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (5,277,712 samples, 1.36%)</title><rect x="399.5" y="117" width="16.0" height="15.0" fill="rgb(228,167,54)" rx="2" ry="2" />
<text  x="402.50" y="127.5" ></text>
</g>
<g >
<title>juniper.py:687:_Comment (529,021 samples, 0.14%)</title><rect x="311.6" y="213" width="1.6" height="15.0" fill="rgb(215,2,36)" rx="2" ry="2" />
<text  x="314.59" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (1,951,205 samples, 0.50%)</title><rect x="443.0" y="85" width="5.9" height="15.0" fill="rgb(232,159,28)" rx="2" ry="2" />
<text  x="445.99" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (4,387,014 samples, 1.13%)</title><rect x="256.6" y="117" width="13.3" height="15.0" fill="rgb(225,53,34)" rx="2" ry="2" />
<text  x="259.63" y="127.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (629,959 samples, 0.16%)</title><rect x="36.3" y="197" width="1.9" height="15.0" fill="rgb(245,10,35)" rx="2" ry="2" />
<text  x="39.29" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:153:__init__ (3,535,011 samples, 0.91%)</title><rect x="269.9" y="117" width="10.8" height="15.0" fill="rgb(241,157,17)" rx="2" ry="2" />
<text  x="272.94" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (799,302 samples, 0.21%)</title><rect x="453.3" y="101" width="2.4" height="15.0" fill="rgb(235,127,39)" rx="2" ry="2" />
<text  x="456.30" y="111.5" ></text>
</g>
<g >
<title>iptables.py:114:__str__ (73,694,907 samples, 18.94%)</title><rect x="73.7" y="229" width="223.5" height="15.0" fill="rgb(221,197,25)" rx="2" ry="2" />
<text  x="76.69" y="239.5" >iptables.py:114:__str__</text>
</g>
<g >
<title>policy.py:190:AddFilter (1,018,668 samples, 0.26%)</title><rect x="341.5" y="181" width="3.1" height="15.0" fill="rgb(221,207,28)" rx="2" ry="2" />
<text  x="344.53" y="191.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (807,362 samples, 0.21%)</title><rect x="263.3" y="69" width="2.4" height="15.0" fill="rgb(246,167,49)" rx="2" ry="2" />
<text  x="266.28" y="79.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (773,149 samples, 0.20%)</title><rect x="64.1" y="197" width="2.3" height="15.0" fill="rgb(243,145,21)" rx="2" ry="2" />
<text  x="67.06" y="207.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (971,479 samples, 0.25%)</title><rect x="341.7" y="101" width="2.9" height="15.0" fill="rgb(213,86,22)" rx="2" ry="2" />
<text  x="344.68" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (4,570,903 samples, 1.18%)</title><rect x="401.6" y="101" width="13.9" height="15.0" fill="rgb(253,95,1)" rx="2" ry="2" />
<text  x="404.65" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (468,971 samples, 0.12%)</title><rect x="320.2" y="165" width="1.4" height="15.0" fill="rgb(233,53,21)" rx="2" ry="2" />
<text  x="323.20" y="175.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (751,129 samples, 0.19%)</title><rect x="44.2" y="181" width="2.2" height="15.0" fill="rgb(212,8,27)" rx="2" ry="2" />
<text  x="47.16" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1179:_string_from_ip_int (614,221 samples, 0.16%)</title><rect x="301.2" y="181" width="1.9" height="15.0" fill="rgb(236,123,52)" rx="2" ry="2" />
<text  x="304.25" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (746,720 samples, 0.19%)</title><rect x="446.6" y="69" width="2.3" height="15.0" fill="rgb(230,102,17)" rx="2" ry="2" />
<text  x="449.64" y="79.5" ></text>
</g>
<g >
<title>nacaddr.py:153:__init__ (815,570 samples, 0.21%)</title><rect x="66.7" y="213" width="2.5" height="15.0" fill="rgb(205,95,0)" rx="2" ry="2" />
<text  x="69.72" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:153:__init__ (6,475,803 samples, 1.66%)</title><rect x="379.9" y="117" width="19.6" height="15.0" fill="rgb(214,168,22)" rx="2" ry="2" />
<text  x="382.86" y="127.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (2,237,184 samples, 0.58%)</title><rect x="334.7" y="85" width="6.8" height="15.0" fill="rgb(214,220,37)" rx="2" ry="2" />
<text  x="337.75" y="95.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (714,658 samples, 0.18%)</title><rect x="50.9" y="181" width="2.2" height="15.0" fill="rgb(205,205,32)" rx="2" ry="2" />
<text  x="53.94" y="191.5" ></text>
</g>
<g >
<title>aclgen.py:166:RenderFile (148,526,593 samples, 38.18%)</title><rect x="12.3" y="261" width="450.5" height="15.0" fill="rgb(234,5,7)" rx="2" ry="2" />
<text  x="15.25" y="271.5" >aclgen.py:166:RenderFile</text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (1,114,520 samples, 0.29%)</title><rect x="141.6" y="149" width="3.4" height="15.0" fill="rgb(227,132,44)" rx="2" ry="2" />
<text  x="144.57" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:172:supernet_of (4,283,938 samples, 1.10%)</title><rect x="160.4" y="149" width="13.0" height="15.0" fill="rgb(216,201,14)" rx="2" ry="2" />
<text  x="163.36" y="159.5" ></text>
</g>
<g >
<title>juniper.py:668:&lt;listcomp&gt; (414,448 samples, 0.11%)</title><rect x="305.0" y="197" width="1.3" height="15.0" fill="rgb(226,174,44)" rx="2" ry="2" />
<text  x="308.03" y="207.5" ></text>
</g>
<g >
<title>iptables.py:322:_CalculateAddresses (70,374,025 samples, 18.09%)</title><rect x="75.9" y="213" width="213.5" height="15.0" fill="rgb(224,164,36)" rx="2" ry="2" />
<text  x="78.94" y="223.5" >iptables.py:322:_CalculateAd..</text>
</g>
<g >
<title>nacaddr.py:30:IP (9,037,857 samples, 2.32%)</title><rect x="421.5" y="117" width="27.4" height="15.0" fill="rgb(253,31,43)" rx="2" ry="2" />
<text  x="424.49" y="127.5" >n..</text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (760,221 samples, 0.20%)</title><rect x="71.3" y="197" width="2.3" height="15.0" fill="rgb(222,175,34)" rx="2" ry="2" />
<text  x="74.34" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:93:supernet_of (1,660,186 samples, 0.43%)</title><rect x="180.5" y="149" width="5.0" height="15.0" fill="rgb(247,15,2)" rx="2" ry="2" />
<text  x="183.49" y="159.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (684,999 samples, 0.18%)</title><rect x="287.3" y="69" width="2.1" height="15.0" fill="rgb(217,2,36)" rx="2" ry="2" />
<text  x="290.33" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:613:__str__ (1,722,959 samples, 0.44%)</title><rect x="299.2" y="213" width="5.2" height="15.0" fill="rgb(242,11,26)" rx="2" ry="2" />
<text  x="302.20" y="223.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (1,623,806 samples, 0.42%)</title><rect x="175.6" y="133" width="4.9" height="15.0" fill="rgb(208,222,23)" rx="2" ry="2" />
<text  x="178.56" y="143.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (749,029 samples, 0.19%)</title><rect x="61.8" y="181" width="2.3" height="15.0" fill="rgb(213,28,19)" rx="2" ry="2" />
<text  x="64.79" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:400:RemoveAddressFromList (30,953,898 samples, 7.96%)</title><rect x="195.5" y="181" width="93.9" height="15.0" fill="rgb(222,94,47)" rx="2" ry="2" />
<text  x="198.51" y="191.5" >nacaddr.py:..</text>
</g>
<g >
<title>copy.py:268:_reconstruct (750,123 samples, 0.19%)</title><rect x="55.3" y="197" width="2.3" height="15.0" fill="rgb(250,45,11)" rx="2" ry="2" />
<text  x="58.33" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (7,952,868 samples, 2.04%)</title><rect x="120.8" y="165" width="24.2" height="15.0" fill="rgb(237,175,35)" rx="2" ry="2" />
<text  x="123.83" y="175.5" >i..</text>
</g>
<g >
<title>junipersrx.py:301:__init__ (1,412,816 samples, 0.36%)</title><rect x="317.3" y="245" width="4.3" height="15.0" fill="rgb(221,108,15)" rx="2" ry="2" />
<text  x="320.33" y="255.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (589,663 samples, 0.15%)</title><rect x="440.3" y="69" width="1.8" height="15.0" fill="rgb(220,106,13)" rx="2" ry="2" />
<text  x="443.28" y="79.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (767,003 samples, 0.20%)</title><rect x="64.1" y="181" width="2.3" height="15.0" fill="rgb(212,170,50)" rx="2" ry="2" />
<text  x="67.08" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:588:__hash__ (1,111,563 samples, 0.29%)</title><rect x="146.4" y="165" width="3.4" height="15.0" fill="rgb(244,204,37)" rx="2" ry="2" />
<text  x="149.44" y="175.5" ></text>
</g>
<g >
<title>iptables.py:403:_FormatPart (2,581,884 samples, 0.66%)</title><rect x="289.4" y="213" width="7.8" height="15.0" fill="rgb(231,84,8)" rx="2" ry="2" />
<text  x="292.40" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:417:&lt;genexpr&gt; (27,645,943 samples, 7.11%)</title><rect x="205.5" y="149" width="83.9" height="15.0" fill="rgb(254,39,37)" rx="2" ry="2" />
<text  x="208.54" y="159.5" >nacaddr.p..</text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (3,291,396 samples, 0.85%)</title><rect x="185.5" y="165" width="10.0" height="15.0" fill="rgb(246,206,48)" rx="2" ry="2" />
<text  x="188.53" y="175.5" ></text>
</g>
<g >
<title>juniper.py:97:Append (1,363,496 samples, 0.35%)</title><rect x="313.2" y="213" width="4.1" height="15.0" fill="rgb(249,124,40)" rx="2" ry="2" />
<text  x="316.20" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (514,778 samples, 0.13%)</title><rect x="428.8" y="37" width="1.6" height="15.0" fill="rgb(246,146,44)" rx="2" ry="2" />
<text  x="431.83" y="47.5" ></text>
</g>
<g >
<title>ipaddress.py:585:__str__ (1,227,662 samples, 0.32%)</title><rect x="300.7" y="197" width="3.7" height="15.0" fill="rgb(222,118,47)" rx="2" ry="2" />
<text  x="303.70" y="207.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'extend' of 'list' objects&gt; (27,788,252 samples, 7.14%)</title><rect x="205.1" y="165" width="84.3" height="15.0" fill="rgb(229,13,6)" rx="2" ry="2" />
<text  x="208.11" y="175.5" >~:0:&lt;meth..</text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (475,512 samples, 0.12%)</title><rect x="225.4" y="85" width="1.4" height="15.0" fill="rgb(217,2,30)" rx="2" ry="2" />
<text  x="228.35" y="95.5" ></text>
</g>
<g >
<title>__init__.py:1050:handle (576,038 samples, 0.15%)</title><rect x="23.7" y="149" width="1.8" height="15.0" fill="rgb(237,204,39)" rx="2" ry="2" />
<text  x="26.74" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:278:_SafeToMerge (2,353,069 samples, 0.60%)</title><rect x="173.4" y="149" width="7.1" height="15.0" fill="rgb(229,109,32)" rx="2" ry="2" />
<text  x="176.35" y="159.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (2,930,709 samples, 0.75%)</title><rect x="48.7" y="229" width="8.9" height="15.0" fill="rgb(221,51,3)" rx="2" ry="2" />
<text  x="51.72" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (8,036,593 samples, 2.07%)</title><rect x="355.5" y="117" width="24.4" height="15.0" fill="rgb(209,57,44)" rx="2" ry="2" />
<text  x="358.48" y="127.5" >i..</text>
</g>
<g >
<title>all (389,009,368 samples, 100%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(249,49,24)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>ipaddress.py:360:get_mixed_type_key (652,724 samples, 0.17%)</title><rect x="200.0" y="149" width="2.0" height="15.0" fill="rgb(250,118,31)" rx="2" ry="2" />
<text  x="202.98" y="159.5" ></text>
</g>
<g >
<title>cisco.py:639:__str__ (699,892 samples, 0.18%)</title><rect x="27.4" y="229" width="2.1" height="15.0" fill="rgb(226,10,6)" rx="2" ry="2" />
<text  x="30.38" y="239.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (748,879 samples, 0.19%)</title><rect x="61.8" y="165" width="2.3" height="15.0" fill="rgb(234,0,25)" rx="2" ry="2" />
<text  x="64.79" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (4,761,254 samples, 1.22%)</title><rect x="357.7" y="101" width="14.4" height="15.0" fill="rgb(224,197,14)" rx="2" ry="2" />
<text  x="360.71" y="111.5" ></text>
</g>
<g >
<title>policy.py:405:__init__ (3,543,830 samples, 0.91%)</title><rect x="452.0" y="181" width="10.8" height="15.0" fill="rgb(249,9,1)" rx="2" ry="2" />
<text  x="455.03" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (1,538,229 samples, 0.40%)</title><rect x="222.1" y="101" width="4.7" height="15.0" fill="rgb(236,169,12)" rx="2" ry="2" />
<text  x="225.13" y="111.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (610,997 samples, 0.16%)</title><rect x="34.4" y="197" width="1.9" height="15.0" fill="rgb(229,101,31)" rx="2" ry="2" />
<text  x="37.44" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (707,885 samples, 0.18%)</title><rect x="395.5" y="69" width="2.1" height="15.0" fill="rgb(224,73,44)" rx="2" ry="2" />
<text  x="398.47" y="79.5" ></text>
</g>
<g >
<title>aclgen.py:366:RenderACL (3,674,529 samples, 0.94%)</title><rect x="14.3" y="245" width="11.2" height="15.0" fill="rgb(222,223,39)" rx="2" ry="2" />
<text  x="17.34" y="255.5" ></text>
</g>
<g >
<title>naming.py:456:GetNet (62,359 samples, 0.02%)</title><rect x="462.6" y="101" width="0.2" height="15.0" fill="rgb(242,141,32)" rx="2" ry="2" />
<text  x="465.59" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (2,032,462 samples, 0.52%)</title><rect x="424.2" y="85" width="6.2" height="15.0" fill="rgb(230,56,22)" rx="2" ry="2" />
<text  x="427.23" y="95.5" ></text>
</g>
<g >
<title>policy.py:1290:cleanup (973,227 samples, 0.25%)</title><rect x="341.7" y="133" width="2.9" height="15.0" fill="rgb(219,1,22)" rx="2" ry="2" />
<text  x="344.67" y="143.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'match' of 're.Pattern' objects&gt; (404,183 samples, 0.10%)</title><rect x="450.8" y="133" width="1.2" height="15.0" fill="rgb(250,52,8)" rx="2" ry="2" />
<text  x="453.81" y="143.5" ></text>
</g>
<g >
<title>copy.py:268:_reconstruct (751,207 samples, 0.19%)</title><rect x="46.4" y="181" width="2.3" height="15.0" fill="rgb(230,207,35)" rx="2" ry="2" />
<text  x="49.44" y="191.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (2,100,856 samples, 0.54%)</title><rect x="198.7" y="165" width="6.4" height="15.0" fill="rgb(241,164,52)" rx="2" ry="2" />
<text  x="201.74" y="175.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (736,672 samples, 0.19%)</title><rect x="59.6" y="181" width="2.2" height="15.0" fill="rgb(213,195,16)" rx="2" ry="2" />
<text  x="62.55" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (472,162 samples, 0.12%)</title><rect x="268.5" y="85" width="1.4" height="15.0" fill="rgb(234,1,42)" rx="2" ry="2" />
<text  x="271.51" y="95.5" ></text>
</g>
<g >
<title>naming.py:456:GetNet (1,157,269 samples, 0.30%)</title><rect x="459.3" y="117" width="3.5" height="15.0" fill="rgb(226,200,38)" rx="2" ry="2" />
<text  x="462.27" y="127.5" ></text>
</g>
<g >
<title>&lt;string&gt;:1:append (2,943,175 samples, 0.76%)</title><rect x="14.5" y="229" width="8.9" height="15.0" fill="rgb(216,50,54)" rx="2" ry="2" />
<text  x="17.48" y="239.5" ></text>
</g>
<g >
<title>policy.py:197:_TranslateTerms (2,345,334 samples, 0.60%)</title><rect x="334.4" y="149" width="7.1" height="15.0" fill="rgb(233,35,17)" rx="2" ry="2" />
<text  x="337.42" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (954,890 samples, 0.25%)</title><rect x="286.5" y="85" width="2.9" height="15.0" fill="rgb(251,121,22)" rx="2" ry="2" />
<text  x="289.51" y="95.5" ></text>
</g>
<g >
<title>threading.py:1038:_wait_for_tstate_lock (239,300,866 samples, 61.52%)</title><rect x="464.1" y="261" width="725.9" height="15.0" fill="rgb(219,226,35)" rx="2" ry="2" />
<text  x="467.12" y="271.5" >threading.py:1038:_wait_for_tstate_lock</text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (3,210,219 samples, 0.83%)</title><rect x="163.6" y="133" width="9.8" height="15.0" fill="rgb(218,116,26)" rx="2" ry="2" />
<text  x="166.61" y="143.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (715,692 samples, 0.18%)</title><rect x="42.0" y="165" width="2.2" height="15.0" fill="rgb(250,145,26)" rx="2" ry="2" />
<text  x="44.99" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (675,599 samples, 0.17%)</title><rect x="191.3" y="149" width="2.0" height="15.0" fill="rgb(205,214,16)" rx="2" ry="2" />
<text  x="194.25" y="159.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (535,666 samples, 0.14%)</title><rect x="447.3" y="53" width="1.6" height="15.0" fill="rgb(244,65,7)" rx="2" ry="2" />
<text  x="450.28" y="63.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (754,050 samples, 0.19%)</title><rect x="278.4" y="85" width="2.3" height="15.0" fill="rgb(243,168,16)" rx="2" ry="2" />
<text  x="281.38" y="95.5" ></text>
</g>
<g >
<title>__init__.py:1496:_log (627,013 samples, 0.16%)</title><rect x="23.6" y="165" width="1.9" height="15.0" fill="rgb(230,49,12)" rx="2" ry="2" />
<text  x="26.59" y="175.5" ></text>
</g>
<g >
<title>naming.py:128:__init__ (439,732 samples, 0.11%)</title><rect x="462.8" y="261" width="1.3" height="15.0" fill="rgb(219,194,8)" rx="2" ry="2" />
<text  x="465.78" y="271.5" ></text>
</g>
<g >
<title>aclgen.py:501:Run (149,704,905 samples, 38.48%)</title><rect x="10.0" y="277" width="454.1" height="15.0" fill="rgb(225,161,33)" rx="2" ry="2" />
<text  x="13.01" y="287.5" >aclgen.py:501:Run</text>
</g>
<g >
<title>policy.py:1013:AddObject (35,181,032 samples, 9.04%)</title><rect x="345.3" y="181" width="106.7" height="15.0" fill="rgb(224,196,2)" rx="2" ry="2" />
<text  x="348.32" y="191.5" >policy.py:101..</text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (631,353 samples, 0.16%)</title><rect x="428.5" y="53" width="1.9" height="15.0" fill="rgb(223,73,1)" rx="2" ry="2" />
<text  x="431.48" y="63.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,831,847 samples, 0.73%)</title><rect x="40.1" y="197" width="8.6" height="15.0" fill="rgb(254,43,49)" rx="2" ry="2" />
<text  x="43.13" y="207.5" ></text>
</g>
<g >
<title>__init__.py:892:handle (556,758 samples, 0.14%)</title><rect x="23.8" y="101" width="1.7" height="15.0" fill="rgb(207,34,36)" rx="2" ry="2" />
<text  x="26.80" y="111.5" ></text>
</g>
<g >
<title>policy.py:197:_TranslateTerms (1,018,444 samples, 0.26%)</title><rect x="341.5" y="165" width="3.1" height="15.0" fill="rgb(210,197,7)" rx="2" ry="2" />
<text  x="344.54" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:87:subnet_of (1,749,042 samples, 0.45%)</title><rect x="306.3" y="197" width="5.3" height="15.0" fill="rgb(213,150,4)" rx="2" ry="2" />
<text  x="309.29" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:360:CollapseAddrList (16,667,741 samples, 4.28%)</title><rect x="145.0" y="181" width="50.5" height="15.0" fill="rgb(206,129,51)" rx="2" ry="2" />
<text  x="147.95" y="191.5" >nacad..</text>
</g>
<g >
<title>copy.py:268:_reconstruct (2,903,334 samples, 0.75%)</title><rect x="57.6" y="229" width="8.8" height="15.0" fill="rgb(215,67,18)" rx="2" ry="2" />
<text  x="60.61" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (1,125,465 samples, 0.29%)</title><rect x="262.3" y="85" width="3.4" height="15.0" fill="rgb(232,117,51)" rx="2" ry="2" />
<text  x="265.32" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (5,484,509 samples, 1.41%)</title><rect x="382.9" y="101" width="16.6" height="15.0" fill="rgb(214,199,47)" rx="2" ry="2" />
<text  x="385.87" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:99:__deepcopy__ (1,467,776 samples, 0.38%)</title><rect x="69.2" y="229" width="4.4" height="15.0" fill="rgb(235,205,9)" rx="2" ry="2" />
<text  x="72.20" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:1809:_string_from_ip_int (433,387 samples, 0.11%)</title><rect x="303.1" y="181" width="1.3" height="15.0" fill="rgb(254,57,12)" rx="2" ry="2" />
<text  x="306.11" y="191.5" ></text>
</g>
<g >
<title>naming.py:456:GetNet (11,635,778 samples, 2.99%)</title><rect x="415.5" y="133" width="35.3" height="15.0" fill="rgb(217,116,54)" rx="2" ry="2" />
<text  x="418.51" y="143.5" >na..</text>
</g>
<g >
<title>copy.py:132:deepcopy (748,707 samples, 0.19%)</title><rect x="46.4" y="165" width="2.3" height="15.0" fill="rgb(224,152,0)" rx="2" ry="2" />
<text  x="49.44" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (21,172,131 samples, 5.44%)</title><rect x="351.3" y="133" width="64.2" height="15.0" fill="rgb(215,25,32)" rx="2" ry="2" />
<text  x="354.29" y="143.5" >nacaddr..</text>
</g>
<g >
<title>naming.py:456:GetNet (34,934,712 samples, 8.98%)</title><rect x="346.1" y="149" width="105.9" height="15.0" fill="rgb(231,72,22)" rx="2" ry="2" />
<text  x="349.07" y="159.5" >naming.py:45..</text>
</g>
<g >
<title>ipaddress.py:1883:__init__ (793,436 samples, 0.20%)</title><rect x="130.3" y="149" width="2.4" height="15.0" fill="rgb(221,219,11)" rx="2" ry="2" />
<text  x="133.32" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:300:_CollapseAddrListInternal (11,775,314 samples, 3.03%)</title><rect x="149.8" y="165" width="35.7" height="15.0" fill="rgb(234,64,49)" rx="2" ry="2" />
<text  x="152.81" y="175.5" >nac..</text>
</g>
<g >
<title>naming.py:505:_Parse (438,709 samples, 0.11%)</title><rect x="462.8" y="245" width="1.3" height="15.0" fill="rgb(254,95,37)" rx="2" ry="2" />
<text  x="465.79" y="255.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (3,060,792 samples, 0.79%)</title><rect x="30.8" y="229" width="9.3" height="15.0" fill="rgb(225,129,39)" rx="2" ry="2" />
<text  x="33.83" y="239.5" ></text>
</g>
<g >
<title>nacaddr.py:395:SortAddrList (2,238,651 samples, 0.58%)</title><rect x="334.7" y="101" width="6.8" height="15.0" fill="rgb(238,127,20)" rx="2" ry="2" />
<text  x="337.74" y="111.5" ></text>
</g>
<g >
<title>naming.py:538:_ParseFile (435,548 samples, 0.11%)</title><rect x="462.8" y="229" width="1.3" height="15.0" fill="rgb(226,82,19)" rx="2" ry="2" />
<text  x="465.80" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:1883:__init__ (750,343 samples, 0.19%)</title><rect x="139.3" y="133" width="2.3" height="15.0" fill="rgb(211,162,15)" rx="2" ry="2" />
<text  x="142.29" y="143.5" ></text>
</g>
<g >
<title>policy.py:1912:p_term_spec (38,953,400 samples, 10.01%)</title><rect x="344.6" y="197" width="118.2" height="15.0" fill="rgb(216,219,28)" rx="2" ry="2" />
<text  x="347.62" y="207.5" >policy.py:1912..</text>
</g>
<g >
<title>nacaddr.py:74:__init__ (2,880,996 samples, 0.74%)</title><rect x="280.7" y="117" width="8.7" height="15.0" fill="rgb(211,102,2)" rx="2" ry="2" />
<text  x="283.67" y="127.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (610,308 samples, 0.16%)</title><rect x="34.4" y="181" width="1.9" height="15.0" fill="rgb(248,153,12)" rx="2" ry="2" />
<text  x="37.44" y="191.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (747,626 samples, 0.19%)</title><rect x="55.3" y="181" width="2.3" height="15.0" fill="rgb(211,173,28)" rx="2" ry="2" />
<text  x="58.34" y="191.5" ></text>
</g>
<g >
<title>aclgenerator.py:272:__init__ (618,283 samples, 0.16%)</title><rect x="25.5" y="245" width="1.9" height="15.0" fill="rgb(209,119,49)" rx="2" ry="2" />
<text  x="28.49" y="255.5" ></text>
</g>
<g >
<title>__init__.py:454:log (685,955 samples, 0.18%)</title><rect x="23.4" y="213" width="2.1" height="15.0" fill="rgb(234,106,23)" rx="2" ry="2" />
<text  x="26.41" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (524,910 samples, 0.13%)</title><rect x="457.7" y="101" width="1.6" height="15.0" fill="rgb(241,38,48)" rx="2" ry="2" />
<text  x="460.68" y="111.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'acquire' of '_thread.lock' objects&gt; (239,300,847 samples, 61.52%)</title><rect x="464.1" y="245" width="725.9" height="15.0" fill="rgb(235,8,23)" rx="2" ry="2" />
<text  x="467.12" y="255.5" >~:0:&lt;method 'acquire' of '_thread.lock' objects&gt;</text>
</g>
<g >
<title>lex.py:305:token (1,411,824 samples, 0.36%)</title><rect x="330.1" y="197" width="4.3" height="15.0" fill="rgb(219,150,30)" rx="2" ry="2" />
<text  x="333.12" y="207.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (627,928 samples, 0.16%)</title><rect x="38.2" y="181" width="1.9" height="15.0" fill="rgb(249,116,17)" rx="2" ry="2" />
<text  x="41.21" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:360:get_mixed_type_key (516,947 samples, 0.13%)</title><rect x="338.7" y="69" width="1.5" height="15.0" fill="rgb(206,94,50)" rx="2" ry="2" />
<text  x="341.67" y="79.5" ></text>
</g>
<g >
<title>iputils.py:7:exclude_address (14,367,208 samples, 3.69%)</title><rect x="208.6" y="133" width="43.5" height="15.0" fill="rgb(231,43,49)" rx="2" ry="2" />
<text  x="211.56" y="143.5" >iput..</text>
</g>
<g >
<title>ipaddress.py:1883:__init__ (622,935 samples, 0.16%)</title><rect x="397.6" y="85" width="1.9" height="15.0" fill="rgb(226,102,5)" rx="2" ry="2" />
<text  x="400.61" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:647:__lt__ (727,563 samples, 0.19%)</title><rect x="193.3" y="149" width="2.2" height="15.0" fill="rgb(238,49,40)" rx="2" ry="2" />
<text  x="196.30" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (443,255 samples, 0.11%)</title><rect x="378.5" y="69" width="1.4" height="15.0" fill="rgb(213,71,45)" rx="2" ry="2" />
<text  x="381.52" y="79.5" ></text>
</g>
</g>
</svg>

<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >"2020-06-18-10:20:03--04:00 cProfile"</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>sre_parse.py:417:_parse_sub (1,778 samples, 0.17%)</title><rect x="162.6" y="101" width="2.0" height="15.0" fill="rgb(250,221,49)" rx="2" ry="2" />
<text  x="165.63" y="111.5" ></text>
</g>
<g >
<title>__init__.py:1031:log (3,314 samples, 0.32%)</title><rect x="28.6" y="165" width="3.7" height="15.0" fill="rgb(227,188,42)" rx="2" ry="2" />
<text  x="31.61" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (1,380 samples, 0.13%)</title><rect x="1132.8" y="37" width="1.5" height="15.0" fill="rgb(239,204,9)" rx="2" ry="2" />
<text  x="1135.80" y="47.5" ></text>
</g>
<g >
<title>ciscoasa.py:206:_TermletToStr (1,409 samples, 0.13%)</title><rect x="37.3" y="165" width="1.6" height="15.0" fill="rgb(254,152,27)" rx="2" ry="2" />
<text  x="40.28" y="175.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (3,432 samples, 0.33%)</title><rect x="55.9" y="133" width="3.9" height="15.0" fill="rgb(209,159,19)" rx="2" ry="2" />
<text  x="58.92" y="143.5" ></text>
</g>
<g >
<title>__init__.py:1575:callHandlers (1,749 samples, 0.17%)</title><rect x="30.4" y="101" width="1.9" height="15.0" fill="rgb(253,22,50)" rx="2" ry="2" />
<text  x="33.37" y="111.5" ></text>
</g>
<g >
<title>&lt;frozen importlib._bootstrap&gt;:211:_call_with_frames_removed (3,746 samples, 0.36%)</title><rect x="1160.0" y="149" width="4.2" height="15.0" fill="rgb(219,67,28)" rx="2" ry="2" />
<text  x="1162.98" y="159.5" ></text>
</g>
<g >
<title>connection.py:483:Client (2,008 samples, 0.19%)</title><rect x="1173.8" y="213" width="2.2" height="15.0" fill="rgb(217,190,8)" rx="2" ry="2" />
<text  x="1176.79" y="223.5" ></text>
</g>
<g >
<title>sre_parse.py:417:_parse_sub (2,498 samples, 0.24%)</title><rect x="199.0" y="85" width="2.8" height="15.0" fill="rgb(205,111,6)" rx="2" ry="2" />
<text  x="201.95" y="95.5" ></text>
</g>
<g >
<title>yacc.py:3129:get_pfunctions (4,238 samples, 0.40%)</title><rect x="1051.6" y="165" width="4.8" height="15.0" fill="rgb(248,114,5)" rx="2" ry="2" />
<text  x="1054.60" y="175.5" ></text>
</g>
<g >
<title>&lt;frozen importlib._bootstrap&gt;:948:_find_and_load_unlocked (10,468 samples, 1.00%)</title><rect x="1156.9" y="197" width="11.8" height="15.0" fill="rgb(253,4,27)" rx="2" ry="2" />
<text  x="1159.93" y="207.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (13,748 samples, 1.31%)</title><rect x="67.9" y="165" width="15.4" height="15.0" fill="rgb(206,124,28)" rx="2" ry="2" />
<text  x="70.86" y="175.5" ></text>
</g>
<g >
<title>connection.py:208:recv_bytes (1,304 samples, 0.12%)</title><rect x="1174.6" y="181" width="1.4" height="15.0" fill="rgb(245,98,24)" rx="2" ry="2" />
<text  x="1177.58" y="191.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (3,769 samples, 0.36%)</title><rect x="103.9" y="165" width="4.2" height="15.0" fill="rgb(214,25,20)" rx="2" ry="2" />
<text  x="106.85" y="175.5" ></text>
</g>
<g >
<title>cloudarmor.py:55:ConvertToDict (1,170 samples, 0.11%)</title><rect x="38.9" y="181" width="1.3" height="15.0" fill="rgb(254,48,37)" rx="2" ry="2" />
<text  x="41.90" y="191.5" ></text>
</g>
<g >
<title>util.py:170:__call__ (4,163 samples, 0.40%)</title><rect x="1185.3" y="245" width="4.7" height="15.0" fill="rgb(206,26,23)" rx="2" ry="2" />
<text  x="1188.33" y="255.5" ></text>
</g>
<g >
<title>yacc.py:2068:traverse (8,365 samples, 0.80%)</title><rect x="890.5" y="101" width="9.4" height="15.0" fill="rgb(247,151,47)" rx="2" ry="2" />
<text  x="893.53" y="111.5" ></text>
</g>
<g >
<title>connection.py:736:answer_challenge (1,648 samples, 0.16%)</title><rect x="1174.2" y="197" width="1.8" height="15.0" fill="rgb(205,211,38)" rx="2" ry="2" />
<text  x="1177.20" y="207.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (1,600 samples, 0.15%)</title><rect x="761.6" y="133" width="1.8" height="15.0" fill="rgb(216,21,31)" rx="2" ry="2" />
<text  x="764.64" y="143.5" ></text>
</g>
<g >
<title>aclgen.py:456:_WriteFile (6,524 samples, 0.62%)</title><rect x="1147.1" y="213" width="7.3" height="15.0" fill="rgb(219,57,39)" rx="2" ry="2" />
<text  x="1150.07" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:88:__deepcopy__ (1,094 samples, 0.10%)</title><rect x="82.1" y="149" width="1.2" height="15.0" fill="rgb(210,80,13)" rx="2" ry="2" />
<text  x="85.06" y="159.5" ></text>
</g>
<g >
<title>__init__.py:1434:log (3,213 samples, 0.31%)</title><rect x="28.7" y="149" width="3.6" height="15.0" fill="rgb(237,191,23)" rx="2" ry="2" />
<text  x="31.73" y="159.5" ></text>
</g>
<g >
<title>__init__.py:454:log (3,546 samples, 0.34%)</title><rect x="1148.0" y="181" width="4.0" height="15.0" fill="rgb(207,78,9)" rx="2" ry="2" />
<text  x="1150.99" y="191.5" ></text>
</g>
<g >
<title>yacc.py:2329:reads_relation (1,881 samples, 0.18%)</title><rect x="930.1" y="69" width="2.2" height="15.0" fill="rgb(220,106,15)" rx="2" ry="2" />
<text  x="933.14" y="79.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (9,029 samples, 0.86%)</title><rect x="851.6" y="117" width="10.1" height="15.0" fill="rgb(239,142,43)" rx="2" ry="2" />
<text  x="854.61" y="127.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (3,570 samples, 0.34%)</title><rect x="59.8" y="165" width="4.0" height="15.0" fill="rgb(243,227,8)" rx="2" ry="2" />
<text  x="62.77" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:29:IP (6,135 samples, 0.58%)</title><rect x="1129.5" y="85" width="6.9" height="15.0" fill="rgb(217,92,48)" rx="2" ry="2" />
<text  x="1132.47" y="95.5" ></text>
</g>
<g >
<title>yacc.py:130:__call__ (8,341 samples, 0.79%)</title><rect x="674.1" y="149" width="9.4" height="15.0" fill="rgb(226,229,27)" rx="2" ry="2" />
<text  x="677.10" y="159.5" ></text>
</g>
<g >
<title>nsxv.py:125:__str__ (6,418 samples, 0.61%)</title><rect x="149.0" y="197" width="7.2" height="15.0" fill="rgb(211,136,38)" rx="2" ry="2" />
<text  x="151.96" y="207.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method posix.read&gt; (2,362 samples, 0.22%)</title><rect x="1169.2" y="149" width="2.6" height="15.0" fill="rgb(212,151,22)" rx="2" ry="2" />
<text  x="1172.19" y="159.5" ></text>
</g>
<g >
<title>re.py:271:_compile (3,083 samples, 0.29%)</title><rect x="161.2" y="149" width="3.4" height="15.0" fill="rgb(254,11,43)" rx="2" ry="2" />
<text  x="164.16" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:29:IP (3,506 samples, 0.33%)</title><rect x="1121.2" y="101" width="3.9" height="15.0" fill="rgb(223,188,7)" rx="2" ry="2" />
<text  x="1124.19" y="111.5" ></text>
</g>
<g >
<title>iptables.py:808:__str__ (4,784 samples, 0.45%)</title><rect x="128.9" y="213" width="5.4" height="15.0" fill="rgb(252,63,2)" rx="2" ry="2" />
<text  x="131.90" y="223.5" ></text>
</g>
<g >
<title>yacc.py:1838:compute_first (41,984 samples, 3.99%)</title><rect x="255.0" y="165" width="47.1" height="15.0" fill="rgb(232,45,50)" rx="2" ry="2" />
<text  x="257.95" y="175.5" >yacc..</text>
</g>
<g >
<title>yacc.py:2372:compute_lookback_includes (18,729 samples, 1.78%)</title><rect x="868.9" y="133" width="21.0" height="15.0" fill="rgb(230,220,50)" rx="2" ry="2" />
<text  x="871.89" y="143.5" ></text>
</g>
<g >
<title>policy.py:1862:p_target (3,288 samples, 0.31%)</title><rect x="1113.8" y="165" width="3.7" height="15.0" fill="rgb(251,131,32)" rx="2" ry="2" />
<text  x="1116.84" y="175.5" ></text>
</g>
<g >
<title>policy.py:199:_TranslateTerms (2,651 samples, 0.25%)</title><rect x="1114.6" y="117" width="2.9" height="15.0" fill="rgb(222,107,22)" rx="2" ry="2" />
<text  x="1117.56" y="127.5" ></text>
</g>
<g >
<title>naming.py:452:GetNet (2,442 samples, 0.23%)</title><rect x="1136.4" y="85" width="2.7" height="15.0" fill="rgb(247,175,37)" rx="2" ry="2" />
<text  x="1139.36" y="95.5" ></text>
</g>
<g >
<title>inspect.py:946:getsourcelines (1,597 samples, 0.15%)</title><rect x="177.7" y="133" width="1.8" height="15.0" fill="rgb(253,72,43)" rx="2" ry="2" />
<text  x="180.69" y="143.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (2,905 samples, 0.28%)</title><rect x="90.7" y="165" width="3.2" height="15.0" fill="rgb(241,99,49)" rx="2" ry="2" />
<text  x="93.66" y="175.5" ></text>
</g>
<g >
<title>juniper.py:892:_TranslatePolicy (1,544 samples, 0.15%)</title><rect x="40.2" y="197" width="1.7" height="15.0" fill="rgb(240,20,2)" rx="2" ry="2" />
<text  x="43.21" y="207.5" ></text>
</g>
<g >
<title>aclgenerator.py:276:__init__ (1,198 samples, 0.11%)</title><rect x="127.6" y="197" width="1.3" height="15.0" fill="rgb(226,67,27)" rx="2" ry="2" />
<text  x="130.55" y="207.5" ></text>
</g>
<g >
<title>__init__.py:1575:callHandlers (1,776 samples, 0.17%)</title><rect x="1150.0" y="101" width="2.0" height="15.0" fill="rgb(253,135,8)" rx="2" ry="2" />
<text  x="1152.98" y="111.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'append' of 'list' objects&gt; (8,983 samples, 0.85%)</title><rect x="1022.9" y="149" width="10.0" height="15.0" fill="rgb(250,122,16)" rx="2" ry="2" />
<text  x="1025.87" y="159.5" ></text>
</g>
<g >
<title>policy.py:407:__init__ (10,460 samples, 0.99%)</title><rect x="1127.4" y="149" width="11.7" height="15.0" fill="rgb(218,191,7)" rx="2" ry="2" />
<text  x="1130.36" y="159.5" ></text>
</g>
<g >
<title>expatbuilder.py:917:parseString (3,008 samples, 0.29%)</title><rect x="140.7" y="181" width="3.4" height="15.0" fill="rgb(224,212,38)" rx="2" ry="2" />
<text  x="143.70" y="191.5" ></text>
</g>
<g >
<title>__init__.py:336:info (3,540 samples, 0.34%)</title><rect x="28.4" y="197" width="3.9" height="15.0" fill="rgb(241,99,24)" rx="2" ry="2" />
<text  x="31.36" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:29:IP (1,992 samples, 0.19%)</title><rect x="1136.8" y="69" width="2.2" height="15.0" fill="rgb(238,178,46)" rx="2" ry="2" />
<text  x="1139.76" y="79.5" ></text>
</g>
<g >
<title>yacc.py:288:__init__ (3,327 samples, 0.32%)</title><rect x="1047.6" y="181" width="3.8" height="15.0" fill="rgb(235,126,41)" rx="2" ry="2" />
<text  x="1050.62" y="191.5" ></text>
</g>
<g >
<title>yacc.py:1803:_first (2,286 samples, 0.22%)</title><rect x="369.1" y="149" width="2.6" height="15.0" fill="rgb(226,115,50)" rx="2" ry="2" />
<text  x="372.10" y="159.5" ></text>
</g>
<g >
<title>policy.py:1912:p_term_spec (19,217 samples, 1.83%)</title><rect x="1117.5" y="165" width="21.6" height="15.0" fill="rgb(219,160,6)" rx="2" ry="2" />
<text  x="1120.53" y="175.5" >p..</text>
</g>
<g >
<title>__init__.py:892:handle (1,663 samples, 0.16%)</title><rect x="1150.1" y="69" width="1.9" height="15.0" fill="rgb(239,93,52)" rx="2" ry="2" />
<text  x="1153.11" y="79.5" ></text>
</g>
<g >
<title>cisco.py:825:_GetIpString (1,858 samples, 0.18%)</title><rect x="46.9" y="165" width="2.1" height="15.0" fill="rgb(238,175,28)" rx="2" ry="2" />
<text  x="49.94" y="175.5" ></text>
</g>
<g >
<title>policy.py:192:AddFilter (2,673 samples, 0.25%)</title><rect x="1114.5" y="133" width="3.0" height="15.0" fill="rgb(207,221,26)" rx="2" ry="2" />
<text  x="1117.53" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (4,242 samples, 0.40%)</title><rect x="121.2" y="165" width="4.8" height="15.0" fill="rgb(210,74,2)" rx="2" ry="2" />
<text  x="124.22" y="175.5" ></text>
</g>
<g >
<title>nsxv.py:618:__str__ (15,456 samples, 1.47%)</title><rect x="138.8" y="213" width="17.4" height="15.0" fill="rgb(243,88,53)" rx="2" ry="2" />
<text  x="141.82" y="223.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (177 samples, 0.02%)</title><rect x="55.7" y="165" width="0.2" height="15.0" fill="rgb(251,222,4)" rx="2" ry="2" />
<text  x="58.70" y="175.5" ></text>
</g>
<g >
<title>policy.py:2466:_Preprocess (1,121 samples, 0.11%)</title><rect x="201.8" y="197" width="1.2" height="15.0" fill="rgb(214,2,5)" rx="2" ry="2" />
<text  x="204.76" y="207.5" ></text>
</g>
<g >
<title>__init__.py:1496:_log (3,071 samples, 0.29%)</title><rect x="28.9" y="133" width="3.4" height="15.0" fill="rgb(231,19,49)" rx="2" ry="2" />
<text  x="31.88" y="143.5" ></text>
</g>
<g >
<title>managers.py:783:_callmethod (7,024 samples, 0.67%)</title><rect x="20.5" y="181" width="7.9" height="15.0" fill="rgb(227,104,35)" rx="2" ry="2" />
<text  x="23.48" y="191.5" ></text>
</g>
<g >
<title>genericpath.py:16:exists (4,277 samples, 0.41%)</title><rect x="1077.1" y="133" width="4.8" height="15.0" fill="rgb(254,15,48)" rx="2" ry="2" />
<text  x="1080.06" y="143.5" ></text>
</g>
<g >
<title>connection.py:906:wait (2,199 samples, 0.21%)</title><rect x="1187.5" y="181" width="2.5" height="15.0" fill="rgb(211,81,51)" rx="2" ry="2" />
<text  x="1190.53" y="191.5" ></text>
</g>
<g >
<title>__init__.py:1050:handle (1,827 samples, 0.17%)</title><rect x="1149.9" y="117" width="2.1" height="15.0" fill="rgb(246,47,34)" rx="2" ry="2" />
<text  x="1152.92" y="127.5" ></text>
</g>
<g >
<title>aclgen.py:144:RenderFile (1,004,673 samples, 95.55%)</title><rect x="11.6" y="229" width="1127.5" height="15.0" fill="rgb(214,124,0)" rx="2" ry="2" />
<text  x="14.62" y="239.5" >aclgen.py:144:RenderFile</text>
</g>
<g >
<title>copy.py:132:deepcopy (3,608 samples, 0.34%)</title><rect x="73.7" y="133" width="4.1" height="15.0" fill="rgb(221,226,39)" rx="2" ry="2" />
<text  x="76.74" y="143.5" ></text>
</g>
<g >
<title>re.py:232:compile (1,682 samples, 0.16%)</title><rect x="130.6" y="165" width="1.9" height="15.0" fill="rgb(225,115,45)" rx="2" ry="2" />
<text  x="133.56" y="175.5" ></text>
</g>
<g >
<title>cisco.py:1235:__str__ (6,310 samples, 0.60%)</title><rect x="41.9" y="213" width="7.1" height="15.0" fill="rgb(212,64,5)" rx="2" ry="2" />
<text  x="44.94" y="223.5" ></text>
</g>
<g >
<title>connection.py:246:recv (2,605 samples, 0.25%)</title><rect x="1168.9" y="197" width="2.9" height="15.0" fill="rgb(231,136,36)" rx="2" ry="2" />
<text  x="1171.91" y="207.5" ></text>
</g>
<g >
<title>&lt;frozen importlib._bootstrap_external&gt;:1272:find_spec (1,940 samples, 0.18%)</title><rect x="1166.5" y="165" width="2.2" height="15.0" fill="rgb(238,116,23)" rx="2" ry="2" />
<text  x="1169.50" y="175.5" ></text>
</g>
<g >
<title>managers.py:819:_incref (1,642 samples, 0.16%)</title><rect x="1181.5" y="197" width="1.9" height="15.0" fill="rgb(241,102,50)" rx="2" ry="2" />
<text  x="1184.52" y="207.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method posix.read&gt; (4,283 samples, 0.41%)</title><rect x="1142.3" y="133" width="4.8" height="15.0" fill="rgb(214,54,0)" rx="2" ry="2" />
<text  x="1145.26" y="143.5" ></text>
</g>
<g >
<title>cisco.py:805:&lt;listcomp&gt; (1,940 samples, 0.18%)</title><rect x="46.8" y="181" width="2.2" height="15.0" fill="rgb(224,74,43)" rx="2" ry="2" />
<text  x="49.85" y="191.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (3,814 samples, 0.36%)</title><rect x="112.2" y="165" width="4.3" height="15.0" fill="rgb(228,84,49)" rx="2" ry="2" />
<text  x="115.22" y="175.5" ></text>
</g>
<g >
<title>yacc.py:2139:lr0_closure (13,361 samples, 1.27%)</title><rect x="832.0" y="117" width="15.0" height="15.0" fill="rgb(233,78,38)" rx="2" ry="2" />
<text  x="835.03" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:70:__init__ (4,411 samples, 0.42%)</title><rect x="121.0" y="181" width="5.0" height="15.0" fill="rgb(244,228,51)" rx="2" ry="2" />
<text  x="124.03" y="191.5" ></text>
</g>
<g >
<title>__init__.py:1022:emit (1,172 samples, 0.11%)</title><rect x="1150.7" y="37" width="1.3" height="15.0" fill="rgb(231,48,33)" rx="2" ry="2" />
<text  x="1153.66" y="47.5" ></text>
</g>
<g >
<title>naming.py:452:GetNet (1,988 samples, 0.19%)</title><rect x="1125.1" y="101" width="2.3" height="15.0" fill="rgb(212,138,0)" rx="2" ry="2" />
<text  x="1128.13" y="111.5" ></text>
</g>
<g >
<title>connection.py:374:_recv (2,437 samples, 0.23%)</title><rect x="1169.1" y="165" width="2.7" height="15.0" fill="rgb(244,148,48)" rx="2" ry="2" />
<text  x="1172.10" y="175.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (3,454 samples, 0.33%)</title><rect x="55.9" y="165" width="3.9" height="15.0" fill="rgb(222,182,11)" rx="2" ry="2" />
<text  x="58.90" y="175.5" ></text>
</g>
<g >
<title>copy.py:268:_reconstruct (14,216 samples, 1.35%)</title><rect x="101.8" y="197" width="16.0" height="15.0" fill="rgb(252,67,1)" rx="2" ry="2" />
<text  x="104.83" y="207.5" ></text>
</g>
<g >
<title>managers.py:733:__init__ (1,806 samples, 0.17%)</title><rect x="1181.3" y="213" width="2.1" height="15.0" fill="rgb(211,149,36)" rx="2" ry="2" />
<text  x="1184.34" y="223.5" ></text>
</g>
<g >
<title>&lt;frozen importlib._bootstrap_external&gt;:722:exec_module (5,197 samples, 0.49%)</title><rect x="1160.0" y="165" width="5.8" height="15.0" fill="rgb(244,45,38)" rx="2" ry="2" />
<text  x="1162.96" y="175.5" ></text>
</g>
<g >
<title>&lt;frozen importlib._bootstrap&gt;:576:module_from_spec (2,327 samples, 0.22%)</title><rect x="1157.3" y="165" width="2.7" height="15.0" fill="rgb(254,97,25)" rx="2" ry="2" />
<text  x="1160.35" y="175.5" ></text>
</g>
<g >
<title>yacc.py:1654:mark_reachable_from (2,131 samples, 0.20%)</title><rect x="246.2" y="165" width="2.4" height="15.0" fill="rgb(240,65,48)" rx="2" ry="2" />
<text  x="249.17" y="175.5" ></text>
</g>
<g >
<title>connection.py:483:Client (4,379 samples, 0.42%)</title><rect x="1176.4" y="197" width="4.9" height="15.0" fill="rgb(251,133,45)" rx="2" ry="2" />
<text  x="1179.42" y="207.5" ></text>
</g>
<g >
<title>connection.py:374:_recv (4,418 samples, 0.42%)</title><rect x="1142.1" y="149" width="5.0" height="15.0" fill="rgb(210,178,8)" rx="2" ry="2" />
<text  x="1145.11" y="159.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (14,593 samples, 1.39%)</title><rect x="51.4" y="197" width="16.3" height="15.0" fill="rgb(226,228,54)" rx="2" ry="2" />
<text  x="54.36" y="207.5" ></text>
</g>
<g >
<title>yacc.py:127:__getattribute__ (8,661 samples, 0.82%)</title><rect x="664.4" y="149" width="9.7" height="15.0" fill="rgb(211,75,9)" rx="2" ry="2" />
<text  x="667.38" y="159.5" ></text>
</g>
<g >
<title>re.py:232:compile (3,094 samples, 0.29%)</title><rect x="161.2" y="165" width="3.4" height="15.0" fill="rgb(207,199,3)" rx="2" ry="2" />
<text  x="164.15" y="175.5" ></text>
</g>
<g >
<title>lex.py:493:_form_master_re (3,469 samples, 0.33%)</title><rect x="160.7" y="181" width="3.9" height="15.0" fill="rgb(215,200,51)" rx="2" ry="2" />
<text  x="163.73" y="191.5" ></text>
</g>
<g >
<title>&lt;frozen importlib._bootstrap_external&gt;:793:get_code (1,427 samples, 0.14%)</title><rect x="1164.2" y="149" width="1.6" height="15.0" fill="rgb(225,3,25)" rx="2" ry="2" />
<text  x="1167.19" y="159.5" ></text>
</g>
<g >
<title>yacc.py:2200:lr0_items (87,607 samples, 8.33%)</title><rect x="763.4" y="149" width="98.3" height="15.0" fill="rgb(225,33,16)" rx="2" ry="2" />
<text  x="766.43" y="159.5" >yacc.py:220..</text>
</g>
<g >
<title>yacc.py:2534:lr_parse_table (575,364 samples, 54.72%)</title><rect x="401.9" y="165" width="645.7" height="15.0" fill="rgb(215,124,4)" rx="2" ry="2" />
<text  x="404.93" y="175.5" >yacc.py:2534:lr_parse_table</text>
</g>
<g >
<title>aclgenerator.py:276:__init__ (8,566 samples, 0.81%)</title><rect x="32.3" y="213" width="9.6" height="15.0" fill="rgb(217,1,38)" rx="2" ry="2" />
<text  x="35.33" y="223.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (2,830 samples, 0.27%)</title><rect x="93.9" y="149" width="3.2" height="15.0" fill="rgb(205,204,48)" rx="2" ry="2" />
<text  x="96.94" y="159.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'match' of 're.Pattern' objects&gt; (15,442 samples, 1.47%)</title><rect x="179.5" y="133" width="17.3" height="15.0" fill="rgb(248,114,46)" rx="2" ry="2" />
<text  x="182.49" y="143.5" ></text>
</g>
<g >
<title>connection.py:374:_recv (1,273 samples, 0.12%)</title><rect x="1174.6" y="149" width="1.4" height="15.0" fill="rgb(235,48,26)" rx="2" ry="2" />
<text  x="1177.62" y="159.5" ></text>
</g>
<g >
<title>yacc.py:315:set_defaulted_states (3,281 samples, 0.31%)</title><rect x="1047.7" y="165" width="3.7" height="15.0" fill="rgb(250,136,5)" rx="2" ry="2" />
<text  x="1050.67" y="175.5" ></text>
</g>
<g >
<title>yacc.py:1456:rightmost_terminal (1,129 samples, 0.11%)</title><rect x="230.2" y="165" width="1.3" height="15.0" fill="rgb(251,127,17)" rx="2" ry="2" />
<text  x="233.20" y="175.5" ></text>
</g>
<g >
<title>minidom.py:849:writexml (2,570 samples, 0.24%)</title><rect x="146.1" y="149" width="2.9" height="15.0" fill="rgb(207,132,43)" rx="2" ry="2" />
<text  x="149.08" y="159.5" ></text>
</g>
<g >
<title>managers.py:783:_callmethod (6,220 samples, 0.59%)</title><rect x="1140.1" y="197" width="7.0" height="15.0" fill="rgb(226,225,19)" rx="2" ry="2" />
<text  x="1143.09" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (1,631 samples, 0.16%)</title><rect x="1134.5" y="53" width="1.9" height="15.0" fill="rgb(243,201,8)" rx="2" ry="2" />
<text  x="1137.53" y="63.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.any&gt; (2,090 samples, 0.20%)</title><rect x="1081.9" y="133" width="2.3" height="15.0" fill="rgb(245,167,8)" rx="2" ry="2" />
<text  x="1084.86" y="143.5" ></text>
</g>
<g >
<title>copy.py:252:_keep_alive (1,118 samples, 0.11%)</title><rect x="100.6" y="197" width="1.2" height="15.0" fill="rgb(214,186,19)" rx="2" ry="2" />
<text  x="103.58" y="207.5" ></text>
</g>
<g >
<title>sre_compile.py:759:compile (3,944 samples, 0.38%)</title><rect x="197.3" y="117" width="4.5" height="15.0" fill="rgb(239,62,9)" rx="2" ry="2" />
<text  x="200.33" y="127.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (3,672 samples, 0.35%)</title><rect x="77.9" y="133" width="4.2" height="15.0" fill="rgb(222,16,28)" rx="2" ry="2" />
<text  x="80.94" y="143.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (3,437 samples, 0.33%)</title><rect x="55.9" y="149" width="3.9" height="15.0" fill="rgb(245,33,34)" rx="2" ry="2" />
<text  x="58.92" y="159.5" ></text>
</g>
<g >
<title>inspect.py:680:getsourcefile (8,629 samples, 0.82%)</title><rect x="1074.5" y="149" width="9.7" height="15.0" fill="rgb(221,106,25)" rx="2" ry="2" />
<text  x="1077.52" y="159.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (13,076 samples, 1.24%)</title><rect x="1032.9" y="149" width="14.7" height="15.0" fill="rgb(241,177,40)" rx="2" ry="2" />
<text  x="1035.95" y="159.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (15,409 samples, 1.47%)</title><rect x="83.3" y="197" width="17.3" height="15.0" fill="rgb(230,39,28)" rx="2" ry="2" />
<text  x="86.29" y="207.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (186 samples, 0.02%)</title><rect x="97.1" y="165" width="0.2" height="15.0" fill="rgb(206,96,36)" rx="2" ry="2" />
<text  x="100.11" y="175.5" ></text>
</g>
<g >
<title>yacc.py:2139:lr0_closure (2,367 samples, 0.23%)</title><rect x="759.0" y="133" width="2.6" height="15.0" fill="rgb(213,194,33)" rx="2" ry="2" />
<text  x="761.98" y="143.5" ></text>
</g>
<g >
<title>minidom.py:1964:parseString (4,588 samples, 0.44%)</title><rect x="138.9" y="197" width="5.2" height="15.0" fill="rgb(228,181,6)" rx="2" ry="2" />
<text  x="141.93" y="207.5" ></text>
</g>
<g >
<title>cisco.py:643:__str__ (6,018 samples, 0.57%)</title><rect x="42.3" y="197" width="6.7" height="15.0" fill="rgb(232,70,41)" rx="2" ry="2" />
<text  x="45.27" y="207.5" ></text>
</g>
<g >
<title>yacc.py:2452:compute_read_sets (8,919 samples, 0.85%)</title><rect x="889.9" y="133" width="10.0" height="15.0" fill="rgb(231,210,29)" rx="2" ry="2" />
<text  x="892.91" y="143.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'append' of 'list' objects&gt; (3,004 samples, 0.29%)</title><rect x="298.7" y="133" width="3.4" height="15.0" fill="rgb(211,84,16)" rx="2" ry="2" />
<text  x="301.70" y="143.5" ></text>
</g>
<g >
<title>connection.py:374:_recv (2,778 samples, 0.26%)</title><rect x="1178.2" y="133" width="3.1" height="15.0" fill="rgb(250,67,37)" rx="2" ry="2" />
<text  x="1181.22" y="143.5" ></text>
</g>
<g >
<title>ciscoasa.py:74:__str__ (1,685 samples, 0.16%)</title><rect x="37.0" y="181" width="1.9" height="15.0" fill="rgb(215,178,30)" rx="2" ry="2" />
<text  x="39.97" y="191.5" ></text>
</g>
<g >
<title>yacc.py:1654:mark_reachable_from (1,793 samples, 0.17%)</title><rect x="246.6" y="149" width="2.0" height="15.0" fill="rgb(207,62,36)" rx="2" ry="2" />
<text  x="249.55" y="159.5" ></text>
</g>
<g >
<title>re.py:271:_compile (4,331 samples, 0.41%)</title><rect x="196.9" y="133" width="4.9" height="15.0" fill="rgb(208,172,5)" rx="2" ry="2" />
<text  x="199.90" y="143.5" ></text>
</g>
<g >
<title>juniper.py:187:__str__ (3,844 samples, 0.37%)</title><rect x="134.5" y="197" width="4.3" height="15.0" fill="rgb(239,6,41)" rx="2" ry="2" />
<text  x="137.51" y="207.5" ></text>
</g>
<g >
<title>yacc.py:2474:compute_follow_sets (31,591 samples, 3.00%)</title><rect x="899.9" y="133" width="35.5" height="15.0" fill="rgb(235,111,49)" rx="2" ry="2" />
<text  x="902.91" y="143.5" >yac..</text>
</g>
<g >
<title>re.py:271:_compile (1,667 samples, 0.16%)</title><rect x="130.6" y="149" width="1.9" height="15.0" fill="rgb(214,191,8)" rx="2" ry="2" />
<text  x="133.58" y="159.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (3,550 samples, 0.34%)</title><rect x="104.1" y="149" width="4.0" height="15.0" fill="rgb(225,118,53)" rx="2" ry="2" />
<text  x="107.10" y="159.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (3,587 samples, 0.34%)</title><rect x="69.4" y="133" width="4.0" height="15.0" fill="rgb(250,144,39)" rx="2" ry="2" />
<text  x="72.42" y="143.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (13,774 samples, 1.31%)</title><rect x="67.8" y="181" width="15.5" height="15.0" fill="rgb(212,30,34)" rx="2" ry="2" />
<text  x="70.83" y="191.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (3,570 samples, 0.34%)</title><rect x="112.5" y="149" width="4.0" height="15.0" fill="rgb(211,173,5)" rx="2" ry="2" />
<text  x="115.49" y="159.5" ></text>
</g>
<g >
<title>aclgen.py:558:main (1,051,472 samples, 100.00%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(253,4,53)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >aclgen.py:558:main</text>
</g>
<g >
<title>__init__.py:810:emit (1,534 samples, 0.15%)</title><rect x="30.6" y="53" width="1.7" height="15.0" fill="rgb(217,130,34)" rx="2" ry="2" />
<text  x="33.61" y="63.5" ></text>
</g>
<g >
<title>policy.py:1279:AddressCleanup (1,080 samples, 0.10%)</title><rect x="1116.3" y="101" width="1.2" height="15.0" fill="rgb(215,10,7)" rx="2" ry="2" />
<text  x="1119.32" y="111.5" ></text>
</g>
<g >
<title>lex.py:831:validate_module (25,528 samples, 2.43%)</title><rect x="168.2" y="149" width="28.6" height="15.0" fill="rgb(239,71,7)" rx="2" ry="2" />
<text  x="171.17" y="159.5" >le..</text>
</g>
<g >
<title>nacaddr.py:395:&lt;listcomp&gt; (3,333 samples, 0.32%)</title><rect x="152.4" y="149" width="3.8" height="15.0" fill="rgb(207,140,29)" rx="2" ry="2" />
<text  x="155.42" y="159.5" ></text>
</g>
<g >
<title>iptables.py:114:__str__ (4,391 samples, 0.42%)</title><rect x="129.3" y="197" width="5.0" height="15.0" fill="rgb(251,212,9)" rx="2" ry="2" />
<text  x="132.34" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (1,381 samples, 0.13%)</title><rect x="1123.6" y="69" width="1.5" height="15.0" fill="rgb(253,76,24)" rx="2" ry="2" />
<text  x="1126.58" y="79.5" ></text>
</g>
<g >
<title>nacaddr.py:88:__deepcopy__ (1,083 samples, 0.10%)</title><rect x="116.6" y="165" width="1.2" height="15.0" fill="rgb(246,174,30)" rx="2" ry="2" />
<text  x="119.57" y="175.5" ></text>
</g>
<g >
<title>connection.py:736:answer_challenge (3,596 samples, 0.34%)</title><rect x="1177.3" y="181" width="4.0" height="15.0" fill="rgb(252,157,25)" rx="2" ry="2" />
<text  x="1180.30" y="191.5" ></text>
</g>
<g >
<title>selectors.py:402:select (2,114 samples, 0.20%)</title><rect x="1187.6" y="165" width="2.4" height="15.0" fill="rgb(211,205,18)" rx="2" ry="2" />
<text  x="1190.63" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:736:address_exclude (1,522 samples, 0.14%)</title><rect x="152.5" y="133" width="1.7" height="15.0" fill="rgb(219,134,26)" rx="2" ry="2" />
<text  x="155.47" y="143.5" ></text>
</g>
<g >
<title>nacaddr.py:401:AddressListExclude (4,316 samples, 0.41%)</title><rect x="151.3" y="181" width="4.9" height="15.0" fill="rgb(238,169,41)" rx="2" ry="2" />
<text  x="154.32" y="191.5" ></text>
</g>
<g >
<title>__init__.py:1496:_log (3,119 samples, 0.30%)</title><rect x="1148.5" y="133" width="3.5" height="15.0" fill="rgb(218,142,1)" rx="2" ry="2" />
<text  x="1151.47" y="143.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method posix.read&gt; (2,693 samples, 0.26%)</title><rect x="1178.3" y="117" width="3.0" height="15.0" fill="rgb(243,147,31)" rx="2" ry="2" />
<text  x="1181.32" y="127.5" ></text>
</g>
<g >
<title>&lt;string&gt;:1:append (7,100 samples, 0.68%)</title><rect x="20.4" y="197" width="8.0" height="15.0" fill="rgb(208,159,8)" rx="2" ry="2" />
<text  x="23.39" y="207.5" ></text>
</g>
<g >
<title>lex.py:862:lex (37,952 samples, 3.61%)</title><rect x="159.2" y="197" width="42.6" height="15.0" fill="rgb(222,165,26)" rx="2" ry="2" />
<text  x="162.17" y="207.5" >lex...</text>
</g>
<g >
<title>&lt;frozen importlib._bootstrap_external&gt;:1356:find_spec (1,666 samples, 0.16%)</title><rect x="1166.8" y="133" width="1.9" height="15.0" fill="rgb(254,19,37)" rx="2" ry="2" />
<text  x="1169.81" y="143.5" ></text>
</g>
<g >
<title>yacc.py:2102:__init__ (707,430 samples, 67.28%)</title><rect x="253.7" y="181" width="793.9" height="15.0" fill="rgb(221,99,39)" rx="2" ry="2" />
<text  x="256.72" y="191.5" >yacc.py:2102:__init__</text>
</g>
<g >
<title>__init__.py:898:handle (1,674 samples, 0.16%)</title><rect x="30.5" y="85" width="1.8" height="15.0" fill="rgb(230,50,50)" rx="2" ry="2" />
<text  x="33.45" y="95.5" ></text>
</g>
<g >
<title>&lt;frozen importlib._bootstrap&gt;:882:_find_spec (2,575 samples, 0.24%)</title><rect x="1165.8" y="181" width="2.9" height="15.0" fill="rgb(252,51,44)" rx="2" ry="2" />
<text  x="1168.79" y="191.5" ></text>
</g>
<g >
<title>connection.py:406:_recv_bytes (2,500 samples, 0.24%)</title><rect x="1169.0" y="181" width="2.8" height="15.0" fill="rgb(213,74,29)" rx="2" ry="2" />
<text  x="1172.03" y="191.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'match' of 're.Pattern' objects&gt; (3,722 samples, 0.35%)</title><rect x="1109.7" y="149" width="4.1" height="15.0" fill="rgb(241,224,33)" rx="2" ry="2" />
<text  x="1112.66" y="159.5" ></text>
</g>
<g >
<title>re.py:232:compile (4,402 samples, 0.42%)</title><rect x="196.8" y="149" width="5.0" height="15.0" fill="rgb(210,53,8)" rx="2" ry="2" />
<text  x="199.82" y="159.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'append' of 'list' objects&gt; (6,962 samples, 0.66%)</title><rect x="1015.1" y="117" width="7.8" height="15.0" fill="rgb(226,89,0)" rx="2" ry="2" />
<text  x="1018.05" y="127.5" ></text>
</g>
<g >
<title>connection.py:374:_recv (4,995 samples, 0.48%)</title><rect x="22.8" y="133" width="5.6" height="15.0" fill="rgb(242,67,37)" rx="2" ry="2" />
<text  x="25.75" y="143.5" ></text>
</g>
<g >
<title>process.py:133:join (2,256 samples, 0.21%)</title><rect x="1187.5" y="213" width="2.5" height="15.0" fill="rgb(205,135,1)" rx="2" ry="2" />
<text  x="1190.47" y="223.5" ></text>
</g>
<g >
<title>aclgen.py:344:RenderACL (12,227 samples, 1.16%)</title><rect x="18.6" y="213" width="13.7" height="15.0" fill="rgb(226,171,27)" rx="2" ry="2" />
<text  x="21.61" y="223.5" ></text>
</g>
<g >
<title>policy.py:2523:ParsePolicy (875,869 samples, 83.30%)</title><rect x="156.2" y="213" width="982.9" height="15.0" fill="rgb(233,94,26)" rx="2" ry="2" />
<text  x="159.16" y="223.5" >policy.py:2523:ParsePolicy</text>
</g>
<g >
<title>~:0:&lt;method 'Parse' of 'pyexpat.xmlparser' objects&gt; (2,925 samples, 0.28%)</title><rect x="140.8" y="149" width="3.3" height="15.0" fill="rgb(240,204,24)" rx="2" ry="2" />
<text  x="143.80" y="159.5" ></text>
</g>
<g >
<title>connection.py:208:recv_bytes (2,845 samples, 0.27%)</title><rect x="1178.1" y="165" width="3.2" height="15.0" fill="rgb(239,207,49)" rx="2" ry="2" />
<text  x="1181.15" y="175.5" ></text>
</g>
<g >
<title>yacc.py:1003:parseopt_notrack (46,197 samples, 4.39%)</title><rect x="1087.3" y="181" width="51.8" height="15.0" fill="rgb(233,74,20)" rx="2" ry="2" />
<text  x="1090.25" y="191.5" >yacc...</text>
</g>
<g >
<title>yacc.py:1934:build_lritems (24,572 samples, 2.34%)</title><rect x="374.4" y="165" width="27.5" height="15.0" fill="rgb(243,221,30)" rx="2" ry="2" />
<text  x="377.35" y="175.5" >y..</text>
</g>
<g >
<title>~:0:&lt;built-in method posix.stat&gt; (3,910 samples, 0.37%)</title><rect x="1077.5" y="117" width="4.4" height="15.0" fill="rgb(250,135,46)" rx="2" ry="2" />
<text  x="1080.47" y="127.5" ></text>
</g>
<g >
<title>connection.py:483:Client (1,303 samples, 0.12%)</title><rect x="1181.9" y="181" width="1.5" height="15.0" fill="rgb(229,223,27)" rx="2" ry="2" />
<text  x="1184.90" y="191.5" ></text>
</g>
<g >
<title>&lt;frozen importlib._bootstrap_external&gt;:1240:_get_spec (1,904 samples, 0.18%)</title><rect x="1166.5" y="149" width="2.2" height="15.0" fill="rgb(206,35,54)" rx="2" ry="2" />
<text  x="1169.54" y="159.5" ></text>
</g>
<g >
<title>minidom.py:849:writexml (4,281 samples, 0.41%)</title><rect x="144.2" y="165" width="4.8" height="15.0" fill="rgb(234,40,37)" rx="2" ry="2" />
<text  x="147.16" y="175.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (14,245 samples, 1.35%)</title><rect x="84.6" y="181" width="16.0" height="15.0" fill="rgb(241,221,12)" rx="2" ry="2" />
<text  x="87.59" y="191.5" ></text>
</g>
<g >
<title>sre_parse.py:475:_parse (1,672 samples, 0.16%)</title><rect x="162.7" y="85" width="1.9" height="15.0" fill="rgb(221,30,47)" rx="2" ry="2" />
<text  x="165.75" y="95.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (3,401 samples, 0.32%)</title><rect x="63.9" y="149" width="3.8" height="15.0" fill="rgb(249,194,51)" rx="2" ry="2" />
<text  x="66.92" y="159.5" ></text>
</g>
<g >
<title>popen_fork.py:67:_launch (1,170 samples, 0.11%)</title><rect x="1172.3" y="149" width="1.3" height="15.0" fill="rgb(228,152,31)" rx="2" ry="2" />
<text  x="1175.26" y="159.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (3,341 samples, 0.32%)</title><rect x="60.0" y="149" width="3.8" height="15.0" fill="rgb(232,194,45)" rx="2" ry="2" />
<text  x="63.03" y="159.5" ></text>
</g>
<g >
<title>aclgen.py:466:DiscoverAllPolicies (1,568 samples, 0.15%)</title><rect x="1154.4" y="229" width="1.7" height="15.0" fill="rgb(216,134,40)" rx="2" ry="2" />
<text  x="1157.39" y="239.5" ></text>
</g>
<g >
<title>nacaddr.py:378:RemoveAddressFromList (3,554 samples, 0.34%)</title><rect x="152.2" y="165" width="4.0" height="15.0" fill="rgb(218,202,25)" rx="2" ry="2" />
<text  x="155.18" y="175.5" ></text>
</g>
<g >
<title>yacc.py:1349:__len__ (1,484 samples, 0.14%)</title><rect x="400.3" y="133" width="1.6" height="15.0" fill="rgb(234,107,16)" rx="2" ry="2" />
<text  x="403.26" y="143.5" ></text>
</g>
<g >
<title>cisco.py:825:_GetIpString (1,619 samples, 0.15%)</title><rect x="45.0" y="165" width="1.8" height="15.0" fill="rgb(232,215,35)" rx="2" ry="2" />
<text  x="48.03" y="175.5" ></text>
</g>
<g >
<title>expatbuilder.py:219:parseString (2,973 samples, 0.28%)</title><rect x="140.7" y="165" width="3.4" height="15.0" fill="rgb(214,13,48)" rx="2" ry="2" />
<text  x="143.74" y="175.5" ></text>
</g>
<g >
<title>yacc.py:2165:lr0_goto (74,144 samples, 7.05%)</title><rect x="778.5" y="133" width="83.2" height="15.0" fill="rgb(243,211,35)" rx="2" ry="2" />
<text  x="781.54" y="143.5" >yacc.py:2..</text>
</g>
<g >
<title>__init__.py:1022:emit (1,154 samples, 0.11%)</title><rect x="31.0" y="37" width="1.3" height="15.0" fill="rgb(227,145,49)" rx="2" ry="2" />
<text  x="34.04" y="47.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (1,967 samples, 0.19%)</title><rect x="1122.9" y="85" width="2.2" height="15.0" fill="rgb(228,170,4)" rx="2" ry="2" />
<text  x="1125.92" y="95.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'append' of 'list' objects&gt; (2,773 samples, 0.26%)</title><rect x="932.3" y="85" width="3.1" height="15.0" fill="rgb(212,131,42)" rx="2" ry="2" />
<text  x="935.25" y="95.5" ></text>
</g>
<g >
<title>yacc.py:1430:__init__ (10,510 samples, 1.00%)</title><rect x="386.0" y="149" width="11.8" height="15.0" fill="rgb(229,147,21)" rx="2" ry="2" />
<text  x="388.99" y="159.5" ></text>
</g>
<g >
<title>&lt;frozen importlib._bootstrap&gt;:978:_find_and_load (11,117 samples, 1.06%)</title><rect x="1156.2" y="213" width="12.5" height="15.0" fill="rgb(219,157,38)" rx="2" ry="2" />
<text  x="1159.20" y="223.5" ></text>
</g>
<g >
<title>all (1,051,472 samples, 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(236,33,31)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (2,417 samples, 0.23%)</title><rect x="1131.6" y="53" width="2.7" height="15.0" fill="rgb(208,221,29)" rx="2" ry="2" />
<text  x="1134.63" y="63.5" ></text>
</g>
<g >
<title>cloudarmor.py:183:_TranslatePolicy (1,202 samples, 0.11%)</title><rect x="38.9" y="197" width="1.3" height="15.0" fill="rgb(209,154,9)" rx="2" ry="2" />
<text  x="41.86" y="207.5" ></text>
</g>
<g >
<title>lex.py:728:validate_rules (31,115 samples, 2.96%)</title><rect x="166.8" y="165" width="35.0" height="15.0" fill="rgb(234,117,19)" rx="2" ry="2" />
<text  x="169.84" y="175.5" >le..</text>
</g>
<g >
<title>process.py:101:start (1,548 samples, 0.15%)</title><rect x="1171.8" y="197" width="1.8" height="15.0" fill="rgb(244,223,15)" rx="2" ry="2" />
<text  x="1174.84" y="207.5" ></text>
</g>
<g >
<title>yacc.py:325:parse (46,230 samples, 4.40%)</title><rect x="1087.2" y="197" width="51.9" height="15.0" fill="rgb(228,59,50)" rx="2" ry="2" />
<text  x="1090.22" y="207.5" >yacc...</text>
</g>
<g >
<title>yacc.py:2305:dr_relation (2,292 samples, 0.22%)</title><rect x="927.3" y="69" width="2.5" height="15.0" fill="rgb(243,151,18)" rx="2" ry="2" />
<text  x="930.27" y="79.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (3,672 samples, 0.35%)</title><rect x="108.1" y="149" width="4.1" height="15.0" fill="rgb(213,28,12)" rx="2" ry="2" />
<text  x="111.10" y="159.5" ></text>
</g>
<g >
<title>connection.py:406:_recv_bytes (4,532 samples, 0.43%)</title><rect x="1142.0" y="165" width="5.1" height="15.0" fill="rgb(254,80,51)" rx="2" ry="2" />
<text  x="1144.98" y="175.5" ></text>
</g>
<g >
<title>naming.py:125:__init__ (1,749 samples, 0.17%)</title><rect x="1183.4" y="229" width="1.9" height="15.0" fill="rgb(215,205,33)" rx="2" ry="2" />
<text  x="1186.37" y="239.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (68,573 samples, 6.52%)</title><rect x="49.0" y="213" width="77.0" height="15.0" fill="rgb(253,106,7)" rx="2" ry="2" />
<text  x="52.03" y="223.5" >copy.py:..</text>
</g>
<g >
<title>copy.py:268:_reconstruct (3,803 samples, 0.36%)</title><rect x="77.8" y="149" width="4.3" height="15.0" fill="rgb(240,109,39)" rx="2" ry="2" />
<text  x="80.79" y="159.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'append' of 'list' objects&gt; (2,395 samples, 0.23%)</title><rect x="371.7" y="149" width="2.7" height="15.0" fill="rgb(239,40,51)" rx="2" ry="2" />
<text  x="374.67" y="159.5" ></text>
</g>
<g >
<title>connection.py:246:recv (4,693 samples, 0.45%)</title><rect x="1141.8" y="181" width="5.3" height="15.0" fill="rgb(212,121,34)" rx="2" ry="2" />
<text  x="1144.80" y="191.5" ></text>
</g>
<g >
<title>&lt;frozen importlib._bootstrap&gt;:1009:_handle_fromlist (1,570 samples, 0.15%)</title><rect x="138.9" y="181" width="1.8" height="15.0" fill="rgb(205,186,1)" rx="2" ry="2" />
<text  x="141.94" y="191.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.eval&gt; (10,824 samples, 1.03%)</title><rect x="231.5" y="165" width="12.1" height="15.0" fill="rgb(238,41,20)" rx="2" ry="2" />
<text  x="234.47" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:29:IP (1,138 samples, 0.11%)</title><rect x="1126.1" y="85" width="1.3" height="15.0" fill="rgb(218,175,39)" rx="2" ry="2" />
<text  x="1129.08" y="95.5" ></text>
</g>
<g >
<title>yacc.py:2057:digraph (31,550 samples, 3.00%)</title><rect x="900.0" y="117" width="35.4" height="15.0" fill="rgb(218,100,44)" rx="2" ry="2" />
<text  x="902.96" y="127.5" >yac..</text>
</g>
<g >
<title>yacc.py:1313:__init__ (5,691 samples, 0.54%)</title><rect x="223.8" y="165" width="6.4" height="15.0" fill="rgb(223,104,45)" rx="2" ry="2" />
<text  x="226.81" y="175.5" ></text>
</g>
<g >
<title>naming.py:452:GetNet (92 samples, 0.01%)</title><rect x="1139.0" y="69" width="0.1" height="15.0" fill="rgb(221,55,27)" rx="2" ry="2" />
<text  x="1141.99" y="79.5" ></text>
</g>
<g >
<title>popen_fork.py:16:__init__ (1,197 samples, 0.11%)</title><rect x="1172.2" y="165" width="1.4" height="15.0" fill="rgb(222,93,1)" rx="2" ry="2" />
<text  x="1175.23" y="175.5" ></text>
</g>
<g >
<title>context.py:48:Manager (15,527 samples, 1.48%)</title><rect x="1156.1" y="229" width="17.5" height="15.0" fill="rgb(212,229,32)" rx="2" ry="2" />
<text  x="1159.15" y="239.5" ></text>
</g>
<g >
<title>connection.py:406:_recv_bytes (1,294 samples, 0.12%)</title><rect x="1174.6" y="165" width="1.4" height="15.0" fill="rgb(228,72,54)" rx="2" ry="2" />
<text  x="1177.59" y="175.5" ></text>
</g>
<g >
<title>yacc.py:2492:add_lookaheads (77,970 samples, 7.42%)</title><rect x="935.4" y="133" width="87.5" height="15.0" fill="rgb(218,41,6)" rx="2" ry="2" />
<text  x="938.37" y="143.5" >yacc.py:24..</text>
</g>
<g >
<title>copy.py:268:_reconstruct (2,901 samples, 0.28%)</title><rect x="97.3" y="165" width="3.3" height="15.0" fill="rgb(242,63,12)" rx="2" ry="2" />
<text  x="100.32" y="175.5" ></text>
</g>
<g >
<title>yacc.py:1875:compute_follow (64,409 samples, 6.13%)</title><rect x="302.1" y="165" width="72.3" height="15.0" fill="rgb(227,1,15)" rx="2" ry="2" />
<text  x="305.07" y="175.5" >yacc.py:..</text>
</g>
<g >
<title>connection.py:246:recv (5,306 samples, 0.50%)</title><rect x="22.4" y="165" width="6.0" height="15.0" fill="rgb(218,155,21)" rx="2" ry="2" />
<text  x="25.40" y="175.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'join' of 'str' objects&gt; (12,289 samples, 1.17%)</title><rect x="732.7" y="133" width="13.8" height="15.0" fill="rgb(212,183,35)" rx="2" ry="2" />
<text  x="735.73" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (1,120 samples, 0.11%)</title><rect x="118.9" y="165" width="1.3" height="15.0" fill="rgb(238,34,52)" rx="2" ry="2" />
<text  x="121.94" y="175.5" ></text>
</g>
<g >
<title>context.py:274:_Popen (1,460 samples, 0.14%)</title><rect x="1171.9" y="181" width="1.7" height="15.0" fill="rgb(221,84,19)" rx="2" ry="2" />
<text  x="1174.94" y="191.5" ></text>
</g>
<g >
<title>connection.py:406:_recv_bytes (5,124 samples, 0.49%)</title><rect x="22.6" y="149" width="5.8" height="15.0" fill="rgb(247,117,34)" rx="2" ry="2" />
<text  x="25.61" y="159.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (13,552 samples, 1.29%)</title><rect x="52.5" y="181" width="15.2" height="15.0" fill="rgb(223,140,43)" rx="2" ry="2" />
<text  x="55.52" y="191.5" ></text>
</g>
<g >
<title>naming.py:497:_Parse (1,288 samples, 0.12%)</title><rect x="1183.9" y="213" width="1.4" height="15.0" fill="rgb(242,203,11)" rx="2" ry="2" />
<text  x="1186.88" y="223.5" ></text>
</g>
<g >
<title>&lt;frozen importlib._bootstrap&gt;:211:_call_with_frames_removed (1,557 samples, 0.15%)</title><rect x="139.0" y="165" width="1.7" height="15.0" fill="rgb(249,148,22)" rx="2" ry="2" />
<text  x="141.96" y="175.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (13,859 samples, 1.32%)</title><rect x="67.7" y="197" width="15.6" height="15.0" fill="rgb(232,59,47)" rx="2" ry="2" />
<text  x="70.73" y="207.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method posix.read&gt; (1,234 samples, 0.12%)</title><rect x="1174.7" y="133" width="1.3" height="15.0" fill="rgb(215,40,19)" rx="2" ry="2" />
<text  x="1177.66" y="143.5" ></text>
</g>
<g >
<title>lex.py:569:get_all (1,237 samples, 0.12%)</title><rect x="164.6" y="181" width="1.4" height="15.0" fill="rgb(230,152,35)" rx="2" ry="2" />
<text  x="167.62" y="191.5" ></text>
</g>
<g >
<title>yacc.py:3150:validate_pfunctions (14,971 samples, 1.42%)</title><rect x="1070.4" y="165" width="16.8" height="15.0" fill="rgb(249,20,41)" rx="2" ry="2" />
<text  x="1073.41" y="175.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (3,855 samples, 0.37%)</title><rect x="73.5" y="149" width="4.3" height="15.0" fill="rgb(250,119,36)" rx="2" ry="2" />
<text  x="76.46" y="159.5" ></text>
</g>
<g >
<title>connection.py:406:_recv_bytes (2,824 samples, 0.27%)</title><rect x="1178.2" y="149" width="3.1" height="15.0" fill="rgb(233,177,51)" rx="2" ry="2" />
<text  x="1181.17" y="159.5" ></text>
</g>
<g >
<title>sre_parse.py:919:parse (2,649 samples, 0.25%)</title><rect x="198.8" y="101" width="3.0" height="15.0" fill="rgb(246,138,25)" rx="2" ry="2" />
<text  x="201.78" y="111.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.getattr&gt; (3,658 samples, 0.35%)</title><rect x="842.9" y="101" width="4.1" height="15.0" fill="rgb(214,29,17)" rx="2" ry="2" />
<text  x="845.92" y="111.5" ></text>
</g>
<g >
<title>naming.py:438:GetNetAddr (5,979 samples, 0.57%)</title><rect x="1120.6" y="133" width="6.8" height="15.0" fill="rgb(236,31,25)" rx="2" ry="2" />
<text  x="1123.65" y="143.5" ></text>
</g>
<g >
<title>managers.py:579:_create (4,717 samples, 0.45%)</title><rect x="1176.0" y="213" width="5.3" height="15.0" fill="rgb(240,213,4)" rx="2" ry="2" />
<text  x="1179.04" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:160:__deepcopy__ (2,149 samples, 0.20%)</title><rect x="117.8" y="197" width="2.4" height="15.0" fill="rgb(242,67,40)" rx="2" ry="2" />
<text  x="120.79" y="207.5" ></text>
</g>
<g >
<title>sre_parse.py:475:_parse (2,349 samples, 0.22%)</title><rect x="199.1" y="69" width="2.7" height="15.0" fill="rgb(233,186,3)" rx="2" ry="2" />
<text  x="202.12" y="79.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (3,667 samples, 0.35%)</title><rect x="108.1" y="133" width="4.1" height="15.0" fill="rgb(251,178,45)" rx="2" ry="2" />
<text  x="111.11" y="143.5" ></text>
</g>
<g >
<title>naming.py:438:GetNetAddr (9,427 samples, 0.90%)</title><rect x="1128.5" y="117" width="10.6" height="15.0" fill="rgb(228,167,53)" rx="2" ry="2" />
<text  x="1131.52" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (2,732 samples, 0.26%)</title><rect x="122.9" y="149" width="3.1" height="15.0" fill="rgb(233,32,49)" rx="2" ry="2" />
<text  x="125.91" y="159.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,736 samples, 0.26%)</title><rect x="90.9" y="149" width="3.0" height="15.0" fill="rgb(244,214,0)" rx="2" ry="2" />
<text  x="93.85" y="159.5" ></text>
</g>
<g >
<title>policy.py:174:__init__ (2,697 samples, 0.26%)</title><rect x="1114.5" y="149" width="3.0" height="15.0" fill="rgb(239,7,2)" rx="2" ry="2" />
<text  x="1117.50" y="159.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'poll' of 'select.poll' objects&gt; (2,085 samples, 0.20%)</title><rect x="1187.7" y="149" width="2.3" height="15.0" fill="rgb(215,89,1)" rx="2" ry="2" />
<text  x="1190.66" y="159.5" ></text>
</g>
<g >
<title>yacc.py:2165:lr0_goto (15,066 samples, 1.43%)</title><rect x="746.5" y="149" width="16.9" height="15.0" fill="rgb(226,207,9)" rx="2" ry="2" />
<text  x="749.52" y="159.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.exec&gt; (2,790 samples, 0.27%)</title><rect x="1161.1" y="133" width="3.1" height="15.0" fill="rgb(247,96,37)" rx="2" ry="2" />
<text  x="1164.06" y="143.5" ></text>
</g>
<g >
<title>yacc.py:1980:read_table (2,200 samples, 0.21%)</title><rect x="251.3" y="181" width="2.4" height="15.0" fill="rgb(213,187,31)" rx="2" ry="2" />
<text  x="254.25" y="191.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (3,808 samples, 0.36%)</title><rect x="69.2" y="149" width="4.2" height="15.0" fill="rgb(238,114,50)" rx="2" ry="2" />
<text  x="72.17" y="159.5" ></text>
</g>
<g >
<title>juniper.py:958:__str__ (4,056 samples, 0.39%)</title><rect x="134.3" y="213" width="4.5" height="15.0" fill="rgb(253,115,14)" rx="2" ry="2" />
<text  x="137.27" y="223.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'sort' of 'list' objects&gt; (1,981 samples, 0.19%)</title><rect x="1054.1" y="149" width="2.3" height="15.0" fill="rgb(207,222,7)" rx="2" ry="2" />
<text  x="1057.14" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:88:__deepcopy__ (5,153 samples, 0.49%)</title><rect x="120.2" y="197" width="5.8" height="15.0" fill="rgb(219,115,24)" rx="2" ry="2" />
<text  x="123.20" y="207.5" ></text>
</g>
<g >
<title>sre_compile.py:759:compile (2,807 samples, 0.27%)</title><rect x="161.5" y="133" width="3.1" height="15.0" fill="rgb(231,16,50)" rx="2" ry="2" />
<text  x="164.47" y="143.5" ></text>
</g>
<g >
<title>&lt;frozen importlib._bootstrap&gt;:978:_find_and_load (144 samples, 0.01%)</title><rect x="1160.9" y="117" width="0.2" height="15.0" fill="rgb(218,32,2)" rx="2" ry="2" />
<text  x="1163.90" y="127.5" ></text>
</g>
<g >
<title>__init__.py:1031:log (3,366 samples, 0.32%)</title><rect x="1148.2" y="165" width="3.8" height="15.0" fill="rgb(246,7,13)" rx="2" ry="2" />
<text  x="1151.19" y="175.5" ></text>
</g>
<g >
<title>yacc.py:2453:&lt;lambda&gt; (2,565 samples, 0.24%)</title><rect x="927.0" y="85" width="2.8" height="15.0" fill="rgb(246,227,16)" rx="2" ry="2" />
<text  x="929.96" y="95.5" ></text>
</g>
<g >
<title>minidom.py:1789:writexml (4,293 samples, 0.41%)</title><rect x="144.1" y="181" width="4.9" height="15.0" fill="rgb(211,68,10)" rx="2" ry="2" />
<text  x="147.14" y="191.5" ></text>
</g>
<g >
<title>policy.py:1015:AddObject (9,690 samples, 0.92%)</title><rect x="1128.2" y="133" width="10.9" height="15.0" fill="rgb(225,101,48)" rx="2" ry="2" />
<text  x="1131.22" y="143.5" ></text>
</g>
<g >
<title>lex.py:305:token (11,492 samples, 1.09%)</title><rect x="1100.9" y="165" width="12.9" height="15.0" fill="rgb(215,229,32)" rx="2" ry="2" />
<text  x="1103.94" y="175.5" ></text>
</g>
<g >
<title>yacc.py:1441:__str__ (56,196 samples, 5.34%)</title><rect x="683.5" y="149" width="63.0" height="15.0" fill="rgb(214,106,19)" rx="2" ry="2" />
<text  x="686.46" y="159.5" >yacc.p..</text>
</g>
<g >
<title>popen_fork.py:41:wait (2,244 samples, 0.21%)</title><rect x="1187.5" y="197" width="2.5" height="15.0" fill="rgb(247,225,21)" rx="2" ry="2" />
<text  x="1190.48" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (3,442 samples, 0.33%)</title><rect x="1130.5" y="69" width="3.8" height="15.0" fill="rgb(229,77,19)" rx="2" ry="2" />
<text  x="1133.48" y="79.5" ></text>
</g>
<g >
<title>ciscoasa.py:322:_TranslatePolicy (1,745 samples, 0.17%)</title><rect x="36.9" y="197" width="2.0" height="15.0" fill="rgb(227,69,35)" rx="2" ry="2" />
<text  x="39.90" y="207.5" ></text>
</g>
<g >
<title>naming.py:452:GetNet (9,381 samples, 0.89%)</title><rect x="1128.6" y="101" width="10.5" height="15.0" fill="rgb(224,125,33)" rx="2" ry="2" />
<text  x="1131.57" y="111.5" ></text>
</g>
<g >
<title>sre_compile.py:598:_code (1,154 samples, 0.11%)</title><rect x="197.5" y="101" width="1.3" height="15.0" fill="rgb(245,172,1)" rx="2" ry="2" />
<text  x="200.49" y="111.5" ></text>
</g>
<g >
<title>managers.py:516:start (4,362 samples, 0.41%)</title><rect x="1168.7" y="213" width="4.9" height="15.0" fill="rgb(243,72,32)" rx="2" ry="2" />
<text  x="1171.68" y="223.5" ></text>
</g>
<g >
<title>yacc.py:1551:add_production (32,833 samples, 3.12%)</title><rect x="209.2" y="181" width="36.9" height="15.0" fill="rgb(216,165,41)" rx="2" ry="2" />
<text  x="212.24" y="191.5" >yac..</text>
</g>
<g >
<title>sre_compile.py:759:compile (1,518 samples, 0.14%)</title><rect x="130.7" y="133" width="1.8" height="15.0" fill="rgb(209,173,16)" rx="2" ry="2" />
<text  x="133.75" y="143.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,826 samples, 0.27%)</title><rect x="93.9" y="133" width="3.2" height="15.0" fill="rgb(241,164,40)" rx="2" ry="2" />
<text  x="96.94" y="143.5" ></text>
</g>
<g >
<title>minidom.py:49:toprettyxml (4,350 samples, 0.41%)</title><rect x="144.1" y="197" width="4.9" height="15.0" fill="rgb(244,35,7)" rx="2" ry="2" />
<text  x="147.08" y="207.5" ></text>
</g>
<g >
<title>yacc.py:2999:validate_modules (12,080 samples, 1.15%)</title><rect x="1056.9" y="165" width="13.5" height="15.0" fill="rgb(229,46,23)" rx="2" ry="2" />
<text  x="1059.86" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:70:__init__ (1,791 samples, 0.17%)</title><rect x="1134.3" y="69" width="2.1" height="15.0" fill="rgb(222,189,50)" rx="2" ry="2" />
<text  x="1137.35" y="79.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.__import__&gt; (146 samples, 0.01%)</title><rect x="1160.9" y="133" width="0.2" height="15.0" fill="rgb(214,130,34)" rx="2" ry="2" />
<text  x="1163.89" y="143.5" ></text>
</g>
<g >
<title>policy.py:1015:AddObject (6,738 samples, 0.64%)</title><rect x="1119.8" y="149" width="7.6" height="15.0" fill="rgb(213,30,38)" rx="2" ry="2" />
<text  x="1122.80" y="159.5" ></text>
</g>
<g >
<title>yacc.py:2510:add_lalr_lookaheads (143,571 samples, 13.65%)</title><rect x="861.7" y="149" width="161.2" height="15.0" fill="rgb(246,148,46)" rx="2" ry="2" />
<text  x="864.75" y="159.5" >yacc.py:2510:add_lal..</text>
</g>
<g >
<title>yacc.py:3142:&lt;lambda&gt; (1,774 samples, 0.17%)</title><rect x="1054.4" y="133" width="2.0" height="15.0" fill="rgb(243,39,53)" rx="2" ry="2" />
<text  x="1057.37" y="143.5" ></text>
</g>
<g >
<title>__init__.py:898:handle (1,700 samples, 0.16%)</title><rect x="1150.1" y="85" width="1.9" height="15.0" fill="rgb(242,164,43)" rx="2" ry="2" />
<text  x="1153.06" y="95.5" ></text>
</g>
<g >
<title>yacc.py:1674:infinite_cycles (1,077 samples, 0.10%)</title><rect x="248.6" y="181" width="1.2" height="15.0" fill="rgb(247,224,1)" rx="2" ry="2" />
<text  x="251.56" y="191.5" ></text>
</g>
<g >
<title>aclgen.py:442:WriteFiles (13,628 samples, 1.30%)</title><rect x="1139.1" y="229" width="15.3" height="15.0" fill="rgb(246,2,1)" rx="2" ry="2" />
<text  x="1142.10" y="239.5" ></text>
</g>
<g >
<title>naming.py:452:GetNet (5,953 samples, 0.57%)</title><rect x="1120.7" y="117" width="6.7" height="15.0" fill="rgb(221,80,52)" rx="2" ry="2" />
<text  x="1123.68" y="127.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.exec&gt; (2,172 samples, 0.21%)</title><rect x="251.3" y="165" width="2.4" height="15.0" fill="rgb(218,85,37)" rx="2" ry="2" />
<text  x="254.28" y="175.5" ></text>
</g>
<g >
<title>expatbuilder.py:736:start_element_handler (1,158 samples, 0.11%)</title><rect x="142.8" y="133" width="1.3" height="15.0" fill="rgb(217,28,17)" rx="2" ry="2" />
<text  x="145.78" y="143.5" ></text>
</g>
<g >
<title>__init__.py:336:info (3,596 samples, 0.34%)</title><rect x="1147.9" y="197" width="4.1" height="15.0" fill="rgb(231,138,47)" rx="2" ry="2" />
<text  x="1150.94" y="207.5" ></text>
</g>
<g >
<title>managers.py:699:temp (8,724 samples, 0.83%)</title><rect x="1173.6" y="229" width="9.8" height="15.0" fill="rgb(222,151,29)" rx="2" ry="2" />
<text  x="1176.57" y="239.5" ></text>
</g>
<g >
<title>inspect.py:760:findsource (1,399 samples, 0.13%)</title><rect x="177.9" y="117" width="1.6" height="15.0" fill="rgb(219,227,50)" rx="2" ry="2" />
<text  x="180.92" y="127.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (3,690 samples, 0.35%)</title><rect x="108.1" y="165" width="4.1" height="15.0" fill="rgb(251,203,7)" rx="2" ry="2" />
<text  x="111.08" y="175.5" ></text>
</g>
<g >
<title>__init__.py:454:log (3,491 samples, 0.33%)</title><rect x="28.4" y="181" width="3.9" height="15.0" fill="rgb(209,102,24)" rx="2" ry="2" />
<text  x="31.41" y="191.5" ></text>
</g>
<g >
<title>sre_parse.py:919:parse (1,885 samples, 0.18%)</title><rect x="162.5" y="117" width="2.1" height="15.0" fill="rgb(238,29,35)" rx="2" ry="2" />
<text  x="165.51" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:29:IP (1,767 samples, 0.17%)</title><rect x="154.2" y="133" width="2.0" height="15.0" fill="rgb(234,209,33)" rx="2" ry="2" />
<text  x="157.18" y="143.5" ></text>
</g>
<g >
<title>aclgen.py:479:Run (1,047,210 samples, 99.59%)</title><rect x="10.1" y="245" width="1175.2" height="15.0" fill="rgb(250,7,37)" rx="2" ry="2" />
<text  x="13.11" y="255.5" >aclgen.py:479:Run</text>
</g>
<g >
<title>copy.py:268:_reconstruct (3,522 samples, 0.33%)</title><rect x="63.8" y="165" width="3.9" height="15.0" fill="rgb(222,56,12)" rx="2" ry="2" />
<text  x="66.78" y="175.5" ></text>
</g>
<g >
<title>yacc.py:1738:undefined_symbols (1,316 samples, 0.13%)</title><rect x="249.8" y="181" width="1.5" height="15.0" fill="rgb(232,121,22)" rx="2" ry="2" />
<text  x="252.77" y="191.5" ></text>
</g>
<g >
<title>__init__.py:1434:log (3,263 samples, 0.31%)</title><rect x="1148.3" y="149" width="3.7" height="15.0" fill="rgb(210,7,40)" rx="2" ry="2" />
<text  x="1151.31" y="159.5" ></text>
</g>
<g >
<title>yacc.py:1651:find_unreachable (2,206 samples, 0.21%)</title><rect x="246.1" y="181" width="2.5" height="15.0" fill="rgb(251,137,23)" rx="2" ry="2" />
<text  x="249.09" y="191.5" ></text>
</g>
<g >
<title>yacc.py:2068:traverse (31,140 samples, 2.96%)</title><rect x="900.4" y="101" width="35.0" height="15.0" fill="rgb(213,181,46)" rx="2" ry="2" />
<text  x="903.42" y="111.5" >ya..</text>
</g>
<g >
<title>__init__.py:892:handle (1,637 samples, 0.16%)</title><rect x="30.5" y="69" width="1.8" height="15.0" fill="rgb(224,129,3)" rx="2" ry="2" />
<text  x="33.49" y="79.5" ></text>
</g>
<g >
<title>managers.py:636:_finalize_manager (3,090 samples, 0.29%)</title><rect x="1186.5" y="229" width="3.5" height="15.0" fill="rgb(219,209,40)" rx="2" ry="2" />
<text  x="1189.53" y="239.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method posix.read&gt; (4,842 samples, 0.46%)</title><rect x="22.9" y="117" width="5.5" height="15.0" fill="rgb(225,94,15)" rx="2" ry="2" />
<text  x="25.92" y="127.5" ></text>
</g>
<g >
<title>iptables.py:114:__str__ (1,171 samples, 0.11%)</title><rect x="126.2" y="181" width="1.3" height="15.0" fill="rgb(250,3,0)" rx="2" ry="2" />
<text  x="129.21" y="191.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.len&gt; (3,691 samples, 0.35%)</title><rect x="397.8" y="149" width="4.1" height="15.0" fill="rgb(246,192,54)" rx="2" ry="2" />
<text  x="400.79" y="159.5" ></text>
</g>
<g >
<title>&lt;frozen importlib._bootstrap&gt;:269:_module_repr (1,330 samples, 0.13%)</title><rect x="1054.9" y="117" width="1.5" height="15.0" fill="rgb(230,151,8)" rx="2" ry="2" />
<text  x="1057.87" y="127.5" ></text>
</g>
<g >
<title>iptables.py:402:_FormatPart (1,618 samples, 0.15%)</title><rect x="132.5" y="181" width="1.8" height="15.0" fill="rgb(249,124,48)" rx="2" ry="2" />
<text  x="135.45" y="191.5" ></text>
</g>
<g >
<title>__init__.py:810:emit (1,558 samples, 0.15%)</title><rect x="1150.2" y="53" width="1.8" height="15.0" fill="rgb(206,156,9)" rx="2" ry="2" />
<text  x="1153.22" y="63.5" ></text>
</g>
<g >
<title>&lt;string&gt;:1:__getitem__ (6,290 samples, 0.60%)</title><rect x="1140.0" y="213" width="7.1" height="15.0" fill="rgb(242,59,51)" rx="2" ry="2" />
<text  x="1143.01" y="223.5" ></text>
</g>
<g >
<title>yacc.py:2954:get_all (4,457 samples, 0.42%)</title><rect x="1051.4" y="181" width="5.0" height="15.0" fill="rgb(214,89,19)" rx="2" ry="2" />
<text  x="1054.36" y="191.5" ></text>
</g>
<g >
<title>iptables.py:646:__init__ (1,225 samples, 0.12%)</title><rect x="127.5" y="213" width="1.4" height="15.0" fill="rgb(230,223,53)" rx="2" ry="2" />
<text  x="130.52" y="223.5" ></text>
</g>
<g >
<title>yacc.py:2962:validate_all (27,496 samples, 2.62%)</title><rect x="1056.4" y="181" width="30.8" height="15.0" fill="rgb(253,20,33)" rx="2" ry="2" />
<text  x="1059.36" y="191.5" >ya..</text>
</g>
<g >
<title>~:0:&lt;method 'match' of 're.Pattern' objects&gt; (2,206 samples, 0.21%)</title><rect x="243.6" y="165" width="2.5" height="15.0" fill="rgb(242,146,12)" rx="2" ry="2" />
<text  x="246.61" y="175.5" ></text>
</g>
<g >
<title>yacc.py:2285:find_nonterminal_transitions (5,385 samples, 0.51%)</title><rect x="862.8" y="133" width="6.1" height="15.0" fill="rgb(247,162,35)" rx="2" ry="2" />
<text  x="865.84" y="143.5" ></text>
</g>
<g >
<title>lex.py:576:validate_all (31,852 samples, 3.03%)</title><rect x="166.0" y="181" width="35.8" height="15.0" fill="rgb(239,33,51)" rx="2" ry="2" />
<text  x="169.01" y="191.5" >lex..</text>
</g>
<g >
<title>ipset.py:189:__str__ (1,375 samples, 0.13%)</title><rect x="126.0" y="213" width="1.5" height="15.0" fill="rgb(208,96,13)" rx="2" ry="2" />
<text  x="128.98" y="223.5" ></text>
</g>
<g >
<title>yacc.py:2057:digraph (8,870 samples, 0.84%)</title><rect x="890.0" y="117" width="9.9" height="15.0" fill="rgb(223,39,16)" rx="2" ry="2" />
<text  x="892.96" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (1,118 samples, 0.11%)</title><rect x="1137.7" y="53" width="1.3" height="15.0" fill="rgb(227,32,45)" rx="2" ry="2" />
<text  x="1140.74" y="63.5" ></text>
</g>
<g >
<title>yacc.py:2454:&lt;lambda&gt; (2,149 samples, 0.20%)</title><rect x="929.8" y="85" width="2.5" height="15.0" fill="rgb(245,151,0)" rx="2" ry="2" />
<text  x="932.84" y="95.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,801 samples, 0.27%)</title><rect x="97.4" y="149" width="3.2" height="15.0" fill="rgb(232,55,28)" rx="2" ry="2" />
<text  x="100.43" y="159.5" ></text>
</g>
<g >
<title>__init__.py:1050:handle (1,799 samples, 0.17%)</title><rect x="30.3" y="117" width="2.0" height="15.0" fill="rgb(234,22,47)" rx="2" ry="2" />
<text  x="33.31" y="127.5" ></text>
</g>
<g >
<title>lex.py:662:get_rules (1,126 samples, 0.11%)</title><rect x="164.7" y="165" width="1.3" height="15.0" fill="rgb(241,133,19)" rx="2" ry="2" />
<text  x="167.75" y="175.5" ></text>
</g>
<g >
<title>&lt;frozen importlib._bootstrap&gt;:211:_call_with_frames_removed (1,849 samples, 0.18%)</title><rect x="1157.9" y="133" width="2.1" height="15.0" fill="rgb(230,27,10)" rx="2" ry="2" />
<text  x="1160.88" y="143.5" ></text>
</g>
<g >
<title>nacaddr.py:142:__init__ (1,213 samples, 0.12%)</title><rect x="118.8" y="181" width="1.4" height="15.0" fill="rgb(208,1,34)" rx="2" ry="2" />
<text  x="121.84" y="191.5" ></text>
</g>
<g >
<title>yacc.py:2165:lr0_goto (4,286 samples, 0.41%)</title><rect x="885.1" y="117" width="4.8" height="15.0" fill="rgb(223,143,2)" rx="2" ry="2" />
<text  x="888.10" y="127.5" ></text>
</g>
<g >
<title>yacc.py:3216:yacc (787,892 samples, 74.93%)</title><rect x="203.0" y="197" width="884.2" height="15.0" fill="rgb(229,151,36)" rx="2" ry="2" />
<text  x="206.01" y="207.5" >yacc.py:3216:yacc</text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (2,844 samples, 0.27%)</title><rect x="93.9" y="165" width="3.2" height="15.0" fill="rgb(216,155,52)" rx="2" ry="2" />
<text  x="96.92" y="175.5" ></text>
</g>
<g >
<title>yacc.py:1803:_first (23,641 samples, 2.25%)</title><rect x="275.5" y="149" width="26.6" height="15.0" fill="rgb(213,45,21)" rx="2" ry="2" />
<text  x="278.54" y="159.5" >y..</text>
</g>
<g >
<title>&lt;frozen importlib._bootstrap&gt;:663:_load_unlocked (7,731 samples, 0.74%)</title><rect x="1157.1" y="181" width="8.7" height="15.0" fill="rgb(254,65,42)" rx="2" ry="2" />
<text  x="1160.11" y="191.5" ></text>
</g>
<g >
<title>aclgenerator.py:549:WrapWords (1,763 samples, 0.17%)</title><rect x="130.5" y="181" width="2.0" height="15.0" fill="rgb(207,158,12)" rx="2" ry="2" />
<text  x="133.47" y="191.5" ></text>
</g>
<g >
<title>&lt;frozen importlib._bootstrap_external&gt;:1040:create_module (1,861 samples, 0.18%)</title><rect x="1157.9" y="149" width="2.1" height="15.0" fill="rgb(244,7,21)" rx="2" ry="2" />
<text  x="1160.87" y="159.5" ></text>
</g>
<g >
<title>yacc.py:2897:parse_grammar (2,680 samples, 0.25%)</title><rect x="1084.2" y="149" width="3.0" height="15.0" fill="rgb(212,157,21)" rx="2" ry="2" />
<text  x="1087.21" y="159.5" ></text>
</g>
<g >
<title>cisco.py:804:&lt;listcomp&gt; (1,672 samples, 0.16%)</title><rect x="45.0" y="181" width="1.8" height="15.0" fill="rgb(216,34,13)" rx="2" ry="2" />
<text  x="47.97" y="191.5" ></text>
</g>
<g >
<title>iptables.py:808:__str__ (1,268 samples, 0.12%)</title><rect x="126.1" y="197" width="1.4" height="15.0" fill="rgb(227,145,51)" rx="2" ry="2" />
<text  x="129.10" y="207.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'match' of 're.Pattern' objects&gt; (6,211 samples, 0.59%)</title><rect x="1063.4" y="149" width="7.0" height="15.0" fill="rgb(222,197,9)" rx="2" ry="2" />
<text  x="1066.44" y="159.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method io.open&gt; (2,155 samples, 0.20%)</title><rect x="1152.0" y="197" width="2.4" height="15.0" fill="rgb(242,178,52)" rx="2" ry="2" />
<text  x="1154.97" y="207.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (13,599 samples, 1.29%)</title><rect x="102.5" y="181" width="15.3" height="15.0" fill="rgb(224,2,36)" rx="2" ry="2" />
<text  x="105.53" y="191.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.id&gt; (4,089 samples, 0.39%)</title><rect x="847.0" y="117" width="4.6" height="15.0" fill="rgb(232,201,43)" rx="2" ry="2" />
<text  x="850.03" y="127.5" ></text>
</g>
</g>
</svg>

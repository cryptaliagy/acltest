<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="358" onload="init(evt)" viewBox="0 0 1200 358" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="358.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >"2020-07-27-14:36:39--04:00 cProfile"</text>
<text id="details" x="10.00" y="341" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="341" > </text>
<g id="frames">
<g >
<title>nacaddr.py:74:__init__ (5,886,039 samples, 1.51%)</title><rect x="385.2" y="117" width="17.8" height="15.0" fill="rgb(214,225,29)" rx="2" ry="2" />
<text  x="388.18" y="127.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (721,431 samples, 0.19%)</title><rect x="38.2" y="197" width="2.2" height="15.0" fill="rgb(223,167,39)" rx="2" ry="2" />
<text  x="41.17" y="207.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (2,792,955 samples, 0.72%)</title><rect x="27.5" y="229" width="8.5" height="15.0" fill="rgb(230,133,26)" rx="2" ry="2" />
<text  x="30.50" y="239.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'issuperset' of 'frozenset' objects&gt; (452,703 samples, 0.12%)</title><rect x="355.0" y="37" width="1.3" height="15.0" fill="rgb(242,72,11)" rx="2" ry="2" />
<text  x="357.98" y="47.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (651,777 samples, 0.17%)</title><rect x="269.3" y="69" width="2.0" height="15.0" fill="rgb(221,162,18)" rx="2" ry="2" />
<text  x="272.35" y="79.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (1,263,022 samples, 0.32%)</title><rect x="56.5" y="213" width="3.8" height="15.0" fill="rgb(205,148,2)" rx="2" ry="2" />
<text  x="59.48" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:300:_CollapseAddrListInternal (12,337,035 samples, 3.17%)</title><rect x="136.8" y="165" width="37.4" height="15.0" fill="rgb(215,80,32)" rx="2" ry="2" />
<text  x="139.81" y="175.5" >nac..</text>
</g>
<g >
<title>nacaddr.py:93:supernet_of (822,604 samples, 0.21%)</title><rect x="301.9" y="181" width="2.5" height="15.0" fill="rgb(229,125,47)" rx="2" ry="2" />
<text  x="304.94" y="191.5" ></text>
</g>
<g >
<title>iptables.py:809:__str__ (72,694,412 samples, 18.68%)</title><rect x="60.3" y="245" width="220.4" height="15.0" fill="rgb(237,80,4)" rx="2" ry="2" />
<text  x="63.31" y="255.5" >iptables.py:809:__str__</text>
</g>
<g >
<title>copy.py:132:deepcopy (736,368 samples, 0.19%)</title><rect x="48.8" y="165" width="2.3" height="15.0" fill="rgb(237,63,25)" rx="2" ry="2" />
<text  x="51.82" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:99:__deepcopy__ (1,397,368 samples, 0.36%)</title><rect x="56.1" y="229" width="4.2" height="15.0" fill="rgb(234,62,39)" rx="2" ry="2" />
<text  x="59.07" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:670:__contains__ (8,210,264 samples, 2.11%)</title><rect x="82.4" y="165" width="24.9" height="15.0" fill="rgb(225,82,17)" rx="2" ry="2" />
<text  x="85.39" y="175.5" >i..</text>
</g>
<g >
<title>iptables.py:545:_GenerateAddressStatement (1,206,524 samples, 0.31%)</title><rect x="275.7" y="197" width="3.7" height="15.0" fill="rgb(206,53,25)" rx="2" ry="2" />
<text  x="278.75" y="207.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'extend' of 'list' objects&gt; (25,975,659 samples, 6.67%)</title><rect x="192.6" y="165" width="78.7" height="15.0" fill="rgb(221,157,0)" rx="2" ry="2" />
<text  x="195.56" y="175.5" >~:0:&lt;meth..</text>
</g>
<g >
<title>~:0:&lt;method 'match' of 're.Pattern' objects&gt; (518,711 samples, 0.13%)</title><rect x="316.6" y="181" width="1.6" height="15.0" fill="rgb(246,62,10)" rx="2" ry="2" />
<text  x="319.64" y="191.5" ></text>
</g>
<g >
<title>policy.py:1013:AddObject (35,489,321 samples, 9.12%)</title><rect x="330.3" y="181" width="107.6" height="15.0" fill="rgb(225,148,4)" rx="2" ry="2" />
<text  x="333.27" y="191.5" >policy.py:101..</text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (1,208,149 samples, 0.31%)</title><rect x="417.2" y="85" width="3.7" height="15.0" fill="rgb(228,196,48)" rx="2" ry="2" />
<text  x="420.22" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (1,083,705 samples, 0.28%)</title><rect x="361.9" y="85" width="3.3" height="15.0" fill="rgb(222,162,21)" rx="2" ry="2" />
<text  x="364.87" y="95.5" ></text>
</g>
<g >
<title>juniper.py:956:__str__ (6,411,734 samples, 1.65%)</title><rect x="280.7" y="245" width="19.5" height="15.0" fill="rgb(248,10,32)" rx="2" ry="2" />
<text  x="283.73" y="255.5" ></text>
</g>
<g >
<title>naming.py:456:GetNet (11,495,525 samples, 2.95%)</title><rect x="403.0" y="133" width="34.9" height="15.0" fill="rgb(243,46,10)" rx="2" ry="2" />
<text  x="406.03" y="143.5" >na..</text>
</g>
<g >
<title>ipaddress.py:859:_get_networks_key (609,552 samples, 0.16%)</title><rect x="130.8" y="181" width="1.8" height="15.0" fill="rgb(226,9,42)" rx="2" ry="2" />
<text  x="133.76" y="191.5" ></text>
</g>
<g >
<title>junipersrx.py:336:_TranslatePolicy (1,005,325 samples, 0.26%)</title><rect x="301.4" y="213" width="3.0" height="15.0" fill="rgb(249,162,10)" rx="2" ry="2" />
<text  x="304.39" y="223.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'issuperset' of 'frozenset' objects&gt; (415,814 samples, 0.11%)</title><rect x="400.5" y="37" width="1.3" height="15.0" fill="rgb(240,73,37)" rx="2" ry="2" />
<text  x="403.53" y="47.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (2,989,836 samples, 0.77%)</title><rect x="18.4" y="229" width="9.1" height="15.0" fill="rgb(205,75,45)" rx="2" ry="2" />
<text  x="21.43" y="239.5" ></text>
</g>
<g >
<title>policy.py:2526:ParsePolicy (47,708,017 samples, 12.26%)</title><rect x="304.4" y="245" width="144.7" height="15.0" fill="rgb(236,105,39)" rx="2" ry="2" />
<text  x="307.44" y="255.5" >policy.py:2526:Par..</text>
</g>
<g >
<title>ipaddress.py:1883:__init__ (407,875 samples, 0.10%)</title><rect x="365.2" y="85" width="1.2" height="15.0" fill="rgb(241,188,29)" rx="2" ry="2" />
<text  x="368.16" y="95.5" ></text>
</g>
<g >
<title>naming.py:456:GetNet (1,173,434 samples, 0.30%)</title><rect x="445.5" y="117" width="3.6" height="15.0" fill="rgb(218,179,8)" rx="2" ry="2" />
<text  x="448.54" y="127.5" ></text>
</g>
<g >
<title>yacc.py:325:parse (46,445,840 samples, 11.94%)</title><rect x="308.3" y="229" width="140.8" height="15.0" fill="rgb(207,17,38)" rx="2" ry="2" />
<text  x="311.27" y="239.5" >yacc.py:325:parse</text>
</g>
<g >
<title>copy.py:132:deepcopy (619,173 samples, 0.16%)</title><rect x="23.7" y="181" width="1.9" height="15.0" fill="rgb(222,160,32)" rx="2" ry="2" />
<text  x="26.72" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:588:__hash__ (941,496 samples, 0.24%)</title><rect x="134.0" y="165" width="2.8" height="15.0" fill="rgb(254,95,41)" rx="2" ry="2" />
<text  x="136.95" y="175.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (812,952 samples, 0.21%)</title><rect x="128.3" y="149" width="2.5" height="15.0" fill="rgb(251,160,25)" rx="2" ry="2" />
<text  x="131.30" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (1,175,910 samples, 0.30%)</title><rect x="231.9" y="85" width="3.6" height="15.0" fill="rgb(241,38,43)" rx="2" ry="2" />
<text  x="234.93" y="95.5" ></text>
</g>
<g >
<title>juniper.py:97:Append (919,291 samples, 0.24%)</title><rect x="297.4" y="213" width="2.8" height="15.0" fill="rgb(248,73,37)" rx="2" ry="2" />
<text  x="300.39" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:395:SortAddrList (1,046,357 samples, 0.27%)</title><rect x="326.1" y="117" width="3.2" height="15.0" fill="rgb(248,160,17)" rx="2" ry="2" />
<text  x="329.12" y="127.5" ></text>
</g>
<g >
<title>iptables.py:322:_CalculateAddresses (68,579,988 samples, 17.62%)</title><rect x="63.4" y="213" width="207.9" height="15.0" fill="rgb(216,15,35)" rx="2" ry="2" />
<text  x="66.37" y="223.5" >iptables.py:322:_CalculateA..</text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (539,683 samples, 0.14%)</title><rect x="415.6" y="37" width="1.6" height="15.0" fill="rgb(239,182,52)" rx="2" ry="2" />
<text  x="418.59" y="47.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (703,646 samples, 0.18%)</title><rect x="29.3" y="165" width="2.2" height="15.0" fill="rgb(234,27,30)" rx="2" ry="2" />
<text  x="32.35" y="175.5" ></text>
</g>
<g >
<title>aclgen.py:588:main (389,150,021 samples, 100.00%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(247,76,15)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >aclgen.py:588:main</text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (2,788,103 samples, 0.72%)</title><rect x="27.5" y="213" width="8.5" height="15.0" fill="rgb(217,229,8)" rx="2" ry="2" />
<text  x="30.51" y="223.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'match' of 're.Pattern' objects&gt; (601,354 samples, 0.15%)</title><rect x="306.4" y="165" width="1.9" height="15.0" fill="rgb(245,155,38)" rx="2" ry="2" />
<text  x="309.44" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (5,562,762 samples, 1.43%)</title><rect x="220.0" y="101" width="16.8" height="15.0" fill="rgb(239,161,51)" rx="2" ry="2" />
<text  x="222.97" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (7,743,309 samples, 1.99%)</title><rect x="107.3" y="165" width="23.5" height="15.0" fill="rgb(235,47,50)" rx="2" ry="2" />
<text  x="110.28" y="175.5" >i..</text>
</g>
<g >
<title>lex.py:862:lex (1,134,423 samples, 0.29%)</title><rect x="304.8" y="229" width="3.5" height="15.0" fill="rgb(242,115,38)" rx="2" ry="2" />
<text  x="307.83" y="239.5" ></text>
</g>
<g >
<title>policy.py:1279:AddressCleanup (1,055,586 samples, 0.27%)</title><rect x="326.1" y="149" width="3.2" height="15.0" fill="rgb(238,78,35)" rx="2" ry="2" />
<text  x="329.09" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:1883:__init__ (613,567 samples, 0.16%)</title><rect x="118.0" y="149" width="1.8" height="15.0" fill="rgb(214,69,26)" rx="2" ry="2" />
<text  x="120.96" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (531,039 samples, 0.14%)</title><rect x="269.7" y="53" width="1.6" height="15.0" fill="rgb(245,156,49)" rx="2" ry="2" />
<text  x="272.71" y="63.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (2,093,169 samples, 0.54%)</title><rect x="410.9" y="85" width="6.3" height="15.0" fill="rgb(207,90,51)" rx="2" ry="2" />
<text  x="413.88" y="95.5" ></text>
</g>
<g >
<title>copy.py:268:_reconstruct (739,785 samples, 0.19%)</title><rect x="33.7" y="181" width="2.3" height="15.0" fill="rgb(221,206,30)" rx="2" ry="2" />
<text  x="36.72" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (578,150 samples, 0.15%)</title><rect x="249.1" y="53" width="1.8" height="15.0" fill="rgb(217,8,23)" rx="2" ry="2" />
<text  x="252.12" y="63.5" ></text>
</g>
<g >
<title>threading.py:1000:join (243,447,159 samples, 62.56%)</title><rect x="451.8" y="277" width="738.2" height="15.0" fill="rgb(249,114,52)" rx="2" ry="2" />
<text  x="454.81" y="287.5" >threading.py:1000:join</text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (507,418 samples, 0.13%)</title><rect x="440.3" y="85" width="1.5" height="15.0" fill="rgb(205,52,42)" rx="2" ry="2" />
<text  x="443.27" y="95.5" ></text>
</g>
<g >
<title>aclgen.py:501:Run (145,689,821 samples, 37.44%)</title><rect x="10.0" y="277" width="441.8" height="15.0" fill="rgb(236,2,47)" rx="2" ry="2" />
<text  x="13.04" y="287.5" >aclgen.py:501:Run</text>
</g>
<g >
<title>policy.py:1912:p_term_spec (39,511,616 samples, 10.15%)</title><rect x="329.3" y="197" width="119.8" height="15.0" fill="rgb(206,196,33)" rx="2" ry="2" />
<text  x="332.29" y="207.5" >policy.py:1912..</text>
</g>
<g >
<title>policy.py:1862:p_target (3,653,538 samples, 0.94%)</title><rect x="318.2" y="197" width="11.1" height="15.0" fill="rgb(244,87,19)" rx="2" ry="2" />
<text  x="321.21" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (2,170,031 samples, 0.56%)</title><rect x="429.7" y="85" width="6.6" height="15.0" fill="rgb(211,214,44)" rx="2" ry="2" />
<text  x="432.73" y="95.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (719,179 samples, 0.18%)</title><rect x="46.6" y="181" width="2.2" height="15.0" fill="rgb(248,102,36)" rx="2" ry="2" />
<text  x="49.63" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:186:_count_righthand_zero_bits (2,052,760 samples, 0.53%)</title><rect x="213.7" y="101" width="6.3" height="15.0" fill="rgb(250,191,4)" rx="2" ry="2" />
<text  x="216.75" y="111.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (626,227 samples, 0.16%)</title><rect x="23.7" y="197" width="1.9" height="15.0" fill="rgb(214,63,40)" rx="2" ry="2" />
<text  x="26.70" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (2,655,176 samples, 0.68%)</title><rect x="263.3" y="117" width="8.0" height="15.0" fill="rgb(226,214,53)" rx="2" ry="2" />
<text  x="266.27" y="127.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.min&gt; (985,656 samples, 0.25%)</title><rect x="217.0" y="85" width="3.0" height="15.0" fill="rgb(205,135,46)" rx="2" ry="2" />
<text  x="219.98" y="95.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,844,242 samples, 0.73%)</title><rect x="36.1" y="213" width="8.6" height="15.0" fill="rgb(249,199,33)" rx="2" ry="2" />
<text  x="39.09" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (524,380 samples, 0.13%)</title><rect x="442.1" y="85" width="1.6" height="15.0" fill="rgb(236,158,23)" rx="2" ry="2" />
<text  x="445.13" y="95.5" ></text>
</g>
<g >
<title>aclgenerator.py:272:__init__ (449,721 samples, 0.12%)</title><rect x="13.6" y="245" width="1.3" height="15.0" fill="rgb(222,159,10)" rx="2" ry="2" />
<text  x="16.57" y="255.5" ></text>
</g>
<g >
<title>junipersrx.py:630:_BuildAddressBook (898,535 samples, 0.23%)</title><rect x="301.7" y="197" width="2.7" height="15.0" fill="rgb(218,186,49)" rx="2" ry="2" />
<text  x="304.71" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (526,051 samples, 0.14%)</title><rect x="443.9" y="85" width="1.6" height="15.0" fill="rgb(254,189,12)" rx="2" ry="2" />
<text  x="446.95" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (1,946,301 samples, 0.50%)</title><rect x="395.9" y="85" width="5.9" height="15.0" fill="rgb(209,152,31)" rx="2" ry="2" />
<text  x="398.89" y="95.5" ></text>
</g>
<g >
<title>nacaddr.py:153:__init__ (632,426 samples, 0.16%)</title><rect x="441.8" y="101" width="1.9" height="15.0" fill="rgb(206,222,10)" rx="2" ry="2" />
<text  x="444.80" y="111.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,824,276 samples, 0.73%)</title><rect x="18.9" y="213" width="8.6" height="15.0" fill="rgb(206,48,53)" rx="2" ry="2" />
<text  x="21.93" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (1,425,019 samples, 0.37%)</title><rect x="379.2" y="85" width="4.4" height="15.0" fill="rgb(208,229,27)" rx="2" ry="2" />
<text  x="382.23" y="95.5" ></text>
</g>
<g >
<title>juniper.py:186:__str__ (6,382,271 samples, 1.64%)</title><rect x="280.8" y="229" width="19.4" height="15.0" fill="rgb(217,224,34)" rx="2" ry="2" />
<text  x="283.82" y="239.5" ></text>
</g>
<g >
<title>naming.py:538:_ParseFile (431,785 samples, 0.11%)</title><rect x="450.5" y="229" width="1.3" height="15.0" fill="rgb(244,93,12)" rx="2" ry="2" />
<text  x="453.50" y="239.5" ></text>
</g>
<g >
<title>naming.py:442:GetNetAddr (35,366,505 samples, 9.09%)</title><rect x="330.6" y="165" width="107.3" height="15.0" fill="rgb(227,142,44)" rx="2" ry="2" />
<text  x="333.65" y="175.5" >naming.py:442..</text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (4,970,912 samples, 1.28%)</title><rect x="342.6" y="101" width="15.1" height="15.0" fill="rgb(250,187,7)" rx="2" ry="2" />
<text  x="345.62" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:585:__str__ (1,359,764 samples, 0.35%)</title><rect x="284.5" y="197" width="4.1" height="15.0" fill="rgb(235,33,34)" rx="2" ry="2" />
<text  x="287.50" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1809:_string_from_ip_int (500,360 samples, 0.13%)</title><rect x="287.1" y="181" width="1.5" height="15.0" fill="rgb(236,0,38)" rx="2" ry="2" />
<text  x="290.10" y="191.5" ></text>
</g>
<g >
<title>all (389,150,021 samples, 100%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(215,128,41)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>policy.py:405:__init__ (3,698,636 samples, 0.95%)</title><rect x="437.9" y="181" width="11.2" height="15.0" fill="rgb(205,144,31)" rx="2" ry="2" />
<text  x="440.89" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (892,262 samples, 0.23%)</title><rect x="414.5" y="69" width="2.7" height="15.0" fill="rgb(242,221,52)" rx="2" ry="2" />
<text  x="417.52" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:1883:__init__ (536,335 samples, 0.14%)</title><rect x="383.6" y="85" width="1.6" height="15.0" fill="rgb(242,53,53)" rx="2" ry="2" />
<text  x="386.56" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (716,357 samples, 0.18%)</title><rect x="172.0" y="117" width="2.2" height="15.0" fill="rgb(241,227,36)" rx="2" ry="2" />
<text  x="175.05" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:423:AddressListExclude (68,346,666 samples, 17.56%)</title><rect x="64.1" y="197" width="207.2" height="15.0" fill="rgb(209,228,44)" rx="2" ry="2" />
<text  x="67.08" y="207.5" >nacaddr.py:423:AddressListE..</text>
</g>
<g >
<title>nacaddr.py:360:CollapseAddrList (16,748,567 samples, 4.30%)</title><rect x="132.6" y="181" width="50.8" height="15.0" fill="rgb(224,121,44)" rx="2" ry="2" />
<text  x="135.61" y="191.5" >nacad..</text>
</g>
<g >
<title>copy.py:132:deepcopy (747,288 samples, 0.19%)</title><rect x="51.1" y="181" width="2.2" height="15.0" fill="rgb(240,17,20)" rx="2" ry="2" />
<text  x="54.08" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1883:__init__ (442,577 samples, 0.11%)</title><rect x="235.5" y="85" width="1.3" height="15.0" fill="rgb(226,217,50)" rx="2" ry="2" />
<text  x="238.50" y="95.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (3,027,625 samples, 0.78%)</title><rect x="174.2" y="165" width="9.2" height="15.0" fill="rgb(245,158,38)" rx="2" ry="2" />
<text  x="177.22" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (2,317,324 samples, 0.60%)</title><rect x="256.2" y="101" width="7.1" height="15.0" fill="rgb(238,140,43)" rx="2" ry="2" />
<text  x="259.25" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (9,324,267 samples, 2.40%)</title><rect x="408.0" y="117" width="28.3" height="15.0" fill="rgb(217,58,11)" rx="2" ry="2" />
<text  x="411.04" y="127.5" >n..</text>
</g>
<g >
<title>nacaddr.py:278:_SafeToMerge (2,553,684 samples, 0.66%)</title><rect x="161.3" y="149" width="7.7" height="15.0" fill="rgb(229,118,52)" rx="2" ry="2" />
<text  x="164.30" y="159.5" ></text>
</g>
<g >
<title>lex.py:305:token (1,515,804 samples, 0.39%)</title><rect x="313.6" y="197" width="4.6" height="15.0" fill="rgb(233,168,54)" rx="2" ry="2" />
<text  x="316.62" y="207.5" ></text>
</g>
<g >
<title>iputils.py:7:exclude_address (13,225,249 samples, 3.40%)</title><rect x="196.7" y="133" width="40.1" height="15.0" fill="rgb(234,120,21)" rx="2" ry="2" />
<text  x="199.74" y="143.5" >ipu..</text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (1,083,954 samples, 0.28%)</title><rect x="102.1" y="149" width="3.3" height="15.0" fill="rgb(221,135,14)" rx="2" ry="2" />
<text  x="105.09" y="159.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (705,889 samples, 0.18%)</title><rect x="40.4" y="197" width="2.1" height="15.0" fill="rgb(241,110,49)" rx="2" ry="2" />
<text  x="43.36" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (1,475,280 samples, 0.38%)</title><rect x="209.3" y="101" width="4.4" height="15.0" fill="rgb(221,36,15)" rx="2" ry="2" />
<text  x="212.28" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:859:_get_networks_key (544,226 samples, 0.14%)</title><rect x="178.0" y="133" width="1.6" height="15.0" fill="rgb(251,27,40)" rx="2" ry="2" />
<text  x="180.99" y="143.5" ></text>
</g>
<g >
<title>string.py:107:substitute (438,028 samples, 0.11%)</title><rect x="279.4" y="197" width="1.3" height="15.0" fill="rgb(231,36,23)" rx="2" ry="2" />
<text  x="282.40" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:647:__lt__ (696,642 samples, 0.18%)</title><rect x="181.3" y="149" width="2.1" height="15.0" fill="rgb(237,190,6)" rx="2" ry="2" />
<text  x="184.29" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:178:__deepcopy__ (897,201 samples, 0.23%)</title><rect x="53.3" y="229" width="2.8" height="15.0" fill="rgb(228,200,6)" rx="2" ry="2" />
<text  x="56.35" y="239.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (731,147 samples, 0.19%)</title><rect x="31.5" y="165" width="2.2" height="15.0" fill="rgb(207,88,47)" rx="2" ry="2" />
<text  x="34.51" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1883:__init__ (704,220 samples, 0.18%)</title><rect x="126.2" y="133" width="2.1" height="15.0" fill="rgb(217,32,19)" rx="2" ry="2" />
<text  x="129.16" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:859:_get_networks_key (472,216 samples, 0.12%)</title><rect x="187.9" y="133" width="1.4" height="15.0" fill="rgb(207,22,4)" rx="2" ry="2" />
<text  x="190.87" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (1,371,715 samples, 0.35%)</title><rect x="157.1" y="117" width="4.2" height="15.0" fill="rgb(215,109,6)" rx="2" ry="2" />
<text  x="160.14" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (600,052 samples, 0.15%)</title><rect x="427.0" y="69" width="1.8" height="15.0" fill="rgb(227,108,16)" rx="2" ry="2" />
<text  x="429.98" y="79.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,829,611 samples, 0.73%)</title><rect x="44.8" y="213" width="8.5" height="15.0" fill="rgb(248,110,48)" rx="2" ry="2" />
<text  x="47.77" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:588:__hash__ (1,348,119 samples, 0.35%)</title><rect x="165.0" y="117" width="4.0" height="15.0" fill="rgb(213,120,45)" rx="2" ry="2" />
<text  x="167.96" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (792,172 samples, 0.20%)</title><rect x="57.9" y="197" width="2.4" height="15.0" fill="rgb(223,13,29)" rx="2" ry="2" />
<text  x="60.90" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:647:__lt__ (506,623 samples, 0.13%)</title><rect x="324.4" y="69" width="1.5" height="15.0" fill="rgb(227,161,43)" rx="2" ry="2" />
<text  x="327.39" y="79.5" ></text>
</g>
<g >
<title>policy.py:1013:AddObject (3,623,170 samples, 0.93%)</title><rect x="438.1" y="165" width="11.0" height="15.0" fill="rgb(241,167,46)" rx="2" ry="2" />
<text  x="441.12" y="175.5" ></text>
</g>
<g >
<title>iptables.py:114:__str__ (72,669,418 samples, 18.67%)</title><rect x="60.4" y="229" width="220.3" height="15.0" fill="rgb(245,141,46)" rx="2" ry="2" />
<text  x="63.38" y="239.5" >iptables.py:114:__str__</text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (2,869,142 samples, 0.74%)</title><rect x="357.7" y="101" width="8.7" height="15.0" fill="rgb(246,197,50)" rx="2" ry="2" />
<text  x="360.70" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:395:SortAddrList (2,394,602 samples, 0.62%)</title><rect x="318.7" y="101" width="7.2" height="15.0" fill="rgb(222,84,34)" rx="2" ry="2" />
<text  x="321.67" y="111.5" ></text>
</g>
<g >
<title>naming.py:456:GetNet (518,559 samples, 0.13%)</title><rect x="436.3" y="117" width="1.6" height="15.0" fill="rgb(249,128,18)" rx="2" ry="2" />
<text  x="439.31" y="127.5" ></text>
</g>
<g >
<title>juniper.py:687:_Comment (497,816 samples, 0.13%)</title><rect x="295.9" y="213" width="1.5" height="15.0" fill="rgb(230,103,3)" rx="2" ry="2" />
<text  x="298.88" y="223.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (739,477 samples, 0.19%)</title><rect x="31.5" y="181" width="2.2" height="15.0" fill="rgb(213,30,49)" rx="2" ry="2" />
<text  x="34.48" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (951,798 samples, 0.24%)</title><rect x="446.1" y="101" width="2.8" height="15.0" fill="rgb(230,131,38)" rx="2" ry="2" />
<text  x="449.06" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (11,371,897 samples, 2.92%)</title><rect x="236.8" y="133" width="34.5" height="15.0" fill="rgb(229,42,26)" rx="2" ry="2" />
<text  x="239.84" y="143.5" >na..</text>
</g>
<g >
<title>iptables.py:403:_FormatPart (3,103,149 samples, 0.80%)</title><rect x="271.3" y="213" width="9.4" height="15.0" fill="rgb(233,54,41)" rx="2" ry="2" />
<text  x="274.32" y="223.5" ></text>
</g>
<g >
<title>lex.py:728:validate_rules (1,000,009 samples, 0.26%)</title><rect x="305.2" y="197" width="3.1" height="15.0" fill="rgb(241,68,36)" rx="2" ry="2" />
<text  x="308.23" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:172:supernet_of (3,838,428 samples, 0.99%)</title><rect x="149.7" y="149" width="11.6" height="15.0" fill="rgb(205,148,33)" rx="2" ry="2" />
<text  x="152.66" y="159.5" ></text>
</g>
<g >
<title>copy.py:268:_reconstruct (626,488 samples, 0.16%)</title><rect x="25.6" y="197" width="1.9" height="15.0" fill="rgb(238,58,12)" rx="2" ry="2" />
<text  x="28.60" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (2,802,092 samples, 0.72%)</title><rect x="152.8" y="133" width="8.5" height="15.0" fill="rgb(252,202,46)" rx="2" ry="2" />
<text  x="155.80" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:667:__hash__ (432,786 samples, 0.11%)</title><rect x="289.5" y="181" width="1.3" height="15.0" fill="rgb(242,135,48)" rx="2" ry="2" />
<text  x="292.47" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (5,137,082 samples, 1.32%)</title><rect x="369.6" y="101" width="15.6" height="15.0" fill="rgb(224,53,26)" rx="2" ry="2" />
<text  x="372.60" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1268:__init__ (444,115 samples, 0.11%)</title><rect x="356.3" y="85" width="1.4" height="15.0" fill="rgb(240,57,28)" rx="2" ry="2" />
<text  x="359.35" y="95.5" ></text>
</g>
<g >
<title>juniper.py:668:&lt;listcomp&gt; (517,347 samples, 0.13%)</title><rect x="289.2" y="197" width="1.6" height="15.0" fill="rgb(212,225,18)" rx="2" ry="2" />
<text  x="292.21" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (3,600,158 samples, 0.93%)</title><rect x="410.0" y="101" width="10.9" height="15.0" fill="rgb(239,27,31)" rx="2" ry="2" />
<text  x="412.97" y="111.5" ></text>
</g>
<g >
<title>cisco.py:639:__str__ (688,864 samples, 0.18%)</title><rect x="14.9" y="229" width="2.1" height="15.0" fill="rgb(239,170,44)" rx="2" ry="2" />
<text  x="17.94" y="239.5" ></text>
</g>
<g >
<title>juniper.py:653:_MinimizePrefixes (2,393,434 samples, 0.62%)</title><rect x="288.6" y="213" width="7.3" height="15.0" fill="rgb(215,44,35)" rx="2" ry="2" />
<text  x="291.62" y="223.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (709,599 samples, 0.18%)</title><rect x="248.7" y="69" width="2.2" height="15.0" fill="rgb(232,224,34)" rx="2" ry="2" />
<text  x="251.72" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (488,857 samples, 0.13%)</title><rect x="253.3" y="85" width="1.5" height="15.0" fill="rgb(235,220,5)" rx="2" ry="2" />
<text  x="256.32" y="95.5" ></text>
</g>
<g >
<title>naming.py:456:GetNet (52,933 samples, 0.01%)</title><rect x="448.9" y="101" width="0.2" height="15.0" fill="rgb(214,107,54)" rx="2" ry="2" />
<text  x="451.94" y="111.5" ></text>
</g>
<g >
<title>aclgen.py:464:WriteFiles (455,484 samples, 0.12%)</title><rect x="449.1" y="261" width="1.4" height="15.0" fill="rgb(219,204,19)" rx="2" ry="2" />
<text  x="452.10" y="271.5" ></text>
</g>
<g >
<title>policy.py:190:AddFilter (2,537,358 samples, 0.65%)</title><rect x="318.2" y="165" width="7.7" height="15.0" fill="rgb(224,85,12)" rx="2" ry="2" />
<text  x="321.24" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (8,549,747 samples, 2.20%)</title><rect x="340.5" y="117" width="25.9" height="15.0" fill="rgb(209,43,26)" rx="2" ry="2" />
<text  x="343.47" y="127.5" >i..</text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (955,860 samples, 0.25%)</title><rect x="248.0" y="85" width="2.9" height="15.0" fill="rgb(232,88,36)" rx="2" ry="2" />
<text  x="250.97" y="95.5" ></text>
</g>
<g >
<title>policy.py:197:_TranslateTerms (2,536,724 samples, 0.65%)</title><rect x="318.2" y="149" width="7.7" height="15.0" fill="rgb(219,7,35)" rx="2" ry="2" />
<text  x="321.24" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (1,323,628 samples, 0.34%)</title><rect x="170.2" y="133" width="4.0" height="15.0" fill="rgb(236,29,16)" rx="2" ry="2" />
<text  x="173.20" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (444,497 samples, 0.11%)</title><rect x="54.7" y="197" width="1.4" height="15.0" fill="rgb(213,131,5)" rx="2" ry="2" />
<text  x="57.72" y="207.5" ></text>
</g>
<g >
<title>policy.py:197:_TranslateTerms (1,108,458 samples, 0.28%)</title><rect x="325.9" y="165" width="3.4" height="15.0" fill="rgb(223,66,51)" rx="2" ry="2" />
<text  x="328.93" y="175.5" ></text>
</g>
<g >
<title>naming.py:456:GetNet (35,359,059 samples, 9.09%)</title><rect x="330.7" y="149" width="107.2" height="15.0" fill="rgb(228,13,7)" rx="2" ry="2" />
<text  x="333.67" y="159.5" >naming.py:456..</text>
</g>
<g >
<title>copy.py:132:deepcopy (720,007 samples, 0.19%)</title><rect x="42.5" y="181" width="2.2" height="15.0" fill="rgb(245,159,47)" rx="2" ry="2" />
<text  x="45.53" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (3,856,767 samples, 0.99%)</title><rect x="243.1" y="117" width="11.7" height="15.0" fill="rgb(206,125,22)" rx="2" ry="2" />
<text  x="246.10" y="127.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (737,654 samples, 0.19%)</title><rect x="29.2" y="181" width="2.3" height="15.0" fill="rgb(220,38,52)" rx="2" ry="2" />
<text  x="32.24" y="191.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (608,411 samples, 0.16%)</title><rect x="434.5" y="53" width="1.8" height="15.0" fill="rgb(232,5,13)" rx="2" ry="2" />
<text  x="437.47" y="63.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (14,271,504 samples, 3.67%)</title><rect x="17.0" y="245" width="43.3" height="15.0" fill="rgb(253,96,23)" rx="2" ry="2" />
<text  x="20.03" y="255.5" >copy..</text>
</g>
<g >
<title>copy.py:132:deepcopy (623,450 samples, 0.16%)</title><rect x="25.6" y="181" width="1.9" height="15.0" fill="rgb(251,29,49)" rx="2" ry="2" />
<text  x="28.61" y="191.5" ></text>
</g>
<g >
<title>naming.py:442:GetNetAddr (3,610,123 samples, 0.93%)</title><rect x="438.2" y="149" width="10.9" height="15.0" fill="rgb(224,138,9)" rx="2" ry="2" />
<text  x="441.16" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:360:get_mixed_type_key (659,840 samples, 0.17%)</title><rect x="322.4" y="69" width="2.0" height="15.0" fill="rgb(219,46,43)" rx="2" ry="2" />
<text  x="325.39" y="79.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (662,386 samples, 0.17%)</title><rect x="415.2" y="53" width="2.0" height="15.0" fill="rgb(250,101,49)" rx="2" ry="2" />
<text  x="418.22" y="63.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'acquire' of '_thread.lock' objects&gt; (243,447,141 samples, 62.56%)</title><rect x="451.8" y="245" width="738.2" height="15.0" fill="rgb(228,154,9)" rx="2" ry="2" />
<text  x="454.81" y="255.5" >~:0:&lt;method 'acquire' of '_thread.lock' objects&gt;</text>
</g>
<g >
<title>yacc.py:1003:parseopt_notrack (46,444,431 samples, 11.93%)</title><rect x="308.3" y="213" width="140.8" height="15.0" fill="rgb(246,135,52)" rx="2" ry="2" />
<text  x="311.27" y="223.5" >yacc.py:1003:pars..</text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (611,225 samples, 0.16%)</title><rect x="21.8" y="197" width="1.9" height="15.0" fill="rgb(250,187,30)" rx="2" ry="2" />
<text  x="24.85" y="207.5" ></text>
</g>
<g >
<title>naming.py:505:_Parse (435,110 samples, 0.11%)</title><rect x="450.5" y="245" width="1.3" height="15.0" fill="rgb(244,47,43)" rx="2" ry="2" />
<text  x="453.49" y="255.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (610,381 samples, 0.16%)</title><rect x="21.8" y="181" width="1.9" height="15.0" fill="rgb(243,206,9)" rx="2" ry="2" />
<text  x="24.85" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:400:RemoveAddressFromList (28,996,834 samples, 7.45%)</title><rect x="183.4" y="181" width="87.9" height="15.0" fill="rgb(231,35,43)" rx="2" ry="2" />
<text  x="186.40" y="191.5" >nacaddr.py..</text>
</g>
<g >
<title>lex.py:831:validate_module (947,355 samples, 0.24%)</title><rect x="305.4" y="181" width="2.9" height="15.0" fill="rgb(221,66,15)" rx="2" ry="2" />
<text  x="308.39" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (495,707 samples, 0.13%)</title><rect x="434.8" y="37" width="1.5" height="15.0" fill="rgb(230,72,29)" rx="2" ry="2" />
<text  x="437.81" y="47.5" ></text>
</g>
<g >
<title>cisco.py:1232:__str__ (692,964 samples, 0.18%)</title><rect x="14.9" y="245" width="2.1" height="15.0" fill="rgb(253,201,18)" rx="2" ry="2" />
<text  x="17.93" y="255.5" ></text>
</g>
<g >
<title>ipaddress.py:1179:_string_from_ip_int (626,861 samples, 0.16%)</title><rect x="285.2" y="181" width="1.9" height="15.0" fill="rgb(247,180,2)" rx="2" ry="2" />
<text  x="288.20" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (819,556 samples, 0.21%)</title><rect x="433.8" y="69" width="2.5" height="15.0" fill="rgb(243,8,9)" rx="2" ry="2" />
<text  x="436.83" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:550:__int__ (894,954 samples, 0.23%)</title><rect x="99.4" y="149" width="2.7" height="15.0" fill="rgb(237,65,15)" rx="2" ry="2" />
<text  x="102.38" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (1,281,654 samples, 0.33%)</title><rect x="352.5" y="53" width="3.8" height="15.0" fill="rgb(215,123,5)" rx="2" ry="2" />
<text  x="355.46" y="63.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (1,294,262 samples, 0.33%)</title><rect x="250.9" y="101" width="3.9" height="15.0" fill="rgb(235,82,53)" rx="2" ry="2" />
<text  x="253.87" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:93:supernet_of (1,705,789 samples, 0.44%)</title><rect x="169.0" y="149" width="5.2" height="15.0" fill="rgb(233,52,7)" rx="2" ry="2" />
<text  x="172.05" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (5,153,443 samples, 1.32%)</title><rect x="387.4" y="101" width="15.6" height="15.0" fill="rgb(232,52,42)" rx="2" ry="2" />
<text  x="390.40" y="111.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (753,938 samples, 0.19%)</title><rect x="46.5" y="197" width="2.3" height="15.0" fill="rgb(215,32,46)" rx="2" ry="2" />
<text  x="49.53" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (542,738 samples, 0.14%)</title><rect x="179.6" y="149" width="1.7" height="15.0" fill="rgb(227,38,46)" rx="2" ry="2" />
<text  x="182.64" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:153:__init__ (2,608,845 samples, 0.67%)</title><rect x="420.9" y="101" width="7.9" height="15.0" fill="rgb(240,200,12)" rx="2" ry="2" />
<text  x="423.89" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (2,324,704 samples, 0.60%)</title><rect x="264.3" y="101" width="7.0" height="15.0" fill="rgb(242,95,17)" rx="2" ry="2" />
<text  x="267.27" y="111.5" ></text>
</g>
<g >
<title>lex.py:576:validate_all (1,026,334 samples, 0.26%)</title><rect x="305.2" y="213" width="3.1" height="15.0" fill="rgb(241,86,44)" rx="2" ry="2" />
<text  x="308.15" y="223.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (610,125 samples, 0.16%)</title><rect x="21.8" y="165" width="1.9" height="15.0" fill="rgb(216,77,35)" rx="2" ry="2" />
<text  x="24.85" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (486,924 samples, 0.13%)</title><rect x="294.4" y="165" width="1.5" height="15.0" fill="rgb(227,228,9)" rx="2" ry="2" />
<text  x="297.40" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:87:subnet_of (1,681,642 samples, 0.43%)</title><rect x="290.8" y="197" width="5.1" height="15.0" fill="rgb(251,4,30)" rx="2" ry="2" />
<text  x="293.78" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (456,331 samples, 0.12%)</title><rect x="419.5" y="69" width="1.4" height="15.0" fill="rgb(245,94,10)" rx="2" ry="2" />
<text  x="422.50" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:585:__str__ (625,004 samples, 0.16%)</title><rect x="277.5" y="181" width="1.9" height="15.0" fill="rgb(215,58,47)" rx="2" ry="2" />
<text  x="280.51" y="191.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (2,311,900 samples, 0.59%)</title><rect x="185.5" y="165" width="7.1" height="15.0" fill="rgb(253,105,29)" rx="2" ry="2" />
<text  x="188.55" y="175.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (704,618 samples, 0.18%)</title><rect x="40.4" y="165" width="2.1" height="15.0" fill="rgb(252,56,46)" rx="2" ry="2" />
<text  x="43.36" y="175.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (2,391,768 samples, 0.61%)</title><rect x="318.7" y="85" width="7.2" height="15.0" fill="rgb(210,182,42)" rx="2" ry="2" />
<text  x="321.68" y="95.5" ></text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (1,140,889 samples, 0.29%)</title><rect x="292.4" y="181" width="3.5" height="15.0" fill="rgb(218,9,40)" rx="2" ry="2" />
<text  x="295.42" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (2,242,364 samples, 0.58%)</title><rect x="244.1" y="101" width="6.8" height="15.0" fill="rgb(241,153,6)" rx="2" ry="2" />
<text  x="247.07" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1268:__init__ (407,926 samples, 0.10%)</title><rect x="401.8" y="85" width="1.2" height="15.0" fill="rgb(208,126,7)" rx="2" ry="2" />
<text  x="404.79" y="95.5" ></text>
</g>
<g >
<title>naming.py:456:GetNet (3,609,363 samples, 0.93%)</title><rect x="438.2" y="133" width="10.9" height="15.0" fill="rgb(249,153,23)" rx="2" ry="2" />
<text  x="441.16" y="143.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (1,573,052 samples, 0.40%)</title><rect x="351.6" y="69" width="4.7" height="15.0" fill="rgb(239,221,15)" rx="2" ry="2" />
<text  x="354.58" y="79.5" ></text>
</g>
<g >
<title>policy.py:190:AddFilter (1,108,940 samples, 0.28%)</title><rect x="325.9" y="181" width="3.4" height="15.0" fill="rgb(245,90,23)" rx="2" ry="2" />
<text  x="328.93" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (2,478,515 samples, 0.64%)</title><rect x="428.8" y="101" width="7.5" height="15.0" fill="rgb(217,151,16)" rx="2" ry="2" />
<text  x="431.80" y="111.5" ></text>
</g>
<g >
<title>aclgen.py:166:RenderFile (144,416,135 samples, 37.11%)</title><rect x="11.2" y="261" width="437.9" height="15.0" fill="rgb(245,84,33)" rx="2" ry="2" />
<text  x="14.20" y="271.5" >aclgen.py:166:RenderFile</text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (2,163,141 samples, 0.56%)</title><rect x="422.2" y="85" width="6.6" height="15.0" fill="rgb(208,68,50)" rx="2" ry="2" />
<text  x="425.24" y="95.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (704,914 samples, 0.18%)</title><rect x="40.4" y="181" width="2.1" height="15.0" fill="rgb(233,41,27)" rx="2" ry="2" />
<text  x="43.36" y="191.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (2,884,794 samples, 0.74%)</title><rect x="36.0" y="229" width="8.7" height="15.0" fill="rgb(233,139,52)" rx="2" ry="2" />
<text  x="38.97" y="239.5" ></text>
</g>
<g >
<title>junipersrx.py:301:__init__ (1,406,301 samples, 0.36%)</title><rect x="300.2" y="245" width="4.2" height="15.0" fill="rgb(251,34,20)" rx="2" ry="2" />
<text  x="303.18" y="255.5" ></text>
</g>
<g >
<title>nacaddr.py:417:&lt;genexpr&gt; (25,658,476 samples, 6.59%)</title><rect x="193.5" y="149" width="77.8" height="15.0" fill="rgb(219,203,6)" rx="2" ry="2" />
<text  x="196.52" y="159.5" >nacaddr...</text>
</g>
<g >
<title>ipaddress.py:699:hostmask (2,794,563 samples, 0.72%)</title><rect x="119.8" y="149" width="8.5" height="15.0" fill="rgb(222,76,36)" rx="2" ry="2" />
<text  x="122.82" y="159.5" ></text>
</g>
<g >
<title>policy.py:1290:cleanup (2,398,198 samples, 0.62%)</title><rect x="318.7" y="117" width="7.2" height="15.0" fill="rgb(217,92,33)" rx="2" ry="2" />
<text  x="321.66" y="127.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (755,802 samples, 0.19%)</title><rect x="51.1" y="197" width="2.2" height="15.0" fill="rgb(216,191,21)" rx="2" ry="2" />
<text  x="54.05" y="207.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,786,630 samples, 0.72%)</title><rect x="27.5" y="197" width="8.5" height="15.0" fill="rgb(228,51,44)" rx="2" ry="2" />
<text  x="30.52" y="207.5" ></text>
</g>
<g >
<title>policy.py:1279:AddressCleanup (2,415,725 samples, 0.62%)</title><rect x="318.6" y="133" width="7.3" height="15.0" fill="rgb(254,51,5)" rx="2" ry="2" />
<text  x="321.61" y="143.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (736,677 samples, 0.19%)</title><rect x="48.8" y="181" width="2.3" height="15.0" fill="rgb(206,200,9)" rx="2" ry="2" />
<text  x="51.82" y="191.5" ></text>
</g>
<g >
<title>naming.py:128:__init__ (436,761 samples, 0.11%)</title><rect x="450.5" y="261" width="1.3" height="15.0" fill="rgb(217,2,50)" rx="2" ry="2" />
<text  x="453.48" y="271.5" ></text>
</g>
<g >
<title>copy.py:268:_reconstruct (723,515 samples, 0.19%)</title><rect x="42.5" y="197" width="2.2" height="15.0" fill="rgb(223,91,34)" rx="2" ry="2" />
<text  x="45.52" y="207.5" ></text>
</g>
<g >
<title>copy.py:268:_reconstruct (2,847,073 samples, 0.73%)</title><rect x="44.7" y="229" width="8.6" height="15.0" fill="rgb(245,209,22)" rx="2" ry="2" />
<text  x="47.71" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:732:prefixlen (402,775 samples, 0.10%)</title><rect x="147.2" y="149" width="1.2" height="15.0" fill="rgb(206,162,21)" rx="2" ry="2" />
<text  x="150.15" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:153:__init__ (830,202 samples, 0.21%)</title><rect x="53.6" y="213" width="2.5" height="15.0" fill="rgb(240,95,34)" rx="2" ry="2" />
<text  x="56.55" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (877,971 samples, 0.23%)</title><rect x="268.7" y="85" width="2.6" height="15.0" fill="rgb(216,173,37)" rx="2" ry="2" />
<text  x="271.66" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (2,118,968 samples, 0.54%)</title><rect x="349.9" y="85" width="6.4" height="15.0" fill="rgb(225,69,30)" rx="2" ry="2" />
<text  x="352.92" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (681,095 samples, 0.18%)</title><rect x="381.5" y="69" width="2.1" height="15.0" fill="rgb(225,127,47)" rx="2" ry="2" />
<text  x="384.49" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:360:get_mixed_type_key (907,326 samples, 0.23%)</title><rect x="176.9" y="149" width="2.7" height="15.0" fill="rgb(232,215,41)" rx="2" ry="2" />
<text  x="179.89" y="159.5" ></text>
</g>
<g >
<title>policy.py:172:__init__ (2,537,977 samples, 0.65%)</title><rect x="318.2" y="181" width="7.7" height="15.0" fill="rgb(215,181,29)" rx="2" ry="2" />
<text  x="321.23" y="191.5" ></text>
</g>
<g >
<title>policy.py:1290:cleanup (1,047,928 samples, 0.27%)</title><rect x="326.1" y="133" width="3.2" height="15.0" fill="rgb(238,229,35)" rx="2" ry="2" />
<text  x="329.12" y="143.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (736,198 samples, 0.19%)</title><rect x="33.7" y="165" width="2.3" height="15.0" fill="rgb(225,229,18)" rx="2" ry="2" />
<text  x="36.73" y="175.5" ></text>
</g>
<g >
<title>aclgenerator.py:272:__init__ (1,406,147 samples, 0.36%)</title><rect x="300.2" y="229" width="4.2" height="15.0" fill="rgb(212,170,18)" rx="2" ry="2" />
<text  x="303.18" y="239.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (1,045,118 samples, 0.27%)</title><rect x="326.1" y="101" width="3.2" height="15.0" fill="rgb(212,152,44)" rx="2" ry="2" />
<text  x="329.12" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (562,032 samples, 0.14%)</title><rect x="233.8" y="69" width="1.7" height="15.0" fill="rgb(242,166,30)" rx="2" ry="2" />
<text  x="236.79" y="79.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (1,444,870 samples, 0.37%)</title><rect x="397.4" y="69" width="4.4" height="15.0" fill="rgb(217,168,38)" rx="2" ry="2" />
<text  x="400.41" y="79.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (1,826,939 samples, 0.47%)</title><rect x="163.5" y="133" width="5.5" height="15.0" fill="rgb(240,192,46)" rx="2" ry="2" />
<text  x="166.51" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (517,962 samples, 0.13%)</title><rect x="363.6" y="69" width="1.6" height="15.0" fill="rgb(231,7,40)" rx="2" ry="2" />
<text  x="366.59" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (872,736 samples, 0.22%)</title><rect x="439.2" y="101" width="2.6" height="15.0" fill="rgb(222,102,28)" rx="2" ry="2" />
<text  x="442.16" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (555,648 samples, 0.14%)</title><rect x="302.8" y="165" width="1.6" height="15.0" fill="rgb(221,85,49)" rx="2" ry="2" />
<text  x="305.75" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (642,822 samples, 0.17%)</title><rect x="261.3" y="85" width="2.0" height="15.0" fill="rgb(208,146,17)" rx="2" ry="2" />
<text  x="264.32" y="95.5" ></text>
</g>
<g >
<title>nacaddr.py:153:__init__ (6,195,551 samples, 1.59%)</title><rect x="366.4" y="117" width="18.8" height="15.0" fill="rgb(225,15,39)" rx="2" ry="2" />
<text  x="369.40" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:202:summarize_address_range (11,992,635 samples, 3.08%)</title><rect x="200.5" y="117" width="36.3" height="15.0" fill="rgb(219,110,3)" rx="2" ry="2" />
<text  x="203.48" y="127.5" >ipa..</text>
</g>
<g >
<title>ipaddress.py:647:__lt__ (604,465 samples, 0.16%)</title><rect x="190.7" y="149" width="1.9" height="15.0" fill="rgb(211,165,25)" rx="2" ry="2" />
<text  x="193.73" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (795,129 samples, 0.20%)</title><rect x="74.3" y="181" width="2.4" height="15.0" fill="rgb(207,65,6)" rx="2" ry="2" />
<text  x="77.27" y="191.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (737,696 samples, 0.19%)</title><rect x="48.8" y="197" width="2.3" height="15.0" fill="rgb(244,119,31)" rx="2" ry="2" />
<text  x="51.81" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (2,260,353 samples, 0.58%)</title><rect x="438.7" y="117" width="6.8" height="15.0" fill="rgb(244,9,50)" rx="2" ry="2" />
<text  x="441.69" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:120:supernet (424,393 samples, 0.11%)</title><rect x="148.4" y="149" width="1.3" height="15.0" fill="rgb(220,146,42)" rx="2" ry="2" />
<text  x="151.38" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (600,833 samples, 0.15%)</title><rect x="443.7" y="101" width="1.8" height="15.0" fill="rgb(248,45,47)" rx="2" ry="2" />
<text  x="446.72" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:613:__str__ (1,759,738 samples, 0.45%)</title><rect x="283.3" y="213" width="5.3" height="15.0" fill="rgb(215,53,17)" rx="2" ry="2" />
<text  x="286.28" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:153:__init__ (2,794,797 samples, 0.72%)</title><rect x="254.8" y="117" width="8.5" height="15.0" fill="rgb(231,210,1)" rx="2" ry="2" />
<text  x="257.80" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (1,177,217 samples, 0.30%)</title><rect x="398.2" y="53" width="3.6" height="15.0" fill="rgb(217,142,31)" rx="2" ry="2" />
<text  x="401.22" y="63.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (22,143,503 samples, 5.69%)</title><rect x="335.9" y="133" width="67.1" height="15.0" fill="rgb(247,83,11)" rx="2" ry="2" />
<text  x="338.88" y="143.5" >nacaddr..</text>
</g>
<g >
<title>ipaddress.py:683:overlaps (17,837,126 samples, 4.58%)</title><rect x="76.7" y="181" width="54.1" height="15.0" fill="rgb(210,142,5)" rx="2" ry="2" />
<text  x="79.68" y="191.5" >ipadd..</text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.isinstance&gt; (628,410 samples, 0.16%)</title><rect x="105.4" y="149" width="1.9" height="15.0" fill="rgb(207,173,22)" rx="2" ry="2" />
<text  x="108.38" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:360:get_mixed_type_key (787,272 samples, 0.20%)</title><rect x="186.9" y="149" width="2.4" height="15.0" fill="rgb(244,199,12)" rx="2" ry="2" />
<text  x="189.91" y="159.5" ></text>
</g>
<g >
<title>threading.py:1038:_wait_for_tstate_lock (243,447,148 samples, 62.56%)</title><rect x="451.8" y="261" width="738.2" height="15.0" fill="rgb(220,207,13)" rx="2" ry="2" />
<text  x="454.81" y="271.5" >threading.py:1038:_wait_for_tstate_lock</text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (470,925 samples, 0.12%)</title><rect x="189.3" y="149" width="1.4" height="15.0" fill="rgb(246,36,27)" rx="2" ry="2" />
<text  x="192.30" y="159.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (688,171 samples, 0.18%)</title><rect x="38.3" y="181" width="2.1" height="15.0" fill="rgb(250,37,44)" rx="2" ry="2" />
<text  x="41.27" y="191.5" ></text>
</g>
</g>
</svg>

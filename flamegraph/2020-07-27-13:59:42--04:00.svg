<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="358" onload="init(evt)" viewBox="0 0 1200 358" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="358.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >"2020-07-27-13:59:42--04:00 cProfile"</text>
<text id="details" x="10.00" y="341" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="341" > </text>
<g id="frames">
<g >
<title>copy.py:132:deepcopy (10,547,270 samples, 0.87%)</title><rect x="43.5" y="213" width="10.2" height="15.0" fill="rgb(210,138,12)" rx="2" ry="2" />
<text  x="46.46" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:82:supernet_of (39,284,229 samples, 3.23%)</title><rect x="568.5" y="181" width="38.2" height="15.0" fill="rgb(219,100,7)" rx="2" ry="2" />
<text  x="571.54" y="191.5" >nac..</text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (2,644,164 samples, 0.22%)</title><rect x="48.5" y="181" width="2.6" height="15.0" fill="rgb(223,33,11)" rx="2" ry="2" />
<text  x="51.51" y="191.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'issuperset' of 'frozenset' objects&gt; (2,137,510 samples, 0.18%)</title><rect x="239.2" y="69" width="2.1" height="15.0" fill="rgb(248,55,34)" rx="2" ry="2" />
<text  x="242.25" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:1809:_string_from_ip_int (3,349,287 samples, 0.28%)</title><rect x="213.1" y="53" width="3.3" height="15.0" fill="rgb(214,169,25)" rx="2" ry="2" />
<text  x="216.10" y="63.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (1,702,755 samples, 0.14%)</title><rect x="666.4" y="69" width="1.7" height="15.0" fill="rgb(241,220,13)" rx="2" ry="2" />
<text  x="669.40" y="79.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.isinstance&gt; (2,442,717 samples, 0.20%)</title><rect x="481.6" y="133" width="2.4" height="15.0" fill="rgb(220,46,12)" rx="2" ry="2" />
<text  x="484.62" y="143.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,461,701 samples, 0.20%)</title><rect x="30.9" y="181" width="2.4" height="15.0" fill="rgb(215,75,34)" rx="2" ry="2" />
<text  x="33.89" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (3,195,989 samples, 0.26%)</title><rect x="279.5" y="69" width="3.1" height="15.0" fill="rgb(222,160,6)" rx="2" ry="2" />
<text  x="282.46" y="79.5" ></text>
</g>
<g >
<title>nacaddr.py:109:supernet (2,420,775 samples, 0.20%)</title><rect x="104.4" y="149" width="2.3" height="15.0" fill="rgb(246,76,18)" rx="2" ry="2" />
<text  x="107.36" y="159.5" ></text>
</g>
<g >
<title>junipersrx.py:687:_GenerateAddressBook (1,453,927 samples, 0.12%)</title><rect x="607.1" y="229" width="1.4" height="15.0" fill="rgb(215,29,20)" rx="2" ry="2" />
<text  x="610.11" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (5,795,445 samples, 0.48%)</title><rect x="601.1" y="149" width="5.6" height="15.0" fill="rgb(212,51,9)" rx="2" ry="2" />
<text  x="604.08" y="159.5" ></text>
</g>
<g >
<title>managers.py:783:_callmethod (4,917,238 samples, 0.40%)</title><rect x="13.2" y="213" width="4.8" height="15.0" fill="rgb(226,121,40)" rx="2" ry="2" />
<text  x="16.23" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (5,337,516 samples, 0.44%)</title><rect x="346.5" y="149" width="5.2" height="15.0" fill="rgb(239,130,13)" rx="2" ry="2" />
<text  x="349.47" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:54:_is_subnet_of (56,274,070 samples, 4.63%)</title><rect x="324.9" y="181" width="54.6" height="15.0" fill="rgb(215,39,53)" rx="2" ry="2" />
<text  x="327.87" y="191.5" >nacad..</text>
</g>
<g >
<title>ipaddress.py:1257:version (9,485,580 samples, 0.78%)</title><rect x="406.7" y="181" width="9.2" height="15.0" fill="rgb(208,94,26)" rx="2" ry="2" />
<text  x="409.69" y="191.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,664,465 samples, 0.22%)</title><rect x="38.2" y="165" width="2.6" height="15.0" fill="rgb(248,86,3)" rx="2" ry="2" />
<text  x="41.22" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:659:__eq__ (3,415,349 samples, 0.28%)</title><rect x="132.5" y="133" width="3.3" height="15.0" fill="rgb(250,13,43)" rx="2" ry="2" />
<text  x="135.49" y="143.5" ></text>
</g>
<g >
<title>juniper.py:957:__str__ (270,826,249 samples, 22.30%)</title><rect x="293.7" y="245" width="263.2" height="15.0" fill="rgb(208,4,26)" rx="2" ry="2" />
<text  x="296.72" y="255.5" >juniper.py:957:__str__</text>
</g>
<g >
<title>functools.py:103:_ge_from_lt (8,815,411 samples, 0.73%)</title><rect x="343.1" y="165" width="8.6" height="15.0" fill="rgb(238,214,13)" rx="2" ry="2" />
<text  x="346.09" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:88:__deepcopy__ (5,985,893 samples, 0.49%)</title><rect x="68.8" y="229" width="5.8" height="15.0" fill="rgb(254,28,34)" rx="2" ry="2" />
<text  x="71.79" y="239.5" ></text>
</g>
<g >
<title>nacaddr.py:29:IP (36,929,554 samples, 3.04%)</title><rect x="621.1" y="133" width="35.9" height="15.0" fill="rgb(217,22,47)" rx="2" ry="2" />
<text  x="624.08" y="143.5" >nac..</text>
</g>
<g >
<title>policy.py:172:__init__ (3,412,665 samples, 0.28%)</title><rect x="612.9" y="181" width="3.3" height="15.0" fill="rgb(238,84,4)" rx="2" ry="2" />
<text  x="615.87" y="191.5" ></text>
</g>
<g >
<title>iptables.py:403:_FormatPart (2,762,407 samples, 0.23%)</title><rect x="291.0" y="213" width="2.7" height="15.0" fill="rgb(210,185,53)" rx="2" ry="2" />
<text  x="294.04" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (1,976,941 samples, 0.16%)</title><rect x="640.4" y="69" width="1.9" height="15.0" fill="rgb(250,134,18)" rx="2" ry="2" />
<text  x="643.41" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:707:with_prefixlen (1,475,357 samples, 0.12%)</title><rect x="64.2" y="213" width="1.4" height="15.0" fill="rgb(245,106,4)" rx="2" ry="2" />
<text  x="67.21" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (5,924,784 samples, 0.49%)</title><rect x="276.8" y="101" width="5.8" height="15.0" fill="rgb(216,71,34)" rx="2" ry="2" />
<text  x="279.81" y="111.5" ></text>
</g>
<g >
<title>policy.py:190:AddFilter (3,411,661 samples, 0.28%)</title><rect x="612.9" y="165" width="3.3" height="15.0" fill="rgb(228,163,13)" rx="2" ry="2" />
<text  x="615.87" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (26,702,108 samples, 2.20%)</title><rect x="244.4" y="117" width="26.0" height="15.0" fill="rgb(253,80,3)" rx="2" ry="2" />
<text  x="247.42" y="127.5" >i..</text>
</g>
<g >
<title>ipaddress.py:613:__str__ (2,362,688 samples, 0.19%)</title><rect x="151.6" y="69" width="2.3" height="15.0" fill="rgb(211,209,37)" rx="2" ry="2" />
<text  x="154.58" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (5,831,750 samples, 0.48%)</title><rect x="235.7" y="85" width="5.6" height="15.0" fill="rgb(228,134,19)" rx="2" ry="2" />
<text  x="238.66" y="95.5" ></text>
</g>
<g >
<title>juniper.py:891:_TranslatePolicy (1,428,615 samples, 0.12%)</title><rect x="557.1" y="213" width="1.4" height="15.0" fill="rgb(250,212,22)" rx="2" ry="2" />
<text  x="560.09" y="223.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (2,725,470 samples, 0.22%)</title><rect x="61.3" y="197" width="2.7" height="15.0" fill="rgb(235,167,35)" rx="2" ry="2" />
<text  x="64.31" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (2,734,234 samples, 0.23%)</title><rect x="590.7" y="133" width="2.7" height="15.0" fill="rgb(230,80,32)" rx="2" ry="2" />
<text  x="593.72" y="143.5" ></text>
</g>
<g >
<title>threading.py:1000:join (523,383,084 samples, 43.10%)</title><rect x="681.5" y="277" width="508.5" height="15.0" fill="rgb(250,88,14)" rx="2" ry="2" />
<text  x="684.47" y="287.5" >threading.py:1000:join</text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (1,882,568 samples, 0.16%)</title><rect x="377.7" y="149" width="1.8" height="15.0" fill="rgb(246,193,13)" rx="2" ry="2" />
<text  x="380.72" y="159.5" ></text>
</g>
<g >
<title>junipersrx.py:336:_TranslatePolicy (1,485,717 samples, 0.12%)</title><rect x="18.1" y="229" width="1.4" height="15.0" fill="rgb(249,7,14)" rx="2" ry="2" />
<text  x="21.06" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (15,346,330 samples, 1.26%)</title><rect x="271.1" y="117" width="14.9" height="15.0" fill="rgb(241,169,23)" rx="2" ry="2" />
<text  x="274.09" y="127.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'acquire' of '_thread.lock' objects&gt; (523,383,062 samples, 43.10%)</title><rect x="681.5" y="245" width="508.5" height="15.0" fill="rgb(205,139,54)" rx="2" ry="2" />
<text  x="684.47" y="255.5" >~:0:&lt;method 'acquire' of '_thread.lock' objects&gt;</text>
</g>
<g >
<title>naming.py:441:GetNetAddr (6,643,608 samples, 0.55%)</title><rect x="675.0" y="149" width="6.5" height="15.0" fill="rgb(231,73,50)" rx="2" ry="2" />
<text  x="678.02" y="159.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (3,440,916 samples, 0.28%)</title><rect x="120.8" y="165" width="3.3" height="15.0" fill="rgb(240,71,32)" rx="2" ry="2" />
<text  x="123.80" y="175.5" ></text>
</g>
<g >
<title>functools.py:98:_le_from_lt (7,927,767 samples, 0.65%)</title><rect x="593.4" y="149" width="7.7" height="15.0" fill="rgb(208,163,30)" rx="2" ry="2" />
<text  x="596.38" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (9,594,443 samples, 0.79%)</title><rect x="624.0" y="101" width="9.4" height="15.0" fill="rgb(216,135,22)" rx="2" ry="2" />
<text  x="627.03" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (4,005,314 samples, 0.33%)</title><rect x="660.4" y="85" width="3.9" height="15.0" fill="rgb(210,203,47)" rx="2" ry="2" />
<text  x="663.41" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (7,047,267 samples, 0.58%)</title><rect x="209.5" y="101" width="6.9" height="15.0" fill="rgb(237,103,16)" rx="2" ry="2" />
<text  x="212.50" y="111.5" ></text>
</g>
<g >
<title>functools.py:103:_ge_from_lt (21,406,629 samples, 1.76%)</title><rect x="463.2" y="165" width="20.8" height="15.0" fill="rgb(243,69,51)" rx="2" ry="2" />
<text  x="466.19" y="175.5" ></text>
</g>
<g >
<title>functools.py:103:_ge_from_lt (4,515,845 samples, 0.37%)</title><rect x="589.0" y="149" width="4.4" height="15.0" fill="rgb(250,23,36)" rx="2" ry="2" />
<text  x="591.99" y="159.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,454,480 samples, 0.20%)</title><rect x="28.5" y="181" width="2.4" height="15.0" fill="rgb(230,17,13)" rx="2" ry="2" />
<text  x="31.51" y="191.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (10,417,208 samples, 0.86%)</title><rect x="33.3" y="197" width="10.1" height="15.0" fill="rgb(209,180,10)" rx="2" ry="2" />
<text  x="36.29" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:585:__str__ (2,103,025 samples, 0.17%)</title><rect x="151.8" y="53" width="2.1" height="15.0" fill="rgb(205,229,31)" rx="2" ry="2" />
<text  x="154.83" y="63.5" ></text>
</g>
<g >
<title>iptables.py:322:_CalculateAddresses (222,140,251 samples, 18.29%)</title><rect x="75.2" y="213" width="215.8" height="15.0" fill="rgb(226,115,31)" rx="2" ry="2" />
<text  x="78.20" y="223.5" >iptables.py:322:_CalculateAd..</text>
</g>
<g >
<title>copy.py:132:deepcopy (2,643,997 samples, 0.22%)</title><rect x="48.5" y="165" width="2.6" height="15.0" fill="rgb(245,129,1)" rx="2" ry="2" />
<text  x="51.51" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:613:__str__ (1,691,487 samples, 0.14%)</title><rect x="646.6" y="69" width="1.6" height="15.0" fill="rgb(253,144,10)" rx="2" ry="2" />
<text  x="649.60" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:1809:_string_from_ip_int (3,436,924 samples, 0.28%)</title><rect x="255.6" y="53" width="3.4" height="15.0" fill="rgb(240,13,47)" rx="2" ry="2" />
<text  x="258.65" y="63.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (4,078,828 samples, 0.34%)</title><rect x="638.4" y="85" width="3.9" height="15.0" fill="rgb(233,158,28)" rx="2" ry="2" />
<text  x="641.36" y="95.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.isinstance&gt; (1,613,532 samples, 0.13%)</title><rect x="365.1" y="133" width="1.6" height="15.0" fill="rgb(213,126,39)" rx="2" ry="2" />
<text  x="368.13" y="143.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (4,571,475 samples, 0.38%)</title><rect x="549.1" y="149" width="4.4" height="15.0" fill="rgb(215,39,42)" rx="2" ry="2" />
<text  x="552.10" y="159.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (2,690,663 samples, 0.22%)</title><rect x="45.9" y="197" width="2.6" height="15.0" fill="rgb(218,28,28)" rx="2" ry="2" />
<text  x="48.90" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1257:version (1,910,563 samples, 0.16%)</title><rect x="366.7" y="165" width="1.9" height="15.0" fill="rgb(246,161,28)" rx="2" ry="2" />
<text  x="369.70" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:70:__init__ (5,456,052 samples, 0.45%)</title><rect x="651.7" y="117" width="5.3" height="15.0" fill="rgb(224,157,17)" rx="2" ry="2" />
<text  x="654.66" y="127.5" ></text>
</g>
<g >
<title>yacc.py:1003:parseopt_notrack (73,920,411 samples, 6.09%)</title><rect x="609.7" y="213" width="71.8" height="15.0" fill="rgb(214,221,32)" rx="2" ry="2" />
<text  x="612.65" y="223.5" >yacc.py:..</text>
</g>
<g >
<title>ipaddress.py:585:__str__ (1,505,590 samples, 0.12%)</title><rect x="646.8" y="53" width="1.4" height="15.0" fill="rgb(245,133,50)" rx="2" ry="2" />
<text  x="649.78" y="63.5" ></text>
</g>
<g >
<title>nacaddr.py:76:subnet_of (4,341,090 samples, 0.36%)</title><rect x="176.8" y="133" width="4.2" height="15.0" fill="rgb(238,191,31)" rx="2" ry="2" />
<text  x="179.82" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (6,357,204 samples, 0.52%)</title><rect x="252.8" y="101" width="6.2" height="15.0" fill="rgb(208,109,6)" rx="2" ry="2" />
<text  x="255.81" y="111.5" ></text>
</g>
<g >
<title>aclgen.py:501:Run (690,843,221 samples, 56.88%)</title><rect x="10.2" y="277" width="671.3" height="15.0" fill="rgb(234,222,8)" rx="2" ry="2" />
<text  x="13.24" y="287.5" >aclgen.py:501:Run</text>
</g>
<g >
<title>copy.py:268:_reconstruct (2,674,922 samples, 0.22%)</title><rect x="40.8" y="181" width="2.6" height="15.0" fill="rgb(238,21,36)" rx="2" ry="2" />
<text  x="43.81" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (2,008,479 samples, 0.17%)</title><rect x="655.0" y="85" width="2.0" height="15.0" fill="rgb(242,140,4)" rx="2" ry="2" />
<text  x="658.01" y="95.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (10,420,512 samples, 0.86%)</title><rect x="33.3" y="229" width="10.1" height="15.0" fill="rgb(205,172,44)" rx="2" ry="2" />
<text  x="36.29" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:1830:&lt;listcomp&gt; (1,749,040 samples, 0.14%)</title><rect x="227.9" y="37" width="1.7" height="15.0" fill="rgb(233,10,26)" rx="2" ry="2" />
<text  x="230.93" y="47.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (4,282,611 samples, 0.35%)</title><rect x="596.9" y="133" width="4.2" height="15.0" fill="rgb(253,25,17)" rx="2" ry="2" />
<text  x="599.92" y="143.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,689,121 samples, 0.22%)</title><rect x="51.1" y="181" width="2.6" height="15.0" fill="rgb(249,52,36)" rx="2" ry="2" />
<text  x="54.09" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:360:get_mixed_type_key (1,493,014 samples, 0.12%)</title><rect x="287.7" y="149" width="1.4" height="15.0" fill="rgb(239,214,35)" rx="2" ry="2" />
<text  x="290.68" y="159.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (2,724,535 samples, 0.22%)</title><rect x="56.1" y="197" width="2.6" height="15.0" fill="rgb(234,179,54)" rx="2" ry="2" />
<text  x="59.07" y="207.5" ></text>
</g>
<g >
<title>policy.py:197:_TranslateTerms (3,410,649 samples, 0.28%)</title><rect x="612.9" y="149" width="3.3" height="15.0" fill="rgb(250,156,17)" rx="2" ry="2" />
<text  x="615.88" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:29:IP (15,416,683 samples, 1.27%)</title><rect x="659.2" y="117" width="15.0" height="15.0" fill="rgb(238,214,26)" rx="2" ry="2" />
<text  x="662.18" y="127.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (3,968,329 samples, 0.33%)</title><rect x="278.7" y="85" width="3.9" height="15.0" fill="rgb(243,214,41)" rx="2" ry="2" />
<text  x="281.71" y="95.5" ></text>
</g>
<g >
<title>nacaddr.py:395:&lt;listcomp&gt; (1,450,460 samples, 0.12%)</title><rect x="20.5" y="181" width="1.5" height="15.0" fill="rgb(242,132,47)" rx="2" ry="2" />
<text  x="23.54" y="191.5" ></text>
</g>
<g >
<title>functools.py:98:_le_from_lt (1,459,082 samples, 0.12%)</title><rect x="112.0" y="117" width="1.4" height="15.0" fill="rgb(236,118,14)" rx="2" ry="2" />
<text  x="114.99" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:395:&lt;listcomp&gt; (165,797,457 samples, 13.65%)</title><rect x="124.9" y="165" width="161.1" height="15.0" fill="rgb(246,70,28)" rx="2" ry="2" />
<text  x="127.91" y="175.5" >nacaddr.py:395:&lt;list..</text>
</g>
<g >
<title>cisco.py:1232:__str__ (2,517,000 samples, 0.21%)</title><rect x="19.5" y="245" width="2.5" height="15.0" fill="rgb(226,109,33)" rx="2" ry="2" />
<text  x="22.50" y="255.5" ></text>
</g>
<g >
<title>nacaddr.py:70:__init__ (16,094,729 samples, 1.33%)</title><rect x="270.4" y="133" width="15.6" height="15.0" fill="rgb(215,73,14)" rx="2" ry="2" />
<text  x="273.36" y="143.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (2,952,562 samples, 0.24%)</title><rect x="613.3" y="85" width="2.9" height="15.0" fill="rgb(234,29,18)" rx="2" ry="2" />
<text  x="616.32" y="95.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (10,534,466 samples, 0.87%)</title><rect x="23.1" y="213" width="10.2" height="15.0" fill="rgb(239,98,22)" rx="2" ry="2" />
<text  x="26.05" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (1,467,183 samples, 0.12%)</title><rect x="670.5" y="69" width="1.4" height="15.0" fill="rgb(232,201,26)" rx="2" ry="2" />
<text  x="673.52" y="79.5" ></text>
</g>
<g >
<title>naming.py:455:GetNet (809,784 samples, 0.07%)</title><rect x="674.2" y="117" width="0.7" height="15.0" fill="rgb(250,214,41)" rx="2" ry="2" />
<text  x="677.16" y="127.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,655,996 samples, 0.22%)</title><rect x="56.1" y="181" width="2.6" height="15.0" fill="rgb(243,218,34)" rx="2" ry="2" />
<text  x="59.13" y="191.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'issuperset' of 'frozenset' objects&gt; (1,841,790 samples, 0.15%)</title><rect x="267.3" y="69" width="1.8" height="15.0" fill="rgb(213,117,12)" rx="2" ry="2" />
<text  x="270.27" y="79.5" ></text>
</g>
<g >
<title>junipersrx.py:630:_BuildAddressBook (1,447,020 samples, 0.12%)</title><rect x="18.1" y="213" width="1.4" height="15.0" fill="rgb(205,197,42)" rx="2" ry="2" />
<text  x="21.10" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (5,024,939 samples, 0.41%)</title><rect x="264.2" y="85" width="4.9" height="15.0" fill="rgb(222,4,0)" rx="2" ry="2" />
<text  x="267.18" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:613:__str__ (4,862,462 samples, 0.40%)</title><rect x="211.6" y="85" width="4.8" height="15.0" fill="rgb(242,123,36)" rx="2" ry="2" />
<text  x="214.63" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:585:__str__ (1,747,329 samples, 0.14%)</title><rect x="636.7" y="53" width="1.7" height="15.0" fill="rgb(217,153,8)" rx="2" ry="2" />
<text  x="639.67" y="63.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (11,313,325 samples, 0.93%)</title><rect x="368.6" y="165" width="10.9" height="15.0" fill="rgb(233,141,29)" rx="2" ry="2" />
<text  x="371.55" y="175.5" ></text>
</g>
<g >
<title>aclgen.py:166:RenderFile (689,646,100 samples, 56.79%)</title><rect x="11.4" y="261" width="670.1" height="15.0" fill="rgb(242,98,53)" rx="2" ry="2" />
<text  x="14.40" y="271.5" >aclgen.py:166:RenderFile</text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (3,632,670 samples, 0.30%)</title><rect x="159.1" y="101" width="3.5" height="15.0" fill="rgb(236,136,23)" rx="2" ry="2" />
<text  x="162.10" y="111.5" ></text>
</g>
<g >
<title>functools.py:103:_ge_from_lt (2,010,792 samples, 0.17%)</title><rect x="168.9" y="101" width="2.0" height="15.0" fill="rgb(251,159,0)" rx="2" ry="2" />
<text  x="171.93" y="111.5" ></text>
</g>
<g >
<title>functools.py:98:_le_from_lt (37,580,285 samples, 3.09%)</title><rect x="484.0" y="165" width="36.5" height="15.0" fill="rgb(245,81,45)" rx="2" ry="2" />
<text  x="486.99" y="175.5" >fun..</text>
</g>
<g >
<title>nacaddr.py:142:__init__ (4,009,878 samples, 0.33%)</title><rect x="668.1" y="101" width="3.8" height="15.0" fill="rgb(208,2,3)" rx="2" ry="2" />
<text  x="671.05" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (2,155,068 samples, 0.18%)</title><rect x="646.2" y="85" width="2.0" height="15.0" fill="rgb(248,39,41)" rx="2" ry="2" />
<text  x="649.15" y="95.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (7,917,163 samples, 0.65%)</title><rect x="200.3" y="85" width="7.6" height="15.0" fill="rgb(205,138,18)" rx="2" ry="2" />
<text  x="203.25" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:1872:version (1,886,045 samples, 0.16%)</title><rect x="525.0" y="165" width="1.8" height="15.0" fill="rgb(248,83,44)" rx="2" ry="2" />
<text  x="528.01" y="175.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,672,304 samples, 0.22%)</title><rect x="40.8" y="165" width="2.6" height="15.0" fill="rgb(212,106,37)" rx="2" ry="2" />
<text  x="43.81" y="175.5" ></text>
</g>
<g >
<title>connection.py:202:send (3,288,041 samples, 0.27%)</title><rect x="13.3" y="197" width="3.2" height="15.0" fill="rgb(206,218,22)" rx="2" ry="2" />
<text  x="16.30" y="207.5" ></text>
</g>
<g >
<title>juniper.py:186:__str__ (270,775,788 samples, 22.30%)</title><rect x="293.8" y="229" width="263.1" height="15.0" fill="rgb(208,29,1)" rx="2" ry="2" />
<text  x="296.77" y="239.5" >juniper.py:186:__str__</text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (2,420,547 samples, 0.20%)</title><rect x="26.1" y="181" width="2.4" height="15.0" fill="rgb(251,97,17)" rx="2" ry="2" />
<text  x="29.15" y="191.5" ></text>
</g>
<g >
<title>aclgen.py:366:RenderACL (6,152,632 samples, 0.51%)</title><rect x="12.0" y="245" width="6.0" height="15.0" fill="rgb(242,61,3)" rx="2" ry="2" />
<text  x="15.03" y="255.5" ></text>
</g>
<g >
<title>nacaddr.py:282:_CollapseAddrListInternal (21,060,891 samples, 1.73%)</title><rect x="100.3" y="165" width="20.5" height="15.0" fill="rgb(241,19,17)" rx="2" ry="2" />
<text  x="103.34" y="175.5" ></text>
</g>
<g >
<title>naming.py:441:GetNetAddr (57,481,899 samples, 4.73%)</title><rect x="619.1" y="165" width="55.8" height="15.0" fill="rgb(222,124,42)" rx="2" ry="2" />
<text  x="622.10" y="175.5" >namin..</text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (3,010,223 samples, 0.25%)</title><rect x="150.9" y="85" width="3.0" height="15.0" fill="rgb(236,75,10)" rx="2" ry="2" />
<text  x="153.95" y="95.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (5,183,408 samples, 0.43%)</title><rect x="286.0" y="165" width="5.0" height="15.0" fill="rgb(253,140,37)" rx="2" ry="2" />
<text  x="289.00" y="175.5" ></text>
</g>
<g >
<title>policy.py:1013:AddObject (57,604,961 samples, 4.74%)</title><rect x="619.0" y="181" width="55.9" height="15.0" fill="rgb(221,121,26)" rx="2" ry="2" />
<text  x="621.98" y="191.5" >polic..</text>
</g>
<g >
<title>ipaddress.py:1830:&lt;listcomp&gt; (1,468,636 samples, 0.12%)</title><rect x="214.9" y="37" width="1.5" height="15.0" fill="rgb(231,51,44)" rx="2" ry="2" />
<text  x="217.92" y="47.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (12,961,191 samples, 1.07%)</title><rect x="471.4" y="149" width="12.6" height="15.0" fill="rgb(236,173,32)" rx="2" ry="2" />
<text  x="474.40" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (3,514,531 samples, 0.29%)</title><rect x="648.2" y="85" width="3.5" height="15.0" fill="rgb(233,159,29)" rx="2" ry="2" />
<text  x="651.24" y="95.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,420,394 samples, 0.20%)</title><rect x="26.1" y="165" width="2.4" height="15.0" fill="rgb(224,222,51)" rx="2" ry="2" />
<text  x="29.15" y="175.5" ></text>
</g>
<g >
<title>junipersrx.py:850:__str__ (1,865,572 samples, 0.15%)</title><rect x="606.7" y="245" width="1.8" height="15.0" fill="rgb(214,74,32)" rx="2" ry="2" />
<text  x="609.71" y="255.5" ></text>
</g>
<g >
<title>naming.py:455:GetNet (18,510,791 samples, 1.52%)</title><rect x="657.0" y="133" width="17.9" height="15.0" fill="rgb(231,220,33)" rx="2" ry="2" />
<text  x="659.96" y="143.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'issuperset' of 'frozenset' objects&gt; (2,279,119 samples, 0.19%)</title><rect x="205.7" y="53" width="2.2" height="15.0" fill="rgb(211,78,30)" rx="2" ry="2" />
<text  x="208.73" y="63.5" ></text>
</g>
<g >
<title>ipaddress.py:683:overlaps (18,872,913 samples, 1.55%)</title><rect x="80.7" y="181" width="18.3" height="15.0" fill="rgb(218,1,29)" rx="2" ry="2" />
<text  x="83.66" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (8,360,112 samples, 0.69%)</title><rect x="358.6" y="149" width="8.1" height="15.0" fill="rgb(208,222,15)" rx="2" ry="2" />
<text  x="361.57" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:76:subnet_of (179,077,727 samples, 14.75%)</title><rect x="379.5" y="197" width="174.0" height="15.0" fill="rgb(214,43,12)" rx="2" ry="2" />
<text  x="382.54" y="207.5" >nacaddr.py:76:subnet_of</text>
</g>
<g >
<title>juniper.py:97:Append (1,956,936 samples, 0.16%)</title><rect x="555.0" y="213" width="1.9" height="15.0" fill="rgb(211,82,19)" rx="2" ry="2" />
<text  x="557.96" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:613:__str__ (3,134,442 samples, 0.26%)</title><rect x="295.3" y="213" width="3.0" height="15.0" fill="rgb(221,135,4)" rx="2" ry="2" />
<text  x="298.28" y="223.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (2,677,451 samples, 0.22%)</title><rect x="58.7" y="181" width="2.6" height="15.0" fill="rgb(234,30,3)" rx="2" ry="2" />
<text  x="61.71" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (28,302,507 samples, 2.33%)</title><rect x="188.9" y="117" width="27.5" height="15.0" fill="rgb(242,21,30)" rx="2" ry="2" />
<text  x="191.85" y="127.5" >i..</text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (20,301,017 samples, 1.67%)</title><rect x="500.8" y="149" width="19.7" height="15.0" fill="rgb(231,77,17)" rx="2" ry="2" />
<text  x="503.78" y="159.5" ></text>
</g>
<g >
<title>policy.py:1912:p_term_spec (64,646,372 samples, 5.32%)</title><rect x="618.7" y="197" width="62.8" height="15.0" fill="rgb(219,108,5)" rx="2" ry="2" />
<text  x="621.66" y="207.5" >policy..</text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (2,683,888 samples, 0.22%)</title><rect x="628.4" y="69" width="2.6" height="15.0" fill="rgb(231,215,23)" rx="2" ry="2" />
<text  x="631.42" y="79.5" ></text>
</g>
<g >
<title>functools.py:98:_le_from_lt (15,475,845 samples, 1.27%)</title><rect x="351.7" y="165" width="15.0" height="15.0" fill="rgb(241,213,7)" rx="2" ry="2" />
<text  x="354.66" y="175.5" ></text>
</g>
<g >
<title>policy.py:1013:AddObject (6,656,620 samples, 0.55%)</title><rect x="675.0" y="165" width="6.5" height="15.0" fill="rgb(234,147,26)" rx="2" ry="2" />
<text  x="678.01" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (1,672,808 samples, 0.14%)</title><rect x="662.7" y="69" width="1.6" height="15.0" fill="rgb(239,212,39)" rx="2" ry="2" />
<text  x="665.68" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:613:__str__ (1,963,074 samples, 0.16%)</title><rect x="636.5" y="69" width="1.9" height="15.0" fill="rgb(249,133,42)" rx="2" ry="2" />
<text  x="639.46" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (3,532,309 samples, 0.29%)</title><rect x="282.6" y="101" width="3.4" height="15.0" fill="rgb(223,105,46)" rx="2" ry="2" />
<text  x="285.57" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1809:_string_from_ip_int (3,988,760 samples, 0.33%)</title><rect x="225.8" y="53" width="3.8" height="15.0" fill="rgb(209,107,30)" rx="2" ry="2" />
<text  x="228.76" y="63.5" ></text>
</g>
<g >
<title>ipaddress.py:585:__str__ (1,467,199 samples, 0.12%)</title><rect x="631.9" y="53" width="1.5" height="15.0" fill="rgb(225,186,21)" rx="2" ry="2" />
<text  x="634.92" y="63.5" ></text>
</g>
<g >
<title>ipaddress.py:585:__str__ (5,154,420 samples, 0.42%)</title><rect x="224.6" y="69" width="5.0" height="15.0" fill="rgb(223,70,18)" rx="2" ry="2" />
<text  x="227.62" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (11,820,462 samples, 0.97%)</title><rect x="196.5" y="101" width="11.4" height="15.0" fill="rgb(226,148,25)" rx="2" ry="2" />
<text  x="199.46" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:338:CollapseAddrList (25,881,899 samples, 2.13%)</title><rect x="99.0" y="181" width="25.1" height="15.0" fill="rgb(253,161,33)" rx="2" ry="2" />
<text  x="101.99" y="191.5" >n..</text>
</g>
<g >
<title>ipaddress.py:588:__hash__ (1,278,225 samples, 0.11%)</title><rect x="116.4" y="117" width="1.3" height="15.0" fill="rgb(224,132,37)" rx="2" ry="2" />
<text  x="119.43" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:54:_is_subnet_of (12,836,094 samples, 1.06%)</title><rect x="164.3" y="117" width="12.5" height="15.0" fill="rgb(254,47,11)" rx="2" ry="2" />
<text  x="167.35" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:142:__init__ (28,334,746 samples, 2.33%)</title><rect x="242.8" y="133" width="27.6" height="15.0" fill="rgb(244,142,15)" rx="2" ry="2" />
<text  x="245.83" y="143.5" >n..</text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (1,703,436 samples, 0.14%)</title><rect x="650.0" y="69" width="1.7" height="15.0" fill="rgb(236,35,44)" rx="2" ry="2" />
<text  x="653.00" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (1,402,471 samples, 0.12%)</title><rect x="161.3" y="85" width="1.3" height="15.0" fill="rgb(226,21,24)" rx="2" ry="2" />
<text  x="164.27" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (3,856,779 samples, 0.32%)</title><rect x="664.3" y="85" width="3.8" height="15.0" fill="rgb(235,41,54)" rx="2" ry="2" />
<text  x="667.30" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (2,501,088 samples, 0.21%)</title><rect x="635.9" y="85" width="2.5" height="15.0" fill="rgb(227,151,17)" rx="2" ry="2" />
<text  x="638.93" y="95.5" ></text>
</g>
<g >
<title>policy.py:1290:cleanup (2,206,675 samples, 0.18%)</title><rect x="616.5" y="133" width="2.2" height="15.0" fill="rgb(246,198,31)" rx="2" ry="2" />
<text  x="619.52" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (2,379,378 samples, 0.20%)</title><rect x="156.3" y="69" width="2.3" height="15.0" fill="rgb(240,50,49)" rx="2" ry="2" />
<text  x="159.33" y="79.5" ></text>
</g>
<g >
<title>nacaddr.py:70:__init__ (4,539,202 samples, 0.37%)</title><rect x="70.2" y="213" width="4.4" height="15.0" fill="rgb(237,171,17)" rx="2" ry="2" />
<text  x="73.20" y="223.5" ></text>
</g>
<g >
<title>connection.py:246:recv (1,551,170 samples, 0.13%)</title><rect x="16.5" y="197" width="1.5" height="15.0" fill="rgb(247,51,36)" rx="2" ry="2" />
<text  x="19.50" y="207.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (10,598,356 samples, 0.87%)</title><rect x="43.4" y="229" width="10.3" height="15.0" fill="rgb(245,88,47)" rx="2" ry="2" />
<text  x="46.41" y="239.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (2,674,755 samples, 0.22%)</title><rect x="38.2" y="181" width="2.6" height="15.0" fill="rgb(232,73,3)" rx="2" ry="2" />
<text  x="41.21" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:167:supernet (1,838,128 samples, 0.15%)</title><rect x="113.4" y="149" width="1.8" height="15.0" fill="rgb(248,26,6)" rx="2" ry="2" />
<text  x="116.41" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (8,478,594 samples, 0.70%)</title><rect x="659.8" y="101" width="8.3" height="15.0" fill="rgb(241,71,22)" rx="2" ry="2" />
<text  x="662.81" y="111.5" ></text>
</g>
<g >
<title>policy.py:405:__init__ (6,718,173 samples, 0.55%)</title><rect x="674.9" y="181" width="6.6" height="15.0" fill="rgb(231,112,6)" rx="2" ry="2" />
<text  x="677.95" y="191.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (10,868,419 samples, 0.89%)</title><rect x="22.7" y="229" width="10.6" height="15.0" fill="rgb(233,64,5)" rx="2" ry="2" />
<text  x="25.73" y="239.5" ></text>
</g>
<g >
<title>policy.py:2525:ParsePolicy (75,081,423 samples, 6.18%)</title><rect x="608.5" y="245" width="73.0" height="15.0" fill="rgb(249,205,39)" rx="2" ry="2" />
<text  x="611.52" y="255.5" >policy.p..</text>
</g>
<g >
<title>ipaddress.py:869:subnets (27,612,067 samples, 2.27%)</title><rect x="135.8" y="133" width="26.8" height="15.0" fill="rgb(247,162,48)" rx="2" ry="2" />
<text  x="138.80" y="143.5" >i..</text>
</g>
<g >
<title>&lt;string&gt;:1:append (4,919,249 samples, 0.41%)</title><rect x="13.2" y="229" width="4.8" height="15.0" fill="rgb(231,199,30)" rx="2" ry="2" />
<text  x="16.22" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:1809:_string_from_ip_int (1,989,340 samples, 0.16%)</title><rect x="296.4" y="181" width="1.9" height="15.0" fill="rgb(233,210,9)" rx="2" ry="2" />
<text  x="299.39" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:154:supernet_of (6,285,745 samples, 0.52%)</title><rect x="562.4" y="181" width="6.1" height="15.0" fill="rgb(224,108,19)" rx="2" ry="2" />
<text  x="565.43" y="191.5" ></text>
</g>
<g >
<title>reduction.py:48:dumps (2,329,128 samples, 0.19%)</title><rect x="14.2" y="181" width="2.3" height="15.0" fill="rgb(231,192,18)" rx="2" ry="2" />
<text  x="17.23" y="191.5" ></text>
</g>
<g >
<title>naming.py:455:GetNet (57,474,637 samples, 4.73%)</title><rect x="619.1" y="149" width="55.8" height="15.0" fill="rgb(209,138,38)" rx="2" ry="2" />
<text  x="622.10" y="159.5" >namin..</text>
</g>
<g >
<title>ipaddress.py:57:ip_network (20,309,863 samples, 1.67%)</title><rect x="622.6" y="117" width="19.7" height="15.0" fill="rgb(220,119,33)" rx="2" ry="2" />
<text  x="625.59" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:54:_is_subnet_of (3,851,902 samples, 0.32%)</title><rect x="177.3" y="117" width="3.7" height="15.0" fill="rgb(235,111,45)" rx="2" ry="2" />
<text  x="180.29" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:54:_is_subnet_of (5,388,144 samples, 0.44%)</title><rect x="108.2" y="133" width="5.2" height="15.0" fill="rgb(212,18,52)" rx="2" ry="2" />
<text  x="111.17" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:1257:version (4,639,457 samples, 0.38%)</title><rect x="520.5" y="165" width="4.5" height="15.0" fill="rgb(222,140,51)" rx="2" ry="2" />
<text  x="523.51" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1268:__init__ (1,606,583 samples, 0.13%)</title><rect x="207.9" y="101" width="1.6" height="15.0" fill="rgb(220,29,36)" rx="2" ry="2" />
<text  x="210.94" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:585:__str__ (1,302,633 samples, 0.11%)</title><rect x="64.4" y="197" width="1.2" height="15.0" fill="rgb(230,170,2)" rx="2" ry="2" />
<text  x="67.38" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (6,376,278 samples, 0.53%)</title><rect x="201.7" y="69" width="6.2" height="15.0" fill="rgb(233,156,1)" rx="2" ry="2" />
<text  x="204.75" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:670:__contains__ (8,995,976 samples, 0.74%)</title><rect x="82.4" y="165" width="8.7" height="15.0" fill="rgb(219,211,26)" rx="2" ry="2" />
<text  x="85.39" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:148:subnet_of (68,847,834 samples, 5.67%)</title><rect x="312.7" y="197" width="66.8" height="15.0" fill="rgb(224,187,27)" rx="2" ry="2" />
<text  x="315.65" y="207.5" >nacaddr..</text>
</g>
<g >
<title>nacaddr.py:29:IP (1,781,820 samples, 0.15%)</title><rect x="679.7" y="101" width="1.7" height="15.0" fill="rgb(229,82,21)" rx="2" ry="2" />
<text  x="682.65" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (4,007,092 samples, 0.33%)</title><rect x="627.1" y="85" width="3.9" height="15.0" fill="rgb(238,89,53)" rx="2" ry="2" />
<text  x="630.14" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (3,103,242 samples, 0.26%)</title><rect x="65.8" y="197" width="3.0" height="15.0" fill="rgb(247,224,24)" rx="2" ry="2" />
<text  x="68.78" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:54:_is_subnet_of (2,703,642 samples, 0.22%)</title><rect x="118.2" y="133" width="2.6" height="15.0" fill="rgb(224,137,46)" rx="2" ry="2" />
<text  x="121.17" y="143.5" ></text>
</g>
<g >
<title>aclgenerator.py:276:__init__ (51,308,833 samples, 4.22%)</title><rect x="556.9" y="229" width="49.8" height="15.0" fill="rgb(247,156,6)" rx="2" ry="2" />
<text  x="559.86" y="239.5" >aclge..</text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (7,377,924 samples, 0.61%)</title><rect x="222.5" y="101" width="7.1" height="15.0" fill="rgb(240,34,17)" rx="2" ry="2" />
<text  x="225.46" y="111.5" ></text>
</g>
<g >
<title>policy.py:1290:cleanup (2,958,363 samples, 0.24%)</title><rect x="613.3" y="117" width="2.9" height="15.0" fill="rgb(247,217,36)" rx="2" ry="2" />
<text  x="616.32" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:613:__str__ (4,989,693 samples, 0.41%)</title><rect x="254.1" y="85" width="4.9" height="15.0" fill="rgb(247,8,44)" rx="2" ry="2" />
<text  x="257.14" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:613:__str__ (1,648,356 samples, 0.14%)</title><rect x="631.7" y="69" width="1.7" height="15.0" fill="rgb(230,38,48)" rx="2" ry="2" />
<text  x="634.75" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (1,906,938 samples, 0.16%)</title><rect x="172.5" y="85" width="1.8" height="15.0" fill="rgb(222,120,3)" rx="2" ry="2" />
<text  x="175.46" y="95.5" ></text>
</g>
<g >
<title>junipersrx.py:630:_BuildAddressBook (48,349,077 samples, 3.98%)</title><rect x="559.7" y="197" width="47.0" height="15.0" fill="rgb(212,108,28)" rx="2" ry="2" />
<text  x="562.73" y="207.5" >juni..</text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (27,472,361 samples, 2.26%)</title><rect x="526.8" y="165" width="26.7" height="15.0" fill="rgb(233,90,52)" rx="2" ry="2" />
<text  x="529.85" y="175.5" >i..</text>
</g>
<g >
<title>ipaddress.py:585:__str__ (4,441,318 samples, 0.37%)</title><rect x="254.7" y="69" width="4.3" height="15.0" fill="rgb(225,134,37)" rx="2" ry="2" />
<text  x="257.67" y="79.5" ></text>
</g>
<g >
<title>policy.py:1279:AddressCleanup (2,214,587 samples, 0.18%)</title><rect x="616.5" y="149" width="2.2" height="15.0" fill="rgb(223,114,42)" rx="2" ry="2" />
<text  x="619.51" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:148:subnet_of (14,602,087 samples, 1.20%)</title><rect x="162.6" y="133" width="14.2" height="15.0" fill="rgb(225,207,48)" rx="2" ry="2" />
<text  x="165.63" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (2,171,782 samples, 0.18%)</title><rect x="672.0" y="85" width="2.2" height="15.0" fill="rgb(213,195,49)" rx="2" ry="2" />
<text  x="675.05" y="95.5" ></text>
</g>
<g >
<title>junipersrx.py:301:__init__ (51,308,854 samples, 4.22%)</title><rect x="556.9" y="245" width="49.8" height="15.0" fill="rgb(244,196,4)" rx="2" ry="2" />
<text  x="559.86" y="255.5" >junip..</text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (12,643,815 samples, 1.04%)</title><rect x="146.4" y="101" width="12.2" height="15.0" fill="rgb(224,215,10)" rx="2" ry="2" />
<text  x="149.36" y="111.5" ></text>
</g>
<g >
<title>all (1,214,473,765 samples, 100%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(224,181,32)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (4,909,136 samples, 0.40%)</title><rect x="153.9" y="85" width="4.7" height="15.0" fill="rgb(216,14,4)" rx="2" ry="2" />
<text  x="156.87" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (2,161,534 samples, 0.18%)</title><rect x="628.9" y="53" width="2.1" height="15.0" fill="rgb(215,142,38)" rx="2" ry="2" />
<text  x="631.93" y="63.5" ></text>
</g>
<g >
<title>nacaddr.py:29:IP (4,268,222 samples, 0.35%)</title><rect x="675.2" y="117" width="4.2" height="15.0" fill="rgb(229,76,20)" rx="2" ry="2" />
<text  x="678.25" y="127.5" ></text>
</g>
<g >
<title>copy.py:268:_reconstruct (2,464,112 samples, 0.20%)</title><rect x="30.9" y="197" width="2.4" height="15.0" fill="rgb(239,98,18)" rx="2" ry="2" />
<text  x="33.89" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (12,032,075 samples, 0.99%)</title><rect x="229.6" y="101" width="11.7" height="15.0" fill="rgb(205,200,27)" rx="2" ry="2" />
<text  x="232.63" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (2,388,997 samples, 0.20%)</title><rect x="631.0" y="85" width="2.4" height="15.0" fill="rgb(247,69,18)" rx="2" ry="2" />
<text  x="634.03" y="95.5" ></text>
</g>
<g >
<title>threading.py:1038:_wait_for_tstate_lock (523,383,082 samples, 43.10%)</title><rect x="681.5" y="261" width="508.5" height="15.0" fill="rgb(253,71,16)" rx="2" ry="2" />
<text  x="684.47" y="271.5" >threading.py:1038:_wait_for_tstate_lock</text>
</g>
<g >
<title>junipersrx.py:336:_TranslatePolicy (49,642,051 samples, 4.09%)</title><rect x="558.5" y="213" width="48.2" height="15.0" fill="rgb(254,26,8)" rx="2" ry="2" />
<text  x="561.48" y="223.5" >juni..</text>
</g>
<g >
<title>copy.py:132:deepcopy (2,622,976 samples, 0.22%)</title><rect x="46.0" y="181" width="2.5" height="15.0" fill="rgb(222,108,16)" rx="2" ry="2" />
<text  x="48.96" y="191.5" ></text>
</g>
<g >
<title>copy.py:268:_reconstruct (10,556,134 samples, 0.87%)</title><rect x="53.7" y="229" width="10.3" height="15.0" fill="rgb(216,117,36)" rx="2" ry="2" />
<text  x="56.71" y="239.5" ></text>
</g>
<g >
<title>nacaddr.py:373:SortAddrList (2,954,311 samples, 0.24%)</title><rect x="613.3" y="101" width="2.9" height="15.0" fill="rgb(220,223,26)" rx="2" ry="2" />
<text  x="616.32" y="111.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,677,282 samples, 0.22%)</title><rect x="58.7" y="165" width="2.6" height="15.0" fill="rgb(211,148,28)" rx="2" ry="2" />
<text  x="61.71" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (2,580,565 samples, 0.21%)</title><rect x="174.3" y="101" width="2.5" height="15.0" fill="rgb(229,218,5)" rx="2" ry="2" />
<text  x="177.31" y="111.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,606,574 samples, 0.21%)</title><rect x="35.7" y="165" width="2.5" height="15.0" fill="rgb(248,42,49)" rx="2" ry="2" />
<text  x="38.68" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (4,199,290 samples, 0.35%)</title><rect x="70.5" y="197" width="4.1" height="15.0" fill="rgb(218,217,20)" rx="2" ry="2" />
<text  x="73.53" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:260:_SafeToMerge (2,546,586 samples, 0.21%)</title><rect x="115.2" y="149" width="2.5" height="15.0" fill="rgb(250,137,11)" rx="2" ry="2" />
<text  x="118.19" y="159.5" ></text>
</g>
<g >
<title>iptables.py:114:__str__ (225,493,989 samples, 18.57%)</title><rect x="74.6" y="229" width="219.1" height="15.0" fill="rgb(216,155,36)" rx="2" ry="2" />
<text  x="77.63" y="239.5" >iptables.py:114:__str__</text>
</g>
<g >
<title>ipaddress.py:585:__str__ (4,328,070 samples, 0.36%)</title><rect x="212.1" y="69" width="4.3" height="15.0" fill="rgb(222,121,48)" rx="2" ry="2" />
<text  x="215.15" y="79.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (2,005,009 samples, 0.17%)</title><rect x="97.0" y="149" width="2.0" height="15.0" fill="rgb(223,206,0)" rx="2" ry="2" />
<text  x="100.05" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (2,347,361 samples, 0.19%)</title><rect x="677.1" y="101" width="2.3" height="15.0" fill="rgb(217,196,2)" rx="2" ry="2" />
<text  x="680.11" y="111.5" ></text>
</g>
<g >
<title>juniper.py:653:_MinimizePrefixes (262,672,343 samples, 21.63%)</title><rect x="298.3" y="213" width="255.2" height="15.0" fill="rgb(252,215,6)" rx="2" ry="2" />
<text  x="301.32" y="223.5" >juniper.py:653:_MinimizePrefixes</text>
</g>
<g >
<title>copy.py:132:deepcopy (54,199,005 samples, 4.46%)</title><rect x="22.0" y="245" width="52.6" height="15.0" fill="rgb(229,149,45)" rx="2" ry="2" />
<text  x="24.95" y="255.5" >copy...</text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (2,644,667 samples, 0.22%)</title><rect x="48.5" y="197" width="2.6" height="15.0" fill="rgb(228,205,41)" rx="2" ry="2" />
<text  x="51.51" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:736:address_exclude (56,255,729 samples, 4.63%)</title><rect x="126.4" y="149" width="54.6" height="15.0" fill="rgb(222,162,28)" rx="2" ry="2" />
<text  x="129.38" y="159.5" >ipadd..</text>
</g>
<g >
<title>nacaddr.py:154:supernet_of (6,896,507 samples, 0.57%)</title><rect x="106.7" y="149" width="6.7" height="15.0" fill="rgb(234,109,34)" rx="2" ry="2" />
<text  x="109.71" y="159.5" ></text>
</g>
<g >
<title>policy.py:197:_TranslateTerms (2,544,040 samples, 0.21%)</title><rect x="616.2" y="165" width="2.5" height="15.0" fill="rgb(244,0,22)" rx="2" ry="2" />
<text  x="619.19" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:29:IP (108,028,659 samples, 8.90%)</title><rect x="181.0" y="149" width="105.0" height="15.0" fill="rgb(234,0,42)" rx="2" ry="2" />
<text  x="184.04" y="159.5" >nacaddr.py:2..</text>
</g>
<g >
<title>nacaddr.py:82:supernet_of (3,221,494 samples, 0.27%)</title><rect x="117.7" y="149" width="3.1" height="15.0" fill="rgb(238,11,34)" rx="2" ry="2" />
<text  x="120.67" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (1,621,227 samples, 0.13%)</title><rect x="73.0" y="181" width="1.6" height="15.0" fill="rgb(209,215,44)" rx="2" ry="2" />
<text  x="76.04" y="191.5" ></text>
</g>
<g >
<title>juniper.py:687:_Comment (1,459,395 samples, 0.12%)</title><rect x="553.5" y="213" width="1.5" height="15.0" fill="rgb(229,224,0)" rx="2" ry="2" />
<text  x="556.54" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:70:__init__ (1,276,278 samples, 0.11%)</title><rect x="105.5" y="133" width="1.2" height="15.0" fill="rgb(251,2,27)" rx="2" ry="2" />
<text  x="108.47" y="143.5" ></text>
</g>
<g >
<title>iptables.py:809:__str__ (225,510,151 samples, 18.57%)</title><rect x="74.6" y="245" width="219.1" height="15.0" fill="rgb(230,110,0)" rx="2" ry="2" />
<text  x="77.61" y="255.5" >iptables.py:809:__str__</text>
</g>
<g >
<title>lex.py:305:token (1,453,813 samples, 0.12%)</title><rect x="611.5" y="197" width="1.4" height="15.0" fill="rgb(249,198,10)" rx="2" ry="2" />
<text  x="614.45" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:373:SortAddrList (2,203,652 samples, 0.18%)</title><rect x="616.5" y="117" width="2.2" height="15.0" fill="rgb(224,3,26)" rx="2" ry="2" />
<text  x="619.52" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:1830:&lt;listcomp&gt; (1,507,064 samples, 0.12%)</title><rect x="257.5" y="37" width="1.5" height="15.0" fill="rgb(232,78,44)" rx="2" ry="2" />
<text  x="260.52" y="47.5" ></text>
</g>
<g >
<title>policy.py:190:AddFilter (2,545,047 samples, 0.21%)</title><rect x="616.2" y="181" width="2.5" height="15.0" fill="rgb(243,173,35)" rx="2" ry="2" />
<text  x="619.19" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:70:__init__ (4,107,276 samples, 0.34%)</title><rect x="158.6" y="117" width="4.0" height="15.0" fill="rgb(222,201,12)" rx="2" ry="2" />
<text  x="161.64" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:142:__init__ (9,605,372 samples, 0.79%)</title><rect x="642.3" y="117" width="9.4" height="15.0" fill="rgb(226,0,34)" rx="2" ry="2" />
<text  x="645.33" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:378:RemoveAddressFromList (171,770,172 samples, 14.14%)</title><rect x="124.1" y="181" width="166.9" height="15.0" fill="rgb(231,70,36)" rx="2" ry="2" />
<text  x="127.14" y="191.5" >nacaddr.py:378:Remove..</text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (2,463,959 samples, 0.20%)</title><rect x="28.5" y="197" width="2.4" height="15.0" fill="rgb(208,21,19)" rx="2" ry="2" />
<text  x="31.50" y="207.5" ></text>
</g>
<g >
<title>yacc.py:325:parse (73,920,428 samples, 6.09%)</title><rect x="609.7" y="229" width="71.8" height="15.0" fill="rgb(240,82,38)" rx="2" ry="2" />
<text  x="612.65" y="239.5" >yacc.py:..</text>
</g>
<g >
<title>copy.py:268:_reconstruct (2,691,755 samples, 0.22%)</title><rect x="51.1" y="197" width="2.6" height="15.0" fill="rgb(205,91,9)" rx="2" ry="2" />
<text  x="54.09" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (3,778,830 samples, 0.31%)</title><rect x="668.3" y="85" width="3.6" height="15.0" fill="rgb(230,112,25)" rx="2" ry="2" />
<text  x="671.27" y="95.5" ></text>
</g>
<g >
<title>aclgen.py:587:main (1,214,473,765 samples, 100.00%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(218,205,12)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >aclgen.py:587:main</text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (9,051,914 samples, 0.75%)</title><rect x="642.9" y="101" width="8.8" height="15.0" fill="rgb(245,189,26)" rx="2" ry="2" />
<text  x="645.86" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:378:RemoveAddressFromList (1,502,712 samples, 0.12%)</title><rect x="20.5" y="197" width="1.5" height="15.0" fill="rgb(254,65,14)" rx="2" ry="2" />
<text  x="23.49" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1809:_string_from_ip_int (1,627,431 samples, 0.13%)</title><rect x="152.3" y="37" width="1.6" height="15.0" fill="rgb(215,171,44)" rx="2" ry="2" />
<text  x="155.29" y="47.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (2,202,347 samples, 0.18%)</title><rect x="616.5" y="101" width="2.2" height="15.0" fill="rgb(243,154,34)" rx="2" ry="2" />
<text  x="619.52" y="111.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (10,543,137 samples, 0.87%)</title><rect x="53.7" y="213" width="10.3" height="15.0" fill="rgb(205,185,4)" rx="2" ry="2" />
<text  x="56.72" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:160:__deepcopy__ (4,971,700 samples, 0.41%)</title><rect x="64.0" y="229" width="4.8" height="15.0" fill="rgb(207,91,35)" rx="2" ry="2" />
<text  x="66.96" y="239.5" ></text>
</g>
<g >
<title>nacaddr.py:142:__init__ (3,238,872 samples, 0.27%)</title><rect x="65.6" y="213" width="3.2" height="15.0" fill="rgb(212,48,2)" rx="2" ry="2" />
<text  x="68.65" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:613:__str__ (5,790,843 samples, 0.48%)</title><rect x="224.0" y="85" width="5.6" height="15.0" fill="rgb(242,38,40)" rx="2" ry="2" />
<text  x="227.01" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:553:__eq__ (2,436,067 samples, 0.20%)</title><rect x="498.4" y="149" width="2.4" height="15.0" fill="rgb(205,177,4)" rx="2" ry="2" />
<text  x="501.41" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:142:__init__ (14,906,003 samples, 1.23%)</title><rect x="144.2" y="117" width="14.4" height="15.0" fill="rgb(212,201,22)" rx="2" ry="2" />
<text  x="147.16" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (59,911,768 samples, 4.93%)</title><rect x="184.6" y="133" width="58.2" height="15.0" fill="rgb(222,81,49)" rx="2" ry="2" />
<text  x="187.62" y="143.5" >ipaddr..</text>
</g>
<g >
<title>nacaddr.py:70:__init__ (2,277,694 samples, 0.19%)</title><rect x="671.9" y="101" width="2.3" height="15.0" fill="rgb(220,88,19)" rx="2" ry="2" />
<text  x="674.95" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1257:version (2,262,147 samples, 0.19%)</title><rect x="575.3" y="165" width="2.2" height="15.0" fill="rgb(217,56,2)" rx="2" ry="2" />
<text  x="578.34" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:54:_is_subnet_of (141,649,192 samples, 11.66%)</title><rect x="415.9" y="181" width="137.6" height="15.0" fill="rgb(234,153,30)" rx="2" ry="2" />
<text  x="418.91" y="191.5" >nacaddr.py:54:_is..</text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (2,421,007 samples, 0.20%)</title><rect x="26.1" y="197" width="2.4" height="15.0" fill="rgb(218,66,15)" rx="2" ry="2" />
<text  x="29.15" y="207.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (1,707,091 samples, 0.14%)</title><rect x="116.0" y="133" width="1.7" height="15.0" fill="rgb(213,43,17)" rx="2" ry="2" />
<text  x="119.01" y="143.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (2,677,960 samples, 0.22%)</title><rect x="58.7" y="197" width="2.6" height="15.0" fill="rgb(241,57,42)" rx="2" ry="2" />
<text  x="61.71" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1883:__init__ (1,337,825 samples, 0.11%)</title><rect x="269.1" y="101" width="1.3" height="15.0" fill="rgb(219,103,13)" rx="2" ry="2" />
<text  x="272.06" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:54:_is_subnet_of (4,571,407 samples, 0.38%)</title><rect x="564.1" y="165" width="4.4" height="15.0" fill="rgb(205,52,0)" rx="2" ry="2" />
<text  x="567.10" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:647:__lt__ (1,958,149 samples, 0.16%)</title><rect x="289.1" y="149" width="1.9" height="15.0" fill="rgb(239,126,36)" rx="2" ry="2" />
<text  x="292.13" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:699:hostmask (4,454,370 samples, 0.37%)</title><rect x="544.8" y="149" width="4.3" height="15.0" fill="rgb(233,51,50)" rx="2" ry="2" />
<text  x="547.77" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:699:hostmask (1,953,648 samples, 0.16%)</title><rect x="95.1" y="149" width="1.9" height="15.0" fill="rgb(206,150,26)" rx="2" ry="2" />
<text  x="98.15" y="159.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.isinstance&gt; (3,918,169 samples, 0.32%)</title><rect x="516.7" y="133" width="3.8" height="15.0" fill="rgb(254,139,18)" rx="2" ry="2" />
<text  x="519.70" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:585:__str__ (2,169,363 samples, 0.18%)</title><rect x="283.9" y="69" width="2.1" height="15.0" fill="rgb(236,150,32)" rx="2" ry="2" />
<text  x="286.89" y="79.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (10,418,033 samples, 0.86%)</title><rect x="33.3" y="213" width="10.1" height="15.0" fill="rgb(241,129,15)" rx="2" ry="2" />
<text  x="36.29" y="223.5" ></text>
</g>
<g >
<title>policy.py:1862:p_target (5,965,789 samples, 0.49%)</title><rect x="612.9" y="197" width="5.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="615.87" y="207.5" ></text>
</g>
<g >
<title>connection.py:406:_recv_bytes (1,380,202 samples, 0.11%)</title><rect x="16.7" y="181" width="1.3" height="15.0" fill="rgb(213,67,30)" rx="2" ry="2" />
<text  x="19.66" y="191.5" ></text>
</g>
<g >
<title>naming.py:455:GetNet (6,642,769 samples, 0.55%)</title><rect x="675.0" y="133" width="6.5" height="15.0" fill="rgb(215,47,4)" rx="2" ry="2" />
<text  x="678.02" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:699:hostmask (1,834,343 samples, 0.15%)</title><rect x="375.9" y="149" width="1.8" height="15.0" fill="rgb(220,35,22)" rx="2" ry="2" />
<text  x="378.93" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:1809:_string_from_ip_int (1,352,175 samples, 0.11%)</title><rect x="637.0" y="37" width="1.4" height="15.0" fill="rgb(249,124,37)" rx="2" ry="2" />
<text  x="640.05" y="47.5" ></text>
</g>
<g >
<title>nacaddr.py:54:_is_subnet_of (30,022,292 samples, 2.47%)</title><rect x="577.5" y="165" width="29.2" height="15.0" fill="rgb(208,100,45)" rx="2" ry="2" />
<text  x="580.54" y="175.5" >na..</text>
</g>
<g >
<title>ipaddress.py:585:__str__ (2,570,697 samples, 0.21%)</title><rect x="295.8" y="197" width="2.5" height="15.0" fill="rgb(241,40,27)" rx="2" ry="2" />
<text  x="298.83" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1883:__init__ (1,552,628 samples, 0.13%)</title><rect x="241.3" y="101" width="1.5" height="15.0" fill="rgb(214,104,24)" rx="2" ry="2" />
<text  x="244.32" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (5,202,347 samples, 0.43%)</title><rect x="651.9" y="101" width="5.1" height="15.0" fill="rgb(251,50,23)" rx="2" ry="2" />
<text  x="654.91" y="111.5" ></text>
</g>
<g >
<title>functools.py:98:_le_from_lt (3,530,034 samples, 0.29%)</title><rect x="170.9" y="101" width="3.4" height="15.0" fill="rgb(211,1,16)" rx="2" ry="2" />
<text  x="173.88" y="111.5" ></text>
</g>
<g >
<title>cisco.py:641:__str__ (2,516,000 samples, 0.21%)</title><rect x="19.5" y="229" width="2.5" height="15.0" fill="rgb(205,153,18)" rx="2" ry="2" />
<text  x="22.51" y="239.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,714,985 samples, 0.22%)</title><rect x="61.3" y="181" width="2.7" height="15.0" fill="rgb(248,70,34)" rx="2" ry="2" />
<text  x="64.33" y="191.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (1,345,248 samples, 0.11%)</title><rect x="655.7" y="69" width="1.3" height="15.0" fill="rgb(215,56,43)" rx="2" ry="2" />
<text  x="658.65" y="79.5" ></text>
</g>
<g >
<title>nacaddr.py:401:AddressListExclude (221,930,676 samples, 18.27%)</title><rect x="75.4" y="197" width="215.6" height="15.0" fill="rgb(246,197,40)" rx="2" ry="2" />
<text  x="78.40" y="207.5" >nacaddr.py:401:AddressListEx..</text>
</g>
<g >
<title>ipaddress.py:613:__str__ (2,437,217 samples, 0.20%)</title><rect x="283.6" y="85" width="2.4" height="15.0" fill="rgb(213,177,8)" rx="2" ry="2" />
<text  x="286.63" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (27,252,917 samples, 2.24%)</title><rect x="216.4" y="117" width="26.4" height="15.0" fill="rgb(215,97,9)" rx="2" ry="2" />
<text  x="219.35" y="127.5" >i..</text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (9,238,636 samples, 0.76%)</title><rect x="633.4" y="101" width="8.9" height="15.0" fill="rgb(242,3,33)" rx="2" ry="2" />
<text  x="636.35" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (10,367,461 samples, 0.85%)</title><rect x="259.0" y="101" width="10.1" height="15.0" fill="rgb(240,81,51)" rx="2" ry="2" />
<text  x="261.99" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (8,090,185 samples, 0.67%)</title><rect x="91.1" y="165" width="7.9" height="15.0" fill="rgb(246,155,26)" rx="2" ry="2" />
<text  x="94.13" y="175.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (2,673,838 samples, 0.22%)</title><rect x="35.6" y="181" width="2.6" height="15.0" fill="rgb(212,67,21)" rx="2" ry="2" />
<text  x="38.61" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:401:AddressListExclude (1,917,000 samples, 0.16%)</title><rect x="20.1" y="213" width="1.9" height="15.0" fill="rgb(210,7,23)" rx="2" ry="2" />
<text  x="23.09" y="223.5" ></text>
</g>
<g >
<title>policy.py:1279:AddressCleanup (2,968,971 samples, 0.24%)</title><rect x="613.3" y="133" width="2.9" height="15.0" fill="rgb(207,139,15)" rx="2" ry="2" />
<text  x="616.30" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:1872:version (2,836,275 samples, 0.23%)</title><rect x="322.1" y="181" width="2.8" height="15.0" fill="rgb(216,198,4)" rx="2" ry="2" />
<text  x="325.11" y="191.5" ></text>
</g>
<g >
<title>naming.py:455:GetNet (2,139,429 samples, 0.18%)</title><rect x="679.4" y="117" width="2.1" height="15.0" fill="rgb(218,47,1)" rx="2" ry="2" />
<text  x="682.39" y="127.5" ></text>
</g>
<g >
<title>aclgenerator.py:276:__init__ (1,544,336 samples, 0.13%)</title><rect x="18.0" y="245" width="1.5" height="15.0" fill="rgb(227,123,34)" rx="2" ry="2" />
<text  x="21.00" y="255.5" ></text>
</g>
<g >
<title>ipaddress.py:1809:_string_from_ip_int (1,678,767 samples, 0.14%)</title><rect x="284.4" y="53" width="1.6" height="15.0" fill="rgb(228,67,53)" rx="2" ry="2" />
<text  x="287.37" y="63.5" ></text>
</g>
</g>
</svg>

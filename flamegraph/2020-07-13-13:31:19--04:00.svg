<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="374.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >"2020-07-13-13:31:19--04:00 cProfile"</text>
<text id="details" x="10.00" y="357" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="357" > </text>
<g id="frames">
<g >
<title>ipaddress.py:1142:_parse_octet (1,887,682 samples, 0.22%)</title><rect x="120.3" y="165" width="2.7" height="15.0" fill="rgb(221,72,20)" rx="2" ry="2" />
<text  x="123.31" y="175.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'issuperset' of 'frozenset' objects&gt; (1,399,816 samples, 0.17%)</title><rect x="339.4" y="53" width="1.9" height="15.0" fill="rgb(245,62,29)" rx="2" ry="2" />
<text  x="342.36" y="63.5" ></text>
</g>
<g >
<title>ipaddress.py:360:get_mixed_type_key (1,132,333 samples, 0.13%)</title><rect x="210.6" y="165" width="1.6" height="15.0" fill="rgb(222,84,10)" rx="2" ry="2" />
<text  x="213.59" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (3,992,933 samples, 0.47%)</title><rect x="1161.1" y="85" width="5.6" height="15.0" fill="rgb(212,114,34)" rx="2" ry="2" />
<text  x="1164.09" y="95.5" ></text>
</g>
<g >
<title>functools.py:98:_le_from_lt (14,351,857 samples, 1.70%)</title><rect x="992.2" y="165" width="20.1" height="15.0" fill="rgb(210,210,38)" rx="2" ry="2" />
<text  x="995.22" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1809:_string_from_ip_int (2,048,406 samples, 0.24%)</title><rect x="1101.8" y="53" width="2.9" height="15.0" fill="rgb(214,149,25)" rx="2" ry="2" />
<text  x="1104.83" y="63.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (14,897,983 samples, 1.77%)</title><rect x="20.7" y="245" width="20.8" height="15.0" fill="rgb(248,18,27)" rx="2" ry="2" />
<text  x="23.66" y="255.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (8,784,009 samples, 1.04%)</title><rect x="1154.4" y="101" width="12.3" height="15.0" fill="rgb(252,44,47)" rx="2" ry="2" />
<text  x="1157.38" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:585:__str__ (3,525,609 samples, 0.42%)</title><rect x="300.5" y="69" width="4.9" height="15.0" fill="rgb(242,10,22)" rx="2" ry="2" />
<text  x="303.50" y="79.5" ></text>
</g>
<g >
<title>nacaddr.py:92:__deepcopy__ (1,728,430 samples, 0.20%)</title><rect x="99.8" y="213" width="2.5" height="15.0" fill="rgb(247,181,26)" rx="2" ry="2" />
<text  x="102.84" y="223.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (3,688,630 samples, 0.44%)</title><rect x="41.9" y="197" width="5.1" height="15.0" fill="rgb(209,179,43)" rx="2" ry="2" />
<text  x="44.88" y="207.5" ></text>
</g>
<g >
<title>policy.py:1912:p_term_spec (96,875,390 samples, 11.49%)</title><rect x="1054.4" y="213" width="135.6" height="15.0" fill="rgb(208,164,28)" rx="2" ry="2" />
<text  x="1057.42" y="223.5" >policy.py:1912:p_..</text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (5,029,120 samples, 0.60%)</title><rect x="985.2" y="149" width="7.0" height="15.0" fill="rgb(226,50,26)" rx="2" ry="2" />
<text  x="988.19" y="159.5" ></text>
</g>
<g >
<title>aclgen.py:587:main (843,152,951 samples, 100.00%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(245,122,51)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >aclgen.py:587:main</text>
</g>
<g >
<title>nacaddr.py:381:SortAddrList (2,600,288 samples, 0.31%)</title><rect x="1050.8" y="133" width="3.6" height="15.0" fill="rgb(231,138,54)" rx="2" ry="2" />
<text  x="1053.78" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (925,833 samples, 0.11%)</title><rect x="195.7" y="133" width="1.3" height="15.0" fill="rgb(224,33,31)" rx="2" ry="2" />
<text  x="198.75" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:1883:__init__ (1,410,585 samples, 0.17%)</title><rect x="321.2" y="101" width="2.0" height="15.0" fill="rgb(223,100,38)" rx="2" ry="2" />
<text  x="324.18" y="111.5" ></text>
</g>
<g >
<title>aclgenerator.py:404:FixHighPorts (1,198,554 samples, 0.14%)</title><rect x="909.6" y="213" width="1.7" height="15.0" fill="rgb(230,135,11)" rx="2" ry="2" />
<text  x="912.62" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (13,403,614 samples, 1.59%)</title><rect x="324.4" y="117" width="18.8" height="15.0" fill="rgb(206,78,50)" rx="2" ry="2" />
<text  x="327.45" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (1,989,151 samples, 0.24%)</title><rect x="250.9" y="101" width="2.8" height="15.0" fill="rgb(231,125,9)" rx="2" ry="2" />
<text  x="253.92" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (1,152,538 samples, 0.14%)</title><rect x="39.9" y="181" width="1.6" height="15.0" fill="rgb(238,101,10)" rx="2" ry="2" />
<text  x="42.89" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (1,351,961 samples, 0.16%)</title><rect x="341.3" y="101" width="1.9" height="15.0" fill="rgb(233,190,26)" rx="2" ry="2" />
<text  x="344.32" y="111.5" ></text>
</g>
<g >
<title>junipersrx.py:336:_TranslatePolicy (1,393,222 samples, 0.17%)</title><rect x="13.3" y="245" width="2.0" height="15.0" fill="rgb(221,102,40)" rx="2" ry="2" />
<text  x="16.33" y="255.5" ></text>
</g>
<g >
<title>junipersrx.py:687:_GenerateAddressBook (1,465,038 samples, 0.17%)</title><rect x="1029.0" y="245" width="2.0" height="15.0" fill="rgb(245,40,3)" rx="2" ry="2" />
<text  x="1031.96" y="255.5" ></text>
</g>
<g >
<title>ipaddress.py:1257:version (2,257,336 samples, 0.27%)</title><rect x="1012.3" y="165" width="3.2" height="15.0" fill="rgb(213,200,11)" rx="2" ry="2" />
<text  x="1015.31" y="175.5" ></text>
</g>
<g >
<title>policy.py:172:__init__ (6,253,902 samples, 0.74%)</title><rect x="1041.8" y="197" width="8.8" height="15.0" fill="rgb(214,30,45)" rx="2" ry="2" />
<text  x="1044.80" y="207.5" ></text>
</g>
<g >
<title>policy.py:1290:cleanup (2,603,379 samples, 0.31%)</title><rect x="1050.8" y="149" width="3.6" height="15.0" fill="rgb(230,223,30)" rx="2" ry="2" />
<text  x="1053.78" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:146:__init__ (4,120,343 samples, 0.49%)</title><rect x="105.4" y="229" width="5.8" height="15.0" fill="rgb(216,4,5)" rx="2" ry="2" />
<text  x="108.39" y="239.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (14,488,523 samples, 1.72%)</title><rect x="61.7" y="229" width="20.3" height="15.0" fill="rgb(235,100,54)" rx="2" ry="2" />
<text  x="64.69" y="239.5" ></text>
</g>
<g >
<title>naming.py:441:GetNetAddr (85,639,035 samples, 10.16%)</title><rect x="1055.5" y="181" width="119.9" height="15.0" fill="rgb(227,42,49)" rx="2" ry="2" />
<text  x="1058.52" y="191.5" >naming.py:441:..</text>
</g>
<g >
<title>ipaddress.py:585:__str__ (1,814,751 samples, 0.22%)</title><rect x="102.9" y="213" width="2.5" height="15.0" fill="rgb(251,22,31)" rx="2" ry="2" />
<text  x="105.85" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1257:version (8,998,414 samples, 1.07%)</title><rect x="837.2" y="181" width="12.6" height="15.0" fill="rgb(215,219,36)" rx="2" ry="2" />
<text  x="840.18" y="191.5" ></text>
</g>
<g >
<title>policy.py:1279:AddressCleanup (5,931,025 samples, 0.70%)</title><rect x="1042.3" y="149" width="8.3" height="15.0" fill="rgb(232,102,25)" rx="2" ry="2" />
<text  x="1045.25" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:386:RemoveAddressFromList (890,560 samples, 0.11%)</title><rect x="17.7" y="213" width="1.2" height="15.0" fill="rgb(239,181,36)" rx="2" ry="2" />
<text  x="20.68" y="223.5" ></text>
</g>
<g >
<title>policy.py:190:AddFilter (6,252,912 samples, 0.74%)</title><rect x="1041.8" y="181" width="8.8" height="15.0" fill="rgb(249,75,12)" rx="2" ry="2" />
<text  x="1044.80" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:86:supernet_of (3,920,442 samples, 0.46%)</title><rect x="202.3" y="165" width="5.5" height="15.0" fill="rgb(226,215,49)" rx="2" ry="2" />
<text  x="205.27" y="175.5" ></text>
</g>
<g >
<title>juniper.py:186:__str__ (399,748,465 samples, 47.41%)</title><rect x="349.7" y="245" width="559.4" height="15.0" fill="rgb(246,201,47)" rx="2" ry="2" />
<text  x="352.65" y="255.5" >juniper.py:186:__str__</text>
</g>
<g >
<title>ipaddress.py:588:__hash__ (2,061,042 samples, 0.24%)</title><rect x="199.4" y="133" width="2.9" height="15.0" fill="rgb(237,75,24)" rx="2" ry="2" />
<text  x="202.38" y="143.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (3,721,028 samples, 0.44%)</title><rect x="92.8" y="197" width="5.2" height="15.0" fill="rgb(215,158,44)" rx="2" ry="2" />
<text  x="95.80" y="207.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (14,324,565 samples, 1.70%)</title><rect x="41.5" y="213" width="20.1" height="15.0" fill="rgb(234,178,43)" rx="2" ry="2" />
<text  x="44.52" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:80:subnet_of (265,437,224 samples, 31.48%)</title><rect x="531.0" y="213" width="371.5" height="15.0" fill="rgb(236,17,45)" rx="2" ry="2" />
<text  x="534.02" y="223.5" >nacaddr.py:80:subnet_of</text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (6,004,766 samples, 0.71%)</title><rect x="1127.3" y="101" width="8.4" height="15.0" fill="rgb(241,36,27)" rx="2" ry="2" />
<text  x="1130.29" y="111.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (3,338,273 samples, 0.40%)</title><rect x="23.5" y="213" width="4.7" height="15.0" fill="rgb(254,86,34)" rx="2" ry="2" />
<text  x="26.51" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (2,773,055 samples, 0.33%)</title><rect x="1075.9" y="69" width="3.9" height="15.0" fill="rgb(243,137,36)" rx="2" ry="2" />
<text  x="1078.93" y="79.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (3,686,479 samples, 0.44%)</title><rect x="87.6" y="213" width="5.2" height="15.0" fill="rgb(208,192,49)" rx="2" ry="2" />
<text  x="90.61" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:146:__init__ (1,106,567 samples, 0.13%)</title><rect x="1188.3" y="101" width="1.5" height="15.0" fill="rgb(239,209,44)" rx="2" ry="2" />
<text  x="1191.26" y="111.5" ></text>
</g>
<g >
<title>naming.py:455:GetNet (1,126,291 samples, 0.13%)</title><rect x="1173.8" y="133" width="1.6" height="15.0" fill="rgb(242,25,49)" rx="2" ry="2" />
<text  x="1176.79" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:699:hostmask (1,195,650 samples, 0.14%)</title><rect x="526.0" y="165" width="1.6" height="15.0" fill="rgb(252,116,45)" rx="2" ry="2" />
<text  x="528.96" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (1,250,399 samples, 0.15%)</title><rect x="80.2" y="181" width="1.8" height="15.0" fill="rgb(245,25,39)" rx="2" ry="2" />
<text  x="83.22" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (5,457,742 samples, 0.65%)</title><rect x="313.5" y="85" width="7.7" height="15.0" fill="rgb(222,155,40)" rx="2" ry="2" />
<text  x="316.54" y="95.5" ></text>
</g>
<g >
<title>naming.py:455:GetNet (85,621,600 samples, 10.15%)</title><rect x="1055.5" y="165" width="119.9" height="15.0" fill="rgb(228,113,13)" rx="2" ry="2" />
<text  x="1058.54" y="175.5" >naming.py:455:..</text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (1,942,883 samples, 0.23%)</title><rect x="1148.0" y="85" width="2.7" height="15.0" fill="rgb(219,77,16)" rx="2" ry="2" />
<text  x="1150.97" y="95.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (1,188,676 samples, 0.14%)</title><rect x="909.6" y="197" width="1.7" height="15.0" fill="rgb(211,106,21)" rx="2" ry="2" />
<text  x="912.63" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:286:_CollapseAddrListInternal (24,306,936 samples, 2.88%)</title><rect x="173.7" y="181" width="34.1" height="15.0" fill="rgb(254,158,1)" rx="2" ry="2" />
<text  x="176.73" y="191.5" >na..</text>
</g>
<g >
<title>juniper.py:97:Append (2,552,141 samples, 0.30%)</title><rect x="905.5" y="229" width="3.6" height="15.0" fill="rgb(230,112,16)" rx="2" ry="2" />
<text  x="908.53" y="239.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (2,717,848 samples, 0.32%)</title><rect x="1186.0" y="117" width="3.8" height="15.0" fill="rgb(241,11,19)" rx="2" ry="2" />
<text  x="1189.01" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:146:__init__ (964,385 samples, 0.11%)</title><rect x="195.7" y="149" width="1.3" height="15.0" fill="rgb(218,213,44)" rx="2" ry="2" />
<text  x="198.69" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (5,418,552 samples, 0.64%)</title><rect x="1081.1" y="117" width="7.6" height="15.0" fill="rgb(239,45,13)" rx="2" ry="2" />
<text  x="1084.10" y="127.5" ></text>
</g>
<g >
<title>functools.py:103:_ge_from_lt (1,129,280 samples, 0.13%)</title><rect x="189.0" y="133" width="1.6" height="15.0" fill="rgb(245,62,7)" rx="2" ry="2" />
<text  x="192.02" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (2,290,608 samples, 0.27%)</title><rect x="1085.5" y="101" width="3.2" height="15.0" fill="rgb(240,78,49)" rx="2" ry="2" />
<text  x="1088.48" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:171:supernet (1,360,808 samples, 0.16%)</title><rect x="195.1" y="165" width="1.9" height="15.0" fill="rgb(230,42,46)" rx="2" ry="2" />
<text  x="198.14" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (12,743,019 samples, 1.51%)</title><rect x="513.2" y="181" width="17.8" height="15.0" fill="rgb(240,150,14)" rx="2" ry="2" />
<text  x="516.18" y="191.5" ></text>
</g>
<g >
<title>yacc.py:1003:parseopt_notrack (111,802,118 samples, 13.26%)</title><rect x="1033.5" y="229" width="156.5" height="15.0" fill="rgb(243,177,51)" rx="2" ry="2" />
<text  x="1036.53" y="239.5" >yacc.py:1003:parseop..</text>
</g>
<g >
<title>iputils.py:7:exclude_address (21,354,438 samples, 2.53%)</title><rect x="223.8" y="149" width="29.9" height="15.0" fill="rgb(247,119,31)" rx="2" ry="2" />
<text  x="226.82" y="159.5" >ip..</text>
</g>
<g >
<title>nacaddr.py:74:__init__ (1,337,314 samples, 0.16%)</title><rect x="59.7" y="181" width="1.9" height="15.0" fill="rgb(205,23,29)" rx="2" ry="2" />
<text  x="62.70" y="191.5" ></text>
</g>
<g >
<title>juniper.py:891:_TranslatePolicy (1,241,386 samples, 0.15%)</title><rect x="909.6" y="229" width="1.7" height="15.0" fill="rgb(208,105,29)" rx="2" ry="2" />
<text  x="912.56" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (4,757,395 samples, 0.56%)</title><rect x="1167.1" y="101" width="6.7" height="15.0" fill="rgb(209,157,47)" rx="2" ry="2" />
<text  x="1170.14" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (2,467,337 samples, 0.29%)</title><rect x="1170.3" y="85" width="3.5" height="15.0" fill="rgb(238,100,38)" rx="2" ry="2" />
<text  x="1173.34" y="95.5" ></text>
</g>
<g >
<title>functools.py:103:_ge_from_lt (7,972,225 samples, 0.95%)</title><rect x="981.1" y="165" width="11.1" height="15.0" fill="rgb(242,101,11)" rx="2" ry="2" />
<text  x="984.07" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (1,168,754 samples, 0.14%)</title><rect x="1047.5" y="85" width="1.6" height="15.0" fill="rgb(227,117,53)" rx="2" ry="2" />
<text  x="1050.51" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (1,028,353 samples, 0.12%)</title><rect x="249.5" y="101" width="1.4" height="15.0" fill="rgb(218,5,28)" rx="2" ry="2" />
<text  x="252.48" y="111.5" ></text>
</g>
<g >
<title>functools.py:98:_le_from_lt (57,210,775 samples, 6.79%)</title><rect x="757.1" y="181" width="80.1" height="15.0" fill="rgb(253,106,3)" rx="2" ry="2" />
<text  x="760.11" y="191.5" >functools..</text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (2,193,864 samples, 0.26%)</title><rect x="233.9" y="117" width="3.1" height="15.0" fill="rgb(215,117,7)" rx="2" ry="2" />
<text  x="236.92" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:158:supernet_of (10,955,520 samples, 1.30%)</title><rect x="921.9" y="197" width="15.3" height="15.0" fill="rgb(205,198,41)" rx="2" ry="2" />
<text  x="924.85" y="207.5" ></text>
</g>
<g >
<title>naming.py:455:GetNet (135,514 samples, 0.02%)</title><rect x="1189.8" y="117" width="0.2" height="15.0" fill="rgb(224,14,21)" rx="2" ry="2" />
<text  x="1192.81" y="127.5" ></text>
</g>
<g >
<title>naming.py:455:GetNet (27,181,372 samples, 3.22%)</title><rect x="1137.3" y="149" width="38.1" height="15.0" fill="rgb(242,93,12)" rx="2" ry="2" />
<text  x="1140.33" y="159.5" >nam..</text>
</g>
<g >
<title>~:0:&lt;method 'issuperset' of 'frozenset' objects&gt; (1,209,166 samples, 0.14%)</title><rect x="1134.0" y="53" width="1.7" height="15.0" fill="rgb(216,160,12)" rx="2" ry="2" />
<text  x="1137.00" y="63.5" ></text>
</g>
<g >
<title>ipaddress.py:585:__str__ (4,095,303 samples, 0.49%)</title><rect x="353.9" y="213" width="5.7" height="15.0" fill="rgb(220,199,21)" rx="2" ry="2" />
<text  x="356.89" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (1,056,882 samples, 0.13%)</title><rect x="1188.3" y="85" width="1.5" height="15.0" fill="rgb(219,32,5)" rx="2" ry="2" />
<text  x="1191.33" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:613:__str__ (1,438,960 samples, 0.17%)</title><rect x="1159.1" y="69" width="2.0" height="15.0" fill="rgb(231,113,32)" rx="2" ry="2" />
<text  x="1162.07" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:1883:__init__ (1,218,469 samples, 0.14%)</title><rect x="1118.3" y="101" width="1.7" height="15.0" fill="rgb(206,19,52)" rx="2" ry="2" />
<text  x="1121.30" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:164:__deepcopy__ (1,281,545 samples, 0.15%)</title><rect x="77.8" y="213" width="1.8" height="15.0" fill="rgb(231,114,48)" rx="2" ry="2" />
<text  x="80.80" y="223.5" ></text>
</g>
<g >
<title>policy.py:1013:AddObject (10,337,556 samples, 1.23%)</title><rect x="1175.5" y="181" width="14.5" height="15.0" fill="rgb(244,157,41)" rx="2" ry="2" />
<text  x="1178.53" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (31,936,774 samples, 3.79%)</title><rect x="792.5" y="165" width="44.7" height="15.0" fill="rgb(235,112,47)" rx="2" ry="2" />
<text  x="795.48" y="175.5" >ipad..</text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (3,619,602 samples, 0.43%)</title><rect x="67.6" y="197" width="5.0" height="15.0" fill="rgb(246,87,32)" rx="2" ry="2" />
<text  x="70.57" y="207.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (3,385,298 samples, 0.40%)</title><rect x="28.2" y="213" width="4.7" height="15.0" fill="rgb(219,78,21)" rx="2" ry="2" />
<text  x="31.19" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:403:&lt;genexpr&gt; (87,197,363 samples, 10.34%)</title><rect x="221.2" y="165" width="122.0" height="15.0" fill="rgb(236,121,30)" rx="2" ry="2" />
<text  x="224.17" y="175.5" >nacaddr.py:403:..</text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (1,370,914 samples, 0.16%)</title><rect x="281.3" y="101" width="1.9" height="15.0" fill="rgb(222,193,38)" rx="2" ry="2" />
<text  x="284.26" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:92:__deepcopy__ (8,428,151 samples, 1.00%)</title><rect x="111.2" y="245" width="11.8" height="15.0" fill="rgb(251,93,22)" rx="2" ry="2" />
<text  x="114.16" y="255.5" ></text>
</g>
<g >
<title>policy.py:1279:AddressCleanup (2,622,523 samples, 0.31%)</title><rect x="1050.8" y="165" width="3.6" height="15.0" fill="rgb(220,24,2)" rx="2" ry="2" />
<text  x="1053.75" y="175.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (3,585,028 samples, 0.43%)</title><rect x="62.5" y="197" width="5.1" height="15.0" fill="rgb(244,133,13)" rx="2" ry="2" />
<text  x="65.55" y="207.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (5,011,025 samples, 0.59%)</title><rect x="334.3" y="85" width="7.0" height="15.0" fill="rgb(237,40,49)" rx="2" ry="2" />
<text  x="337.30" y="95.5" ></text>
</g>
<g >
<title>lex.py:576:validate_all (1,451,637 samples, 0.17%)</title><rect x="1031.5" y="229" width="2.0" height="15.0" fill="rgb(244,173,50)" rx="2" ry="2" />
<text  x="1034.50" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:360:get_mixed_type_key (1,491,326 samples, 0.18%)</title><rect x="1045.4" y="85" width="2.1" height="15.0" fill="rgb(234,5,31)" rx="2" ry="2" />
<text  x="1048.43" y="95.5" ></text>
</g>
<g >
<title>nacaddr.py:381:SortAddrList (5,880,736 samples, 0.70%)</title><rect x="1042.3" y="117" width="8.3" height="15.0" fill="rgb(225,45,11)" rx="2" ry="2" />
<text  x="1045.32" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:92:__deepcopy__ (1,698,069 samples, 0.20%)</title><rect x="79.6" y="213" width="2.4" height="15.0" fill="rgb(225,145,40)" rx="2" ry="2" />
<text  x="82.59" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (965,019 samples, 0.11%)</title><rect x="252.4" y="85" width="1.3" height="15.0" fill="rgb(233,218,5)" rx="2" ry="2" />
<text  x="255.35" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (3,991,842 samples, 0.47%)</title><rect x="1145.1" y="101" width="5.6" height="15.0" fill="rgb(220,55,11)" rx="2" ry="2" />
<text  x="1148.10" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (24,748,318 samples, 2.94%)</title><rect x="288.5" y="117" width="34.7" height="15.0" fill="rgb(217,94,15)" rx="2" ry="2" />
<text  x="291.52" y="127.5" >ip..</text>
</g>
<g >
<title>ipaddress.py:613:__str__ (4,054,167 samples, 0.48%)</title><rect x="299.8" y="85" width="5.6" height="15.0" fill="rgb(215,35,51)" rx="2" ry="2" />
<text  x="302.76" y="95.5" ></text>
</g>
<g >
<title>nacaddr.py:86:supernet_of (65,388,123 samples, 7.76%)</title><rect x="937.2" y="197" width="91.5" height="15.0" fill="rgb(220,213,48)" rx="2" ry="2" />
<text  x="940.18" y="207.5" >nacaddr.py..</text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.isinstance&gt; (901,442 samples, 0.11%)</title><rect x="991.0" y="133" width="1.2" height="15.0" fill="rgb(251,167,27)" rx="2" ry="2" />
<text  x="993.96" y="143.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (1,778,582 samples, 0.21%)</title><rect x="1171.3" y="69" width="2.5" height="15.0" fill="rgb(219,160,12)" rx="2" ry="2" />
<text  x="1174.30" y="79.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (3,670,221 samples, 0.44%)</title><rect x="62.4" y="213" width="5.2" height="15.0" fill="rgb(237,203,35)" rx="2" ry="2" />
<text  x="65.43" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:699:hostmask (3,198,767 samples, 0.38%)</title><rect x="889.0" y="165" width="4.4" height="15.0" fill="rgb(226,158,24)" rx="2" ry="2" />
<text  x="891.97" y="175.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'issuperset' of 'frozenset' objects&gt; (1,982,711 samples, 0.24%)</title><rect x="318.4" y="69" width="2.8" height="15.0" fill="rgb(244,223,3)" rx="2" ry="2" />
<text  x="321.41" y="79.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (3,335,751 samples, 0.40%)</title><rect x="23.5" y="181" width="4.7" height="15.0" fill="rgb(207,229,44)" rx="2" ry="2" />
<text  x="26.52" y="191.5" ></text>
</g>
<g >
<title>copy.py:268:_reconstruct (14,496,843 samples, 1.72%)</title><rect x="82.0" y="245" width="20.3" height="15.0" fill="rgb(238,118,44)" rx="2" ry="2" />
<text  x="84.97" y="255.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (6,470,875 samples, 0.77%)</title><rect x="893.4" y="165" width="9.1" height="15.0" fill="rgb(245,19,11)" rx="2" ry="2" />
<text  x="896.44" y="175.5" ></text>
</g>
<g >
<title>iptables.py:403:_FormatPart (4,532,048 samples, 0.54%)</title><rect x="343.2" y="229" width="6.4" height="15.0" fill="rgb(238,206,6)" rx="2" ry="2" />
<text  x="346.21" y="239.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.isinstance&gt; (1,512,657 samples, 0.18%)</title><rect x="1010.2" y="133" width="2.1" height="15.0" fill="rgb(220,229,25)" rx="2" ry="2" />
<text  x="1013.19" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:585:__str__ (3,045,434 samples, 0.36%)</title><rect x="1100.4" y="69" width="4.3" height="15.0" fill="rgb(221,9,48)" rx="2" ry="2" />
<text  x="1103.44" y="79.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (3,945,889 samples, 0.47%)</title><rect x="271.1" y="85" width="5.5" height="15.0" fill="rgb(222,218,37)" rx="2" ry="2" />
<text  x="274.10" y="95.5" ></text>
</g>
<g >
<title>lex.py:862:lex (1,598,684 samples, 0.19%)</title><rect x="1031.3" y="245" width="2.2" height="15.0" fill="rgb(226,14,26)" rx="2" ry="2" />
<text  x="1034.29" y="255.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (21,377,686 samples, 2.54%)</title><rect x="1090.1" y="117" width="29.9" height="15.0" fill="rgb(225,66,4)" rx="2" ry="2" />
<text  x="1093.09" y="127.5" >ip..</text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (9,714,964 samples, 1.15%)</title><rect x="1067.5" y="117" width="13.6" height="15.0" fill="rgb(253,148,24)" rx="2" ry="2" />
<text  x="1070.50" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (2,064,269 samples, 0.24%)</title><rect x="1158.2" y="85" width="2.9" height="15.0" fill="rgb(223,126,48)" rx="2" ry="2" />
<text  x="1161.20" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (1,272,756 samples, 0.15%)</title><rect x="100.5" y="181" width="1.8" height="15.0" fill="rgb(249,46,47)" rx="2" ry="2" />
<text  x="103.47" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1809:_string_from_ip_int (1,215,241 samples, 0.14%)</title><rect x="103.7" y="197" width="1.7" height="15.0" fill="rgb(245,92,19)" rx="2" ry="2" />
<text  x="106.69" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (3,885,472 samples, 0.46%)</title><rect x="105.7" y="213" width="5.5" height="15.0" fill="rgb(210,155,12)" rx="2" ry="2" />
<text  x="108.72" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1257:version (3,426,056 samples, 0.41%)</title><rect x="952.9" y="181" width="4.8" height="15.0" fill="rgb(218,143,25)" rx="2" ry="2" />
<text  x="955.94" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (2,226,463 samples, 0.26%)</title><rect x="1150.7" y="101" width="3.1" height="15.0" fill="rgb(211,3,16)" rx="2" ry="2" />
<text  x="1153.69" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:588:__hash__ (1,313,769 samples, 0.16%)</title><rect x="171.9" y="181" width="1.8" height="15.0" fill="rgb(221,58,23)" rx="2" ry="2" />
<text  x="174.90" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:585:__str__ (1,251,357 samples, 0.15%)</title><rect x="1159.3" y="53" width="1.8" height="15.0" fill="rgb(248,67,11)" rx="2" ry="2" />
<text  x="1162.34" y="63.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (11,246,727 samples, 1.33%)</title><rect x="262.4" y="117" width="15.7" height="15.0" fill="rgb(238,168,2)" rx="2" ry="2" />
<text  x="265.37" y="127.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (3,618,986 samples, 0.43%)</title><rect x="67.6" y="181" width="5.0" height="15.0" fill="rgb(230,118,44)" rx="2" ry="2" />
<text  x="70.57" y="191.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (3,603,010 samples, 0.43%)</title><rect x="42.0" y="181" width="5.0" height="15.0" fill="rgb(215,42,39)" rx="2" ry="2" />
<text  x="45.00" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (1,447,013 samples, 0.17%)</title><rect x="1171.8" y="53" width="2.0" height="15.0" fill="rgb(225,166,22)" rx="2" ry="2" />
<text  x="1174.77" y="63.5" ></text>
</g>
<g >
<title>iptables.py:322:_CalculateAddresses (155,969,618 samples, 18.50%)</title><rect x="124.9" y="229" width="218.3" height="15.0" fill="rgb(248,128,1)" rx="2" ry="2" />
<text  x="127.93" y="239.5" >iptables.py:322:_CalculateAd..</text>
</g>
<g >
<title>ipaddress.py:553:__eq__ (1,464,164 samples, 0.17%)</title><rect x="487.8" y="165" width="2.1" height="15.0" fill="rgb(249,0,53)" rx="2" ry="2" />
<text  x="490.85" y="175.5" ></text>
</g>
<g >
<title>cisco.py:1235:__str__ (2,604,394 samples, 0.31%)</title><rect x="15.3" y="261" width="3.6" height="15.0" fill="rgb(235,55,40)" rx="2" ry="2" />
<text  x="18.28" y="271.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (1,489,241 samples, 0.18%)</title><rect x="1183.3" y="117" width="2.1" height="15.0" fill="rgb(251,44,54)" rx="2" ry="2" />
<text  x="1186.34" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (1,354,432 samples, 0.16%)</title><rect x="100.4" y="197" width="1.9" height="15.0" fill="rgb(249,223,40)" rx="2" ry="2" />
<text  x="103.36" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:409:AddressListExclude (1,494,195 samples, 0.18%)</title><rect x="16.8" y="229" width="2.1" height="15.0" fill="rgb(205,59,24)" rx="2" ry="2" />
<text  x="19.83" y="239.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (5,085,853 samples, 0.60%)</title><rect x="1166.7" y="117" width="7.1" height="15.0" fill="rgb(206,129,3)" rx="2" ry="2" />
<text  x="1169.68" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:113:supernet (1,300,997 samples, 0.15%)</title><rect x="181.0" y="165" width="1.9" height="15.0" fill="rgb(216,199,41)" rx="2" ry="2" />
<text  x="184.04" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:202:summarize_address_range (19,195,143 samples, 2.28%)</title><rect x="226.8" y="133" width="26.9" height="15.0" fill="rgb(228,122,25)" rx="2" ry="2" />
<text  x="229.84" y="143.5" >i..</text>
</g>
<g >
<title>copy.py:132:deepcopy (14,475,139 samples, 1.72%)</title><rect x="21.2" y="229" width="20.3" height="15.0" fill="rgb(213,97,26)" rx="2" ry="2" />
<text  x="24.25" y="239.5" ></text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (77,987,314 samples, 9.25%)</title><rect x="421.9" y="197" width="109.1" height="15.0" fill="rgb(223,14,19)" rx="2" ry="2" />
<text  x="424.87" y="207.5" >nacaddr.py:58..</text>
</g>
<g >
<title>aclgenerator.py:272:__init__ (1,442,657 samples, 0.17%)</title><rect x="13.3" y="261" width="2.0" height="15.0" fill="rgb(245,99,6)" rx="2" ry="2" />
<text  x="16.26" y="271.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'issuperset' of 'frozenset' objects&gt; (1,712,673 samples, 0.20%)</title><rect x="1115.9" y="69" width="2.4" height="15.0" fill="rgb(208,229,52)" rx="2" ry="2" />
<text  x="1118.90" y="79.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (1,400,529 samples, 0.17%)</title><rect x="1148.7" y="69" width="2.0" height="15.0" fill="rgb(246,228,41)" rx="2" ry="2" />
<text  x="1151.73" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (6,951,541 samples, 0.82%)</title><rect x="331.6" y="101" width="9.7" height="15.0" fill="rgb(243,47,2)" rx="2" ry="2" />
<text  x="334.59" y="111.5" ></text>
</g>
<g >
<title>lex.py:305:token (2,620,582 samples, 0.31%)</title><rect x="1038.1" y="213" width="3.7" height="15.0" fill="rgb(207,55,7)" rx="2" ry="2" />
<text  x="1041.11" y="223.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (14,338,145 samples, 1.70%)</title><rect x="41.5" y="245" width="20.1" height="15.0" fill="rgb(240,81,54)" rx="2" ry="2" />
<text  x="44.50" y="255.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (6,614,439 samples, 0.78%)</title><rect x="1176.2" y="133" width="9.2" height="15.0" fill="rgb(225,144,54)" rx="2" ry="2" />
<text  x="1179.17" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (20,047,569 samples, 2.38%)</title><rect x="729.1" y="165" width="28.0" height="15.0" fill="rgb(205,7,26)" rx="2" ry="2" />
<text  x="732.06" y="175.5" >i..</text>
</g>
<g >
<title>nacaddr.py:164:__deepcopy__ (1,181,247 samples, 0.14%)</title><rect x="37.7" y="213" width="1.6" height="15.0" fill="rgb(229,73,10)" rx="2" ry="2" />
<text  x="40.66" y="223.5" ></text>
</g>
<g >
<title>lex.py:831:validate_module (1,333,201 samples, 0.16%)</title><rect x="1031.7" y="197" width="1.8" height="15.0" fill="rgb(225,80,53)" rx="2" ry="2" />
<text  x="1034.66" y="207.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (3,683,694 samples, 0.44%)</title><rect x="87.6" y="181" width="5.2" height="15.0" fill="rgb(219,142,28)" rx="2" ry="2" />
<text  x="90.62" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1872:version (898,775 samples, 0.11%)</title><rect x="1015.5" y="165" width="1.2" height="15.0" fill="rgb(205,41,4)" rx="2" ry="2" />
<text  x="1018.47" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (913,098 samples, 0.11%)</title><rect x="107.4" y="197" width="1.3" height="15.0" fill="rgb(252,130,37)" rx="2" ry="2" />
<text  x="110.41" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:613:__str__ (3,502,004 samples, 0.42%)</title><rect x="1099.8" y="85" width="4.9" height="15.0" fill="rgb(248,175,53)" rx="2" ry="2" />
<text  x="1102.80" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (3,218,732 samples, 0.38%)</title><rect x="118.4" y="197" width="4.6" height="15.0" fill="rgb(213,53,35)" rx="2" ry="2" />
<text  x="121.45" y="207.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (2,597,221 samples, 0.31%)</title><rect x="1050.8" y="117" width="3.6" height="15.0" fill="rgb(209,190,16)" rx="2" ry="2" />
<text  x="1053.79" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (12,377,461 samples, 1.47%)</title><rect x="1120.0" y="133" width="17.3" height="15.0" fill="rgb(234,6,2)" rx="2" ry="2" />
<text  x="1123.01" y="143.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'extend' of 'list' objects&gt; (87,857,998 samples, 10.42%)</title><rect x="220.2" y="181" width="123.0" height="15.0" fill="rgb(240,25,28)" rx="2" ry="2" />
<text  x="223.25" y="191.5" >~:0:&lt;method 'ex..</text>
</g>
<g >
<title>ipaddress.py:186:_count_righthand_zero_bits (2,809,938 samples, 0.33%)</title><rect x="237.0" y="117" width="3.9" height="15.0" fill="rgb(232,139,1)" rx="2" ry="2" />
<text  x="239.99" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:158:supernet_of (8,771,109 samples, 1.04%)</title><rect x="182.9" y="165" width="12.2" height="15.0" fill="rgb(246,224,36)" rx="2" ry="2" />
<text  x="185.86" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (1,937,136 samples, 0.23%)</title><rect x="1164.0" y="69" width="2.7" height="15.0" fill="rgb(227,13,45)" rx="2" ry="2" />
<text  x="1166.96" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (1,597,904 samples, 0.19%)</title><rect x="151.9" y="165" width="2.2" height="15.0" fill="rgb(221,61,53)" rx="2" ry="2" />
<text  x="154.89" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (4,728,402 samples, 0.56%)</title><rect x="1073.2" y="101" width="6.6" height="15.0" fill="rgb(226,115,11)" rx="2" ry="2" />
<text  x="1076.19" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (11,154,056 samples, 1.32%)</title><rect x="155.4" y="181" width="15.6" height="15.0" fill="rgb(213,213,15)" rx="2" ry="2" />
<text  x="158.39" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (1,393,062 samples, 0.17%)</title><rect x="1183.5" y="101" width="1.9" height="15.0" fill="rgb(230,112,51)" rx="2" ry="2" />
<text  x="1186.47" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1809:_string_from_ip_int (2,371,379 samples, 0.28%)</title><rect x="302.1" y="53" width="3.3" height="15.0" fill="rgb(234,87,19)" rx="2" ry="2" />
<text  x="305.12" y="63.5" ></text>
</g>
<g >
<title>nacaddr.py:86:supernet_of (1,086,014 samples, 0.13%)</title><rect x="13.8" y="213" width="1.5" height="15.0" fill="rgb(244,73,42)" rx="2" ry="2" />
<text  x="16.76" y="223.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (3,378,227 samples, 0.40%)</title><rect x="32.9" y="197" width="4.8" height="15.0" fill="rgb(252,178,22)" rx="2" ry="2" />
<text  x="35.93" y="207.5" ></text>
</g>
<g >
<title>juniper.py:956:__str__ (399,820,397 samples, 47.42%)</title><rect x="349.6" y="261" width="559.5" height="15.0" fill="rgb(229,3,23)" rx="2" ry="2" />
<text  x="352.55" y="271.5" >juniper.py:956:__str__</text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (5,023,822 samples, 0.60%)</title><rect x="1097.7" y="101" width="7.0" height="15.0" fill="rgb(217,154,29)" rx="2" ry="2" />
<text  x="1100.67" y="111.5" ></text>
</g>
<g >
<title>juniper.py:668:&lt;listcomp&gt; (1,284,460 samples, 0.15%)</title><rect x="388.0" y="213" width="1.8" height="15.0" fill="rgb(228,53,44)" rx="2" ry="2" />
<text  x="391.01" y="223.5" ></text>
</g>
<g >
<title>iptables.py:545:_GenerateAddressStatement (1,749,378 samples, 0.21%)</title><rect x="347.1" y="213" width="2.5" height="15.0" fill="rgb(247,17,13)" rx="2" ry="2" />
<text  x="350.10" y="223.5" ></text>
</g>
<g >
<title>policy.py:1862:p_target (9,031,593 samples, 1.07%)</title><rect x="1041.8" y="213" width="12.6" height="15.0" fill="rgb(250,61,53)" rx="2" ry="2" />
<text  x="1044.78" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (1,064,590 samples, 0.13%)</title><rect x="276.6" y="101" width="1.5" height="15.0" fill="rgb(224,97,14)" rx="2" ry="2" />
<text  x="279.62" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:386:RemoveAddressFromList (92,736,935 samples, 11.00%)</title><rect x="213.4" y="197" width="129.8" height="15.0" fill="rgb(221,191,45)" rx="2" ry="2" />
<text  x="216.42" y="207.5" >nacaddr.py:386:R..</text>
</g>
<g >
<title>naming.py:441:GetNetAddr (10,303,989 samples, 1.22%)</title><rect x="1175.6" y="165" width="14.4" height="15.0" fill="rgb(238,174,33)" rx="2" ry="2" />
<text  x="1178.58" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (2,030,887 samples, 0.24%)</title><rect x="1176.7" y="117" width="2.9" height="15.0" fill="rgb(206,222,26)" rx="2" ry="2" />
<text  x="1179.73" y="127.5" ></text>
</g>
<g >
<title>policy.py:1013:AddObject (85,876,260 samples, 10.19%)</title><rect x="1055.2" y="197" width="120.2" height="15.0" fill="rgb(236,212,19)" rx="2" ry="2" />
<text  x="1058.18" y="207.5" >policy.py:1013..</text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (2,651,770 samples, 0.31%)</title><rect x="283.2" y="101" width="3.7" height="15.0" fill="rgb(232,224,36)" rx="2" ry="2" />
<text  x="286.18" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (50,700,516 samples, 6.01%)</title><rect x="957.7" y="181" width="71.0" height="15.0" fill="rgb(241,197,22)" rx="2" ry="2" />
<text  x="960.74" y="191.5" >nacaddr...</text>
</g>
<g >
<title>naming.py:455:GetNet (10,301,891 samples, 1.22%)</title><rect x="1175.6" y="149" width="14.4" height="15.0" fill="rgb(208,9,42)" rx="2" ry="2" />
<text  x="1178.58" y="159.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (3,408,473 samples, 0.40%)</title><rect x="1075.0" y="85" width="4.8" height="15.0" fill="rgb(206,197,40)" rx="2" ry="2" />
<text  x="1078.04" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (2,572,139 samples, 0.31%)</title><rect x="1179.7" y="101" width="3.6" height="15.0" fill="rgb(214,93,33)" rx="2" ry="2" />
<text  x="1182.74" y="111.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.isinstance&gt; (3,593,417 samples, 0.43%)</title><rect x="752.1" y="149" width="5.0" height="15.0" fill="rgb(215,189,35)" rx="2" ry="2" />
<text  x="755.08" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:699:hostmask (2,091,844 samples, 0.25%)</title><rect x="162.2" y="165" width="2.9" height="15.0" fill="rgb(234,136,10)" rx="2" ry="2" />
<text  x="165.15" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (3,210,284 samples, 0.38%)</title><rect x="272.1" y="69" width="4.5" height="15.0" fill="rgb(233,8,42)" rx="2" ry="2" />
<text  x="275.13" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (941,202 samples, 0.11%)</title><rect x="1152.5" y="85" width="1.3" height="15.0" fill="rgb(218,90,21)" rx="2" ry="2" />
<text  x="1155.49" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:707:with_prefixlen (1,987,651 samples, 0.24%)</title><rect x="102.6" y="229" width="2.8" height="15.0" fill="rgb(213,58,51)" rx="2" ry="2" />
<text  x="105.61" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (8,011,638 samples, 0.95%)</title><rect x="1001.1" y="149" width="11.2" height="15.0" fill="rgb(237,39,6)" rx="2" ry="2" />
<text  x="1004.10" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (6,935,604 samples, 0.82%)</title><rect x="1144.1" y="117" width="9.7" height="15.0" fill="rgb(229,63,7)" rx="2" ry="2" />
<text  x="1147.10" y="127.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (2,760,126 samples, 0.33%)</title><rect x="198.4" y="149" width="3.9" height="15.0" fill="rgb(220,56,20)" rx="2" ry="2" />
<text  x="201.40" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (1,766,213 samples, 0.21%)</title><rect x="108.7" y="197" width="2.5" height="15.0" fill="rgb(235,127,37)" rx="2" ry="2" />
<text  x="111.69" y="207.5" ></text>
</g>
<g >
<title>policy.py:405:__init__ (10,454,171 samples, 1.24%)</title><rect x="1175.4" y="197" width="14.6" height="15.0" fill="rgb(247,21,10)" rx="2" ry="2" />
<text  x="1178.37" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (1,184,200 samples, 0.14%)</title><rect x="1083.8" y="101" width="1.7" height="15.0" fill="rgb(248,4,23)" rx="2" ry="2" />
<text  x="1086.82" y="111.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (3,738,410 samples, 0.44%)</title><rect x="92.8" y="213" width="5.2" height="15.0" fill="rgb(212,69,0)" rx="2" ry="2" />
<text  x="95.77" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (7,493,472 samples, 0.89%)</title><rect x="466.2" y="165" width="10.5" height="15.0" fill="rgb(220,137,24)" rx="2" ry="2" />
<text  x="469.19" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:550:__int__ (1,315,434 samples, 0.16%)</title><rect x="150.1" y="165" width="1.8" height="15.0" fill="rgb(245,130,16)" rx="2" ry="2" />
<text  x="153.05" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:346:CollapseAddrList (1,068,349 samples, 0.13%)</title><rect x="1029.5" y="229" width="1.5" height="15.0" fill="rgb(253,104,18)" rx="2" ry="2" />
<text  x="1032.52" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (1,286,483 samples, 0.15%)</title><rect x="285.1" y="85" width="1.8" height="15.0" fill="rgb(224,73,52)" rx="2" ry="2" />
<text  x="288.09" y="95.5" ></text>
</g>
<g >
<title>nacaddr.py:409:AddressListExclude (155,638,866 samples, 18.46%)</title><rect x="125.4" y="213" width="217.8" height="15.0" fill="rgb(221,205,41)" rx="2" ry="2" />
<text  x="128.39" y="223.5" >nacaddr.py:409:AddressListEx..</text>
</g>
<g >
<title>ipaddress.py:585:__str__ (926,772 samples, 0.11%)</title><rect x="348.3" y="197" width="1.3" height="15.0" fill="rgb(253,193,24)" rx="2" ry="2" />
<text  x="351.25" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:346:CollapseAddrList (30,308,524 samples, 3.59%)</title><rect x="171.0" y="197" width="42.4" height="15.0" fill="rgb(214,103,29)" rx="2" ry="2" />
<text  x="174.00" y="207.5" >nac..</text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (1,167,829 samples, 0.14%)</title><rect x="1135.7" y="101" width="1.6" height="15.0" fill="rgb(247,222,50)" rx="2" ry="2" />
<text  x="1138.69" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:667:__hash__ (991,377 samples, 0.12%)</title><rect x="388.4" y="197" width="1.4" height="15.0" fill="rgb(243,217,42)" rx="2" ry="2" />
<text  x="391.42" y="207.5" ></text>
</g>
<g >
<title>functools.py:103:_ge_from_lt (31,779,660 samples, 3.77%)</title><rect x="712.6" y="181" width="44.5" height="15.0" fill="rgb(218,99,38)" rx="2" ry="2" />
<text  x="715.64" y="191.5" >func..</text>
</g>
<g >
<title>functools.py:103:_ge_from_lt (1,290,751 samples, 0.15%)</title><rect x="930.2" y="165" width="1.8" height="15.0" fill="rgb(235,209,54)" rx="2" ry="2" />
<text  x="933.19" y="175.5" ></text>
</g>
<g >
<title>policy.py:197:_TranslateTerms (6,251,835 samples, 0.74%)</title><rect x="1041.8" y="165" width="8.8" height="15.0" fill="rgb(246,97,46)" rx="2" ry="2" />
<text  x="1044.80" y="175.5" ></text>
</g>
<g >
<title>junipersrx.py:630:_BuildAddressBook (1,356,226 samples, 0.16%)</title><rect x="13.4" y="229" width="1.9" height="15.0" fill="rgb(211,65,34)" rx="2" ry="2" />
<text  x="16.38" y="239.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (1,330,641 samples, 0.16%)</title><rect x="80.1" y="197" width="1.9" height="15.0" fill="rgb(240,84,14)" rx="2" ry="2" />
<text  x="83.10" y="207.5" ></text>
</g>
<g >
<title>naming.py:455:GetNet (3,270,431 samples, 0.39%)</title><rect x="1185.4" y="133" width="4.6" height="15.0" fill="rgb(235,202,33)" rx="2" ry="2" />
<text  x="1188.42" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (1,384,664 samples, 0.16%)</title><rect x="935.2" y="165" width="2.0" height="15.0" fill="rgb(216,66,24)" rx="2" ry="2" />
<text  x="938.25" y="175.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (1,623,279 samples, 0.19%)</title><rect x="1026.4" y="149" width="2.3" height="15.0" fill="rgb(248,142,33)" rx="2" ry="2" />
<text  x="1029.42" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:164:__deepcopy__ (1,304,460 samples, 0.15%)</title><rect x="98.0" y="213" width="1.8" height="15.0" fill="rgb(215,15,35)" rx="2" ry="2" />
<text  x="101.01" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:92:__deepcopy__ (1,565,172 samples, 0.19%)</title><rect x="39.3" y="213" width="2.2" height="15.0" fill="rgb(231,151,40)" rx="2" ry="2" />
<text  x="42.31" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (14,329,021 samples, 1.70%)</title><rect x="323.2" y="133" width="20.0" height="15.0" fill="rgb(210,44,46)" rx="2" ry="2" />
<text  x="326.15" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (34,091,881 samples, 4.04%)</title><rect x="854.8" y="181" width="47.7" height="15.0" fill="rgb(228,136,26)" rx="2" ry="2" />
<text  x="857.79" y="191.5" >ipad..</text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (1,139,438 samples, 0.14%)</title><rect x="1149.1" y="53" width="1.6" height="15.0" fill="rgb(232,85,10)" rx="2" ry="2" />
<text  x="1152.09" y="63.5" ></text>
</g>
<g >
<title>ipaddress.py:1257:version (3,363,468 samples, 0.40%)</title><rect x="506.6" y="181" width="4.7" height="15.0" fill="rgb(229,93,37)" rx="2" ry="2" />
<text  x="509.60" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (11,937,472 samples, 1.42%)</title><rect x="489.9" y="165" width="16.7" height="15.0" fill="rgb(209,134,45)" rx="2" ry="2" />
<text  x="492.90" y="175.5" ></text>
</g>
<g >
<title>policy.py:2527:ParsePolicy (113,601,960 samples, 13.47%)</title><rect x="1031.0" y="261" width="159.0" height="15.0" fill="rgb(254,201,23)" rx="2" ry="2" />
<text  x="1034.01" y="271.5" >policy.py:2527:Parse..</text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (1,297,132 samples, 0.15%)</title><rect x="933.4" y="149" width="1.8" height="15.0" fill="rgb(250,190,44)" rx="2" ry="2" />
<text  x="936.43" y="159.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (14,456,118 samples, 1.71%)</title><rect x="82.0" y="229" width="20.3" height="15.0" fill="rgb(235,9,50)" rx="2" ry="2" />
<text  x="85.02" y="239.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (3,665,068 samples, 0.43%)</title><rect x="72.7" y="197" width="5.1" height="15.0" fill="rgb(247,68,37)" rx="2" ry="2" />
<text  x="75.67" y="207.5" ></text>
</g>
<g >
<title>yacc.py:325:parse (111,803,823 samples, 13.26%)</title><rect x="1033.5" y="245" width="156.5" height="15.0" fill="rgb(220,118,32)" rx="2" ry="2" />
<text  x="1036.53" y="255.5" >yacc.py:325:parse</text>
</g>
<g >
<title>ipaddress.py:57:ip_network (16,879,210 samples, 2.00%)</title><rect x="1065.1" y="133" width="23.6" height="15.0" fill="rgb(232,114,38)" rx="2" ry="2" />
<text  x="1068.06" y="143.5" >i..</text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (1,134,863 samples, 0.13%)</title><rect x="191.9" y="117" width="1.5" height="15.0" fill="rgb(248,156,8)" rx="2" ry="2" />
<text  x="194.85" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (11,249,803 samples, 1.33%)</title><rect x="305.4" y="101" width="15.8" height="15.0" fill="rgb(215,0,10)" rx="2" ry="2" />
<text  x="308.44" y="111.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (5,873,800 samples, 0.70%)</title><rect x="1042.3" y="101" width="8.3" height="15.0" fill="rgb(219,149,15)" rx="2" ry="2" />
<text  x="1045.33" y="111.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (3,683,451 samples, 0.44%)</title><rect x="52.2" y="181" width="5.2" height="15.0" fill="rgb(235,139,32)" rx="2" ry="2" />
<text  x="55.23" y="191.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (2,418,713 samples, 0.29%)</title><rect x="527.6" y="165" width="3.4" height="15.0" fill="rgb(250,43,36)" rx="2" ry="2" />
<text  x="530.63" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1830:&lt;listcomp&gt; (975,696 samples, 0.12%)</title><rect x="304.1" y="37" width="1.3" height="15.0" fill="rgb(208,158,30)" rx="2" ry="2" />
<text  x="307.07" y="47.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (5,815,931 samples, 0.69%)</title><rect x="297.3" y="101" width="8.1" height="15.0" fill="rgb(207,115,8)" rx="2" ry="2" />
<text  x="300.30" y="111.5" ></text>
</g>
<g >
<title>copy.py:268:_reconstruct (3,385,790 samples, 0.40%)</title><rect x="32.9" y="213" width="4.8" height="15.0" fill="rgb(208,223,5)" rx="2" ry="2" />
<text  x="35.92" y="223.5" ></text>
</g>
<g >
<title>cisco.py:641:__str__ (2,595,017 samples, 0.31%)</title><rect x="15.3" y="245" width="3.6" height="15.0" fill="rgb(232,68,31)" rx="2" ry="2" />
<text  x="18.29" y="255.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (6,604,468 samples, 0.78%)</title><rect x="113.7" y="229" width="9.3" height="15.0" fill="rgb(221,218,9)" rx="2" ry="2" />
<text  x="116.71" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (9,717,620 samples, 1.15%)</title><rect x="1104.7" y="101" width="13.6" height="15.0" fill="rgb(216,66,11)" rx="2" ry="2" />
<text  x="1107.70" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (7,092,950 samples, 0.84%)</title><rect x="185.2" y="149" width="9.9" height="15.0" fill="rgb(250,5,7)" rx="2" ry="2" />
<text  x="188.21" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:670:__contains__ (11,734,038 samples, 1.39%)</title><rect x="139.0" y="181" width="16.4" height="15.0" fill="rgb(233,219,18)" rx="2" ry="2" />
<text  x="141.97" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (9,135,216 samples, 1.08%)</title><rect x="240.9" y="117" width="12.8" height="15.0" fill="rgb(235,149,21)" rx="2" ry="2" />
<text  x="243.92" y="127.5" ></text>
</g>
<g >
<title>aclgen.py:166:RenderFile (841,958,744 samples, 99.86%)</title><rect x="11.7" y="277" width="1178.3" height="15.0" fill="rgb(249,130,12)" rx="2" ry="2" />
<text  x="14.67" y="287.5" >aclgen.py:166:RenderFile</text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (4,050,698 samples, 0.48%)</title><rect x="207.8" y="181" width="5.6" height="15.0" fill="rgb(226,180,23)" rx="2" ry="2" />
<text  x="210.75" y="191.5" ></text>
</g>
<g >
<title>lex.py:728:validate_rules (1,409,618 samples, 0.17%)</title><rect x="1031.6" y="213" width="1.9" height="15.0" fill="rgb(234,216,5)" rx="2" ry="2" />
<text  x="1034.56" y="223.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (3,674,000 samples, 0.44%)</title><rect x="47.1" y="181" width="5.1" height="15.0" fill="rgb(218,41,48)" rx="2" ry="2" />
<text  x="50.07" y="191.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (3,369,558 samples, 0.40%)</title><rect x="28.2" y="197" width="4.7" height="15.0" fill="rgb(222,22,33)" rx="2" ry="2" />
<text  x="31.21" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (19,540,564 samples, 2.32%)</title><rect x="259.5" y="133" width="27.4" height="15.0" fill="rgb(216,51,45)" rx="2" ry="2" />
<text  x="262.54" y="143.5" >i..</text>
</g>
<g >
<title>junipersrx.py:850:__str__ (1,656,448 samples, 0.20%)</title><rect x="1028.7" y="261" width="2.3" height="15.0" fill="rgb(219,77,32)" rx="2" ry="2" />
<text  x="1031.69" y="271.5" ></text>
</g>
<g >
<title>nacaddr.py:92:__deepcopy__ (1,706,585 samples, 0.20%)</title><rect x="59.2" y="197" width="2.4" height="15.0" fill="rgb(231,21,14)" rx="2" ry="2" />
<text  x="62.18" y="207.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (4,328,541 samples, 0.51%)</title><rect x="1129.6" y="85" width="6.1" height="15.0" fill="rgb(213,171,52)" rx="2" ry="2" />
<text  x="1132.64" y="95.5" ></text>
</g>
<g >
<title>nacaddr.py:152:subnet_of (100,900,102 samples, 11.97%)</title><rect x="389.8" y="213" width="141.2" height="15.0" fill="rgb(245,67,51)" rx="2" ry="2" />
<text  x="392.81" y="223.5" >nacaddr.py:152:su..</text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.isinstance&gt; (2,253,884 samples, 0.27%)</title><rect x="503.4" y="149" width="3.2" height="15.0" fill="rgb(207,106,2)" rx="2" ry="2" />
<text  x="506.45" y="159.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (14,573,281 samples, 1.73%)</title><rect x="61.6" y="245" width="20.4" height="15.0" fill="rgb(214,3,36)" rx="2" ry="2" />
<text  x="64.57" y="255.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (4,714,417 samples, 0.56%)</title><rect x="1111.7" y="85" width="6.6" height="15.0" fill="rgb(251,126,45)" rx="2" ry="2" />
<text  x="1114.70" y="95.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (4,231,650 samples, 0.50%)</title><rect x="165.1" y="165" width="5.9" height="15.0" fill="rgb(225,168,0)" rx="2" ry="2" />
<text  x="168.08" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:146:__init__ (9,196,952 samples, 1.09%)</title><rect x="1153.8" y="117" width="12.9" height="15.0" fill="rgb(226,58,42)" rx="2" ry="2" />
<text  x="1156.80" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:1809:_string_from_ip_int (2,754,564 samples, 0.33%)</title><rect x="355.8" y="197" width="3.8" height="15.0" fill="rgb(213,139,37)" rx="2" ry="2" />
<text  x="358.77" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (1,169,213 samples, 0.14%)</title><rect x="1181.7" y="85" width="1.6" height="15.0" fill="rgb(221,34,0)" rx="2" ry="2" />
<text  x="1184.70" y="95.5" ></text>
</g>
<g >
<title>aclgen.py:501:Run (843,152,779 samples, 100.00%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(205,79,48)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >aclgen.py:501:Run</text>
</g>
<g >
<title>iptables.py:809:__str__ (161,912,348 samples, 19.20%)</title><rect x="123.0" y="261" width="226.6" height="15.0" fill="rgb(208,78,4)" rx="2" ry="2" />
<text  x="125.95" y="271.5" >iptables.py:809:__str__</text>
</g>
<g >
<title>all (843,152,951 samples, 100%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(209,96,50)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>copy.py:268:_reconstruct (3,673,273 samples, 0.44%)</title><rect x="72.7" y="213" width="5.1" height="15.0" fill="rgb(230,182,22)" rx="2" ry="2" />
<text  x="75.66" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (6,206,198 samples, 0.74%)</title><rect x="114.3" y="213" width="8.7" height="15.0" fill="rgb(228,91,16)" rx="2" ry="2" />
<text  x="117.27" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (8,552,267 samples, 1.01%)</title><rect x="1016.7" y="165" width="12.0" height="15.0" fill="rgb(210,219,17)" rx="2" ry="2" />
<text  x="1019.73" y="175.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (3,649,129 samples, 0.43%)</title><rect x="82.5" y="197" width="5.1" height="15.0" fill="rgb(222,176,8)" rx="2" ry="2" />
<text  x="85.51" y="207.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (3,735,845 samples, 0.44%)</title><rect x="82.4" y="213" width="5.2" height="15.0" fill="rgb(220,193,45)" rx="2" ry="2" />
<text  x="85.39" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:146:__init__ (2,693,057 samples, 0.32%)</title><rect x="1179.6" y="117" width="3.7" height="15.0" fill="rgb(222,188,14)" rx="2" ry="2" />
<text  x="1182.57" y="127.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.isinstance&gt; (6,029,902 samples, 0.72%)</title><rect x="828.7" y="149" width="8.5" height="15.0" fill="rgb(206,223,40)" rx="2" ry="2" />
<text  x="831.74" y="159.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (3,621,722 samples, 0.43%)</title><rect x="67.6" y="213" width="5.0" height="15.0" fill="rgb(219,167,28)" rx="2" ry="2" />
<text  x="70.56" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:146:__init__ (22,382,668 samples, 2.65%)</title><rect x="1088.7" y="133" width="31.3" height="15.0" fill="rgb(217,0,17)" rx="2" ry="2" />
<text  x="1091.68" y="143.5" >na..</text>
</g>
<g >
<title>ipaddress.py:1257:version (13,704,245 samples, 1.63%)</title><rect x="587.3" y="197" width="19.2" height="15.0" fill="rgb(252,111,6)" rx="2" ry="2" />
<text  x="590.30" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:360:get_mixed_type_key (1,086,008 samples, 0.13%)</title><rect x="218.7" y="165" width="1.5" height="15.0" fill="rgb(208,153,15)" rx="2" ry="2" />
<text  x="221.73" y="175.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'issuperset' of 'frozenset' objects&gt; (952,148 samples, 0.11%)</title><rect x="1078.5" y="53" width="1.3" height="15.0" fill="rgb(231,75,12)" rx="2" ry="2" />
<text  x="1081.48" y="63.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (3,684,321 samples, 0.44%)</title><rect x="87.6" y="197" width="5.2" height="15.0" fill="rgb(247,0,40)" rx="2" ry="2" />
<text  x="90.62" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (8,107,143 samples, 0.96%)</title><rect x="925.8" y="181" width="11.4" height="15.0" fill="rgb(237,133,42)" rx="2" ry="2" />
<text  x="928.84" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (211,516,334 samples, 25.09%)</title><rect x="606.5" y="197" width="296.0" height="15.0" fill="rgb(254,210,0)" rx="2" ry="2" />
<text  x="609.48" y="207.5" >nacaddr.py:58:_is_subnet_of</text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (5,473,932 samples, 0.65%)</title><rect x="269.0" y="101" width="7.6" height="15.0" fill="rgb(218,74,32)" rx="2" ry="2" />
<text  x="271.96" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:613:__str__ (955,636 samples, 0.11%)</title><rect x="281.8" y="85" width="1.4" height="15.0" fill="rgb(233,201,37)" rx="2" ry="2" />
<text  x="284.84" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (1,111,268 samples, 0.13%)</title><rect x="1087.1" y="85" width="1.6" height="15.0" fill="rgb(209,69,50)" rx="2" ry="2" />
<text  x="1090.13" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:1872:version (3,582,784 samples, 0.42%)</title><rect x="849.8" y="181" width="5.0" height="15.0" fill="rgb(248,39,22)" rx="2" ry="2" />
<text  x="852.77" y="191.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (74,333,979 samples, 8.82%)</title><rect x="18.9" y="261" width="104.1" height="15.0" fill="rgb(228,45,53)" rx="2" ry="2" />
<text  x="21.92" y="271.5" >copy.py:132:..</text>
</g>
<g >
<title>nacaddr.py:164:__deepcopy__ (6,360,790 samples, 0.75%)</title><rect x="102.3" y="245" width="8.9" height="15.0" fill="rgb(213,228,27)" rx="2" ry="2" />
<text  x="105.26" y="255.5" ></text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (3,267,096 samples, 0.39%)</title><rect x="203.2" y="149" width="4.6" height="15.0" fill="rgb(216,21,54)" rx="2" ry="2" />
<text  x="206.18" y="159.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (2,320,226 samples, 0.28%)</title><rect x="119.7" y="181" width="3.3" height="15.0" fill="rgb(227,205,51)" rx="2" ry="2" />
<text  x="122.71" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1872:version (1,339,189 samples, 0.16%)</title><rect x="511.3" y="181" width="1.9" height="15.0" fill="rgb(233,157,39)" rx="2" ry="2" />
<text  x="514.31" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (919,597 samples, 0.11%)</title><rect x="1079.8" y="101" width="1.3" height="15.0" fill="rgb(213,122,15)" rx="2" ry="2" />
<text  x="1082.81" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:613:__str__ (5,032,658 samples, 0.60%)</title><rect x="352.6" y="229" width="7.0" height="15.0" fill="rgb(228,133,51)" rx="2" ry="2" />
<text  x="355.58" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (11,578,091 samples, 1.37%)</title><rect x="1121.1" y="117" width="16.2" height="15.0" fill="rgb(219,98,39)" rx="2" ry="2" />
<text  x="1124.13" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (1,256,670 samples, 0.15%)</title><rect x="59.8" y="165" width="1.8" height="15.0" fill="rgb(249,78,51)" rx="2" ry="2" />
<text  x="62.81" y="175.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'issuperset' of 'frozenset' objects&gt; (1,102,273 samples, 0.13%)</title><rect x="275.1" y="53" width="1.5" height="15.0" fill="rgb(217,25,6)" rx="2" ry="2" />
<text  x="278.08" y="63.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'match' of 're.Pattern' objects&gt; (922,549 samples, 0.11%)</title><rect x="1040.5" y="197" width="1.3" height="15.0" fill="rgb(214,218,1)" rx="2" ry="2" />
<text  x="1043.49" y="207.5" ></text>
</g>
<g >
<title>policy.py:1290:cleanup (5,887,728 samples, 0.70%)</title><rect x="1042.3" y="133" width="8.3" height="15.0" fill="rgb(227,33,42)" rx="2" ry="2" />
<text  x="1045.31" y="143.5" ></text>
</g>
<g >
<title>iptables.py:114:__str__ (161,874,659 samples, 19.20%)</title><rect x="123.0" y="245" width="226.6" height="15.0" fill="rgb(254,17,46)" rx="2" ry="2" />
<text  x="126.01" y="255.5" >iptables.py:114:__str__</text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (3,336,319 samples, 0.40%)</title><rect x="23.5" y="197" width="4.7" height="15.0" fill="rgb(249,140,29)" rx="2" ry="2" />
<text  x="26.52" y="207.5" ></text>
</g>
<g >
<title>policy.py:197:_TranslateTerms (2,764,376 samples, 0.33%)</title><rect x="1050.6" y="181" width="3.8" height="15.0" fill="rgb(210,140,41)" rx="2" ry="2" />
<text  x="1053.55" y="191.5" ></text>
</g>
<g >
<title>junipersrx.py:630:_BuildAddressBook (81,657,407 samples, 9.68%)</title><rect x="914.4" y="213" width="114.3" height="15.0" fill="rgb(249,6,52)" rx="2" ry="2" />
<text  x="917.41" y="223.5" >junipersrx.py:..</text>
</g>
<g >
<title>copy.py:268:_reconstruct (3,691,697 samples, 0.44%)</title><rect x="52.2" y="197" width="5.2" height="15.0" fill="rgb(242,58,48)" rx="2" ry="2" />
<text  x="55.21" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (54,974,263 samples, 6.52%)</title><rect x="1060.4" y="149" width="76.9" height="15.0" fill="rgb(253,223,21)" rx="2" ry="2" />
<text  x="1063.39" y="159.5" >nacaddr...</text>
</g>
<g >
<title>functools.py:98:_le_from_lt (924,821 samples, 0.11%)</title><rect x="206.5" y="133" width="1.3" height="15.0" fill="rgb(234,83,17)" rx="2" ry="2" />
<text  x="209.46" y="143.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (14,327,623 samples, 1.70%)</title><rect x="41.5" y="229" width="20.1" height="15.0" fill="rgb(244,27,16)" rx="2" ry="2" />
<text  x="44.52" y="239.5" ></text>
</g>
<g >
<title>functools.py:98:_le_from_lt (2,032,966 samples, 0.24%)</title><rect x="190.6" y="133" width="2.8" height="15.0" fill="rgb(218,75,46)" rx="2" ry="2" />
<text  x="193.60" y="143.5" ></text>
</g>
<g >
<title>policy.py:190:AddFilter (2,765,643 samples, 0.33%)</title><rect x="1050.6" y="197" width="3.8" height="15.0" fill="rgb(212,67,26)" rx="2" ry="2" />
<text  x="1053.55" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:647:__lt__ (1,001,495 samples, 0.12%)</title><rect x="1049.1" y="85" width="1.5" height="15.0" fill="rgb(251,213,28)" rx="2" ry="2" />
<text  x="1052.15" y="95.5" ></text>
</g>
<g >
<title>aclgenerator.py:272:__init__ (85,452,915 samples, 10.13%)</title><rect x="909.1" y="245" width="119.6" height="15.0" fill="rgb(254,60,5)" rx="2" ry="2" />
<text  x="912.10" y="255.5" >aclgenerator.p..</text>
</g>
<g >
<title>juniper.py:653:_MinimizePrefixes (387,904,558 samples, 46.01%)</title><rect x="359.6" y="229" width="542.9" height="15.0" fill="rgb(241,29,52)" rx="2" ry="2" />
<text  x="362.62" y="239.5" >juniper.py:653:_MinimizePrefixes</text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (1,168,893 samples, 0.14%)</title><rect x="1177.9" y="101" width="1.7" height="15.0" fill="rgb(247,99,7)" rx="2" ry="2" />
<text  x="1180.93" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:264:_SafeToMerge (3,733,142 samples, 0.44%)</title><rect x="197.0" y="165" width="5.3" height="15.0" fill="rgb(216,86,19)" rx="2" ry="2" />
<text  x="200.04" y="175.5" ></text>
</g>
<g >
<title>juniper.py:687:_Comment (2,165,679 samples, 0.26%)</title><rect x="902.5" y="229" width="3.0" height="15.0" fill="rgb(235,136,49)" rx="2" ry="2" />
<text  x="905.50" y="239.5" ></text>
</g>
<g >
<title>junipersrx.py:301:__init__ (85,453,156 samples, 10.13%)</title><rect x="909.1" y="261" width="119.6" height="15.0" fill="rgb(219,53,41)" rx="2" ry="2" />
<text  x="912.10" y="271.5" >junipersrx.py:..</text>
</g>
<g >
<title>nacaddr.py:74:__init__ (1,226,500 samples, 0.15%)</title><rect x="39.8" y="197" width="1.7" height="15.0" fill="rgb(211,120,11)" rx="2" ry="2" />
<text  x="42.79" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (3,521,601 samples, 0.42%)</title><rect x="1130.8" y="69" width="4.9" height="15.0" fill="rgb(235,141,40)" rx="2" ry="2" />
<text  x="1133.77" y="79.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (3,414,362 samples, 0.40%)</title><rect x="215.5" y="181" width="4.7" height="15.0" fill="rgb(220,110,53)" rx="2" ry="2" />
<text  x="218.47" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (6,272,899 samples, 0.74%)</title><rect x="278.1" y="117" width="8.8" height="15.0" fill="rgb(230,85,27)" rx="2" ry="2" />
<text  x="281.11" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:164:__deepcopy__ (1,287,973 samples, 0.15%)</title><rect x="57.4" y="197" width="1.8" height="15.0" fill="rgb(216,52,15)" rx="2" ry="2" />
<text  x="60.38" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:146:__init__ (25,911,756 samples, 3.07%)</title><rect x="286.9" y="133" width="36.3" height="15.0" fill="rgb(231,34,21)" rx="2" ry="2" />
<text  x="289.89" y="143.5" >nac..</text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (887,411 samples, 0.11%)</title><rect x="212.2" y="165" width="1.2" height="15.0" fill="rgb(249,15,54)" rx="2" ry="2" />
<text  x="215.18" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (4,076,854 samples, 0.48%)</title><rect x="335.6" y="69" width="5.7" height="15.0" fill="rgb(253,123,34)" rx="2" ry="2" />
<text  x="338.61" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:553:__eq__ (3,917,133 samples, 0.46%)</title><rect x="787.0" y="165" width="5.5" height="15.0" fill="rgb(218,125,37)" rx="2" ry="2" />
<text  x="790.00" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (22,588,717 samples, 2.68%)</title><rect x="1142.2" y="133" width="31.6" height="15.0" fill="rgb(231,181,22)" rx="2" ry="2" />
<text  x="1145.18" y="143.5" >na..</text>
</g>
<g >
<title>ipaddress.py:1872:version (5,709,925 samples, 0.68%)</title><rect x="413.9" y="197" width="8.0" height="15.0" fill="rgb(223,213,10)" rx="2" ry="2" />
<text  x="416.88" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:553:__eq__ (982,649 samples, 0.12%)</title><rect x="999.7" y="149" width="1.4" height="15.0" fill="rgb(225,218,9)" rx="2" ry="2" />
<text  x="1002.72" y="159.5" ></text>
</g>
<g >
<title>functools.py:98:_le_from_lt (21,384,503 samples, 2.54%)</title><rect x="476.7" y="181" width="29.9" height="15.0" fill="rgb(250,68,14)" rx="2" ry="2" />
<text  x="479.67" y="191.5" >fu..</text>
</g>
<g >
<title>ipaddress.py:585:__str__ (1,083,913 samples, 0.13%)</title><rect x="112.2" y="213" width="1.5" height="15.0" fill="rgb(229,202,1)" rx="2" ry="2" />
<text  x="115.19" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (63,954,027 samples, 7.59%)</title><rect x="253.7" y="149" width="89.5" height="15.0" fill="rgb(216,10,16)" rx="2" ry="2" />
<text  x="256.70" y="159.5" >nacaddr.py..</text>
</g>
<g >
<title>ipaddress.py:683:overlaps (25,644,421 samples, 3.04%)</title><rect x="135.1" y="197" width="35.9" height="15.0" fill="rgb(222,142,52)" rx="2" ry="2" />
<text  x="138.11" y="207.5" >ipa..</text>
</g>
<g >
<title>functools.py:103:_ge_from_lt (11,878,746 samples, 1.41%)</title><rect x="460.1" y="181" width="16.6" height="15.0" fill="rgb(247,51,44)" rx="2" ry="2" />
<text  x="463.05" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:707:with_prefixlen (1,399,220 samples, 0.17%)</title><rect x="111.8" y="229" width="1.9" height="15.0" fill="rgb(238,214,20)" rx="2" ry="2" />
<text  x="114.75" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (1,211,444 samples, 0.14%)</title><rect x="193.4" y="133" width="1.7" height="15.0" fill="rgb(238,146,45)" rx="2" ry="2" />
<text  x="196.44" y="143.5" ></text>
</g>
<g >
<title>junipersrx.py:336:_TranslatePolicy (83,884,927 samples, 9.95%)</title><rect x="911.3" y="229" width="117.4" height="15.0" fill="rgb(218,171,19)" rx="2" ry="2" />
<text  x="914.30" y="239.5" >junipersrx.py:..</text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (3,691,162 samples, 0.44%)</title><rect x="47.0" y="197" width="5.2" height="15.0" fill="rgb(254,215,12)" rx="2" ry="2" />
<text  x="50.05" y="207.5" ></text>
</g>
<g >
<title>functools.py:98:_le_from_lt (2,323,652 samples, 0.28%)</title><rect x="932.0" y="165" width="3.2" height="15.0" fill="rgb(208,89,20)" rx="2" ry="2" />
<text  x="934.99" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (1,115,609 samples, 0.13%)</title><rect x="133.6" y="197" width="1.5" height="15.0" fill="rgb(252,178,16)" rx="2" ry="2" />
<text  x="136.55" y="207.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.isinstance&gt; (903,535 samples, 0.11%)</title><rect x="154.1" y="165" width="1.3" height="15.0" fill="rgb(217,160,46)" rx="2" ry="2" />
<text  x="157.13" y="175.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.isinstance&gt; (1,343,164 samples, 0.16%)</title><rect x="474.8" y="149" width="1.9" height="15.0" fill="rgb(224,150,12)" rx="2" ry="2" />
<text  x="477.80" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:1830:&lt;listcomp&gt; (1,133,356 samples, 0.13%)</title><rect x="358.0" y="181" width="1.6" height="15.0" fill="rgb(228,169,38)" rx="2" ry="2" />
<text  x="361.04" y="191.5" ></text>
</g>
</g>
</svg>

<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="358" onload="init(evt)" viewBox="0 0 1200 358" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="358.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >"2020-07-27-12:19:31--04:00 cProfile"</text>
<text id="details" x="10.00" y="341" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="341" > </text>
<g id="frames">
<g >
<title>ipaddress.py:1631:_ip_int_from_string (2,718,422 samples, 0.52%)</title><rect x="803.6" y="85" width="6.2" height="15.0" fill="rgb(214,122,39)" rx="2" ry="2" />
<text  x="806.60" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:1883:__init__ (767,186 samples, 0.15%)</title><rect x="809.8" y="85" width="1.7" height="15.0" fill="rgb(240,140,49)" rx="2" ry="2" />
<text  x="812.77" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (737,623 samples, 0.14%)</title><rect x="235.5" y="53" width="1.6" height="15.0" fill="rgb(217,65,20)" rx="2" ry="2" />
<text  x="238.47" y="63.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (5,381,541 samples, 1.03%)</title><rect x="46.8" y="229" width="12.2" height="15.0" fill="rgb(212,229,15)" rx="2" ry="2" />
<text  x="49.81" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:588:__hash__ (986,027 samples, 0.19%)</title><rect x="140.8" y="165" width="2.2" height="15.0" fill="rgb(230,56,16)" rx="2" ry="2" />
<text  x="143.81" y="175.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (1,330,235 samples, 0.26%)</title><rect x="51.7" y="197" width="3.0" height="15.0" fill="rgb(236,15,34)" rx="2" ry="2" />
<text  x="54.68" y="207.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (5,280,601 samples, 1.02%)</title><rect x="22.9" y="213" width="12.0" height="15.0" fill="rgb(247,149,32)" rx="2" ry="2" />
<text  x="25.92" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (854,632 samples, 0.16%)</title><rect x="92.4" y="181" width="2.0" height="15.0" fill="rgb(209,15,52)" rx="2" ry="2" />
<text  x="95.42" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:166:subnet_of (38,740,082 samples, 7.45%)</title><rect x="303.2" y="197" width="87.9" height="15.0" fill="rgb(246,94,49)" rx="2" ry="2" />
<text  x="306.21" y="207.5" >nacaddr.py..</text>
</g>
<g >
<title>nacaddr.py:30:IP (41,048,546 samples, 7.89%)</title><rect x="744.6" y="133" width="93.1" height="15.0" fill="rgb(212,98,25)" rx="2" ry="2" />
<text  x="747.58" y="143.5" >nacaddr.py:..</text>
</g>
<g >
<title>nacaddr.py:153:__init__ (1,196,950 samples, 0.23%)</title><rect x="893.3" y="101" width="2.8" height="15.0" fill="rgb(250,102,24)" rx="2" ry="2" />
<text  x="896.34" y="111.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'acquire' of '_thread.lock' objects&gt; (124,993,574 samples, 24.03%)</title><rect x="906.5" y="245" width="283.5" height="15.0" fill="rgb(216,100,44)" rx="2" ry="2" />
<text  x="909.49" y="255.5" >~:0:&lt;method 'acquire' of '_thread.lock..</text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (1,979,232 samples, 0.38%)</title><rect x="164.6" y="133" width="4.5" height="15.0" fill="rgb(209,211,23)" rx="2" ry="2" />
<text  x="167.57" y="143.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (3,024,187 samples, 0.58%)</title><rect x="827.7" y="69" width="6.8" height="15.0" fill="rgb(218,31,40)" rx="2" ry="2" />
<text  x="830.65" y="79.5" ></text>
</g>
<g >
<title>iputils.py:7:exclude_address (14,329,704 samples, 2.75%)</title><rect x="192.1" y="133" width="32.5" height="15.0" fill="rgb(205,9,49)" rx="2" ry="2" />
<text  x="195.10" y="143.5" >ip..</text>
</g>
<g >
<title>nacaddr.py:74:__init__ (3,041,252 samples, 0.58%)</title><rect x="246.2" y="117" width="6.9" height="15.0" fill="rgb(231,1,40)" rx="2" ry="2" />
<text  x="249.17" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:1872:version (3,513,378 samples, 0.68%)</title><rect x="328.1" y="181" width="7.9" height="15.0" fill="rgb(226,195,20)" rx="2" ry="2" />
<text  x="331.06" y="191.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (2,986,796 samples, 0.57%)</title><rect x="131.5" y="149" width="6.7" height="15.0" fill="rgb(243,74,0)" rx="2" ry="2" />
<text  x="134.47" y="159.5" ></text>
</g>
<g >
<title>policy.py:172:__init__ (4,968,728 samples, 0.96%)</title><rect x="720.3" y="181" width="11.3" height="15.0" fill="rgb(205,195,38)" rx="2" ry="2" />
<text  x="723.30" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:588:__hash__ (1,456,538 samples, 0.28%)</title><rect x="165.8" y="117" width="3.3" height="15.0" fill="rgb(232,102,6)" rx="2" ry="2" />
<text  x="168.76" y="127.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.isinstance&gt; (683,098 samples, 0.13%)</title><rect x="117.5" y="149" width="1.6" height="15.0" fill="rgb(217,176,35)" rx="2" ry="2" />
<text  x="120.54" y="159.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (1,150,304 samples, 0.22%)</title><rect x="29.6" y="181" width="2.7" height="15.0" fill="rgb(244,167,47)" rx="2" ry="2" />
<text  x="32.64" y="191.5" ></text>
</g>
<g >
<title>copy.py:268:_reconstruct (1,390,920 samples, 0.27%)</title><rect x="42.4" y="181" width="3.1" height="15.0" fill="rgb(238,91,40)" rx="2" ry="2" />
<text  x="45.39" y="191.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'issuperset' of 'frozenset' objects&gt; (988,320 samples, 0.19%)</title><rect x="771.4" y="37" width="2.3" height="15.0" fill="rgb(212,144,49)" rx="2" ry="2" />
<text  x="774.43" y="47.5" ></text>
</g>
<g >
<title>naming.py:442:GetNetAddr (8,094,449 samples, 1.56%)</title><rect x="886.8" y="149" width="18.4" height="15.0" fill="rgb(228,221,47)" rx="2" ry="2" />
<text  x="889.80" y="159.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (1,146,881 samples, 0.22%)</title><rect x="27.0" y="165" width="2.6" height="15.0" fill="rgb(240,57,5)" rx="2" ry="2" />
<text  x="30.01" y="175.5" ></text>
</g>
<g >
<title>juniper.py:956:__str__ (164,214,241 samples, 31.56%)</title><rect x="260.7" y="245" width="372.5" height="15.0" fill="rgb(227,51,44)" rx="2" ry="2" />
<text  x="263.74" y="255.5" >juniper.py:956:__str__</text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (591,877 samples, 0.11%)</title><rect x="79.5" y="181" width="1.4" height="15.0" fill="rgb(216,137,54)" rx="2" ry="2" />
<text  x="82.54" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:93:supernet_of (2,097,043 samples, 0.40%)</title><rect x="169.1" y="149" width="4.7" height="15.0" fill="rgb(226,62,15)" rx="2" ry="2" />
<text  x="172.06" y="159.5" ></text>
</g>
<g >
<title>policy.py:1279:AddressCleanup (2,176,292 samples, 0.42%)</title><rect x="731.8" y="149" width="5.0" height="15.0" fill="rgb(213,101,27)" rx="2" ry="2" />
<text  x="734.84" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:699:hostmask (2,279,682 samples, 0.44%)</title><rect x="610.3" y="149" width="5.2" height="15.0" fill="rgb(247,91,38)" rx="2" ry="2" />
<text  x="613.35" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (4,100,886 samples, 0.79%)</title><rect x="825.2" y="85" width="9.3" height="15.0" fill="rgb(253,134,30)" rx="2" ry="2" />
<text  x="828.21" y="95.5" ></text>
</g>
<g >
<title>cisco.py:1232:__str__ (2,073,755 samples, 0.40%)</title><rect x="15.7" y="245" width="4.7" height="15.0" fill="rgb(252,88,23)" rx="2" ry="2" />
<text  x="18.66" y="255.5" ></text>
</g>
<g >
<title>naming.py:456:GetNet (916,156 samples, 0.18%)</title><rect x="882.9" y="117" width="2.1" height="15.0" fill="rgb(213,41,46)" rx="2" ry="2" />
<text  x="885.92" y="127.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (890,018 samples, 0.17%)</title><rect x="701.2" y="133" width="2.1" height="15.0" fill="rgb(247,160,43)" rx="2" ry="2" />
<text  x="704.24" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (1,111,541 samples, 0.21%)</title><rect x="785.6" y="69" width="2.5" height="15.0" fill="rgb(244,196,38)" rx="2" ry="2" />
<text  x="788.59" y="79.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'match' of 're.Pattern' objects&gt; (730,966 samples, 0.14%)</title><rect x="718.6" y="181" width="1.7" height="15.0" fill="rgb(215,99,53)" rx="2" ry="2" />
<text  x="721.62" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (5,989,562 samples, 1.15%)</title><rect x="211.0" y="101" width="13.6" height="15.0" fill="rgb(251,35,2)" rx="2" ry="2" />
<text  x="214.02" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (16,932,656 samples, 3.25%)</title><rect x="844.5" y="117" width="38.4" height="15.0" fill="rgb(229,211,53)" rx="2" ry="2" />
<text  x="847.51" y="127.5" >nac..</text>
</g>
<g >
<title>ipaddress.py:647:__lt__ (756,694 samples, 0.15%)</title><rect x="729.9" y="69" width="1.7" height="15.0" fill="rgb(235,46,41)" rx="2" ry="2" />
<text  x="732.86" y="79.5" ></text>
</g>
<g >
<title>nacaddr.py:99:__deepcopy__ (2,696,384 samples, 0.52%)</title><rect x="74.8" y="229" width="6.1" height="15.0" fill="rgb(251,85,31)" rx="2" ry="2" />
<text  x="77.77" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (1,472,863 samples, 0.28%)</title><rect x="77.5" y="197" width="3.4" height="15.0" fill="rgb(233,125,22)" rx="2" ry="2" />
<text  x="80.54" y="207.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (26,680,066 samples, 5.13%)</title><rect x="20.4" y="245" width="60.5" height="15.0" fill="rgb(214,182,7)" rx="2" ry="2" />
<text  x="23.37" y="255.5" >copy.p..</text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (1,296,146 samples, 0.25%)</title><rect x="806.8" y="69" width="3.0" height="15.0" fill="rgb(213,131,54)" rx="2" ry="2" />
<text  x="809.83" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (908,402 samples, 0.17%)</title><rect x="727.8" y="69" width="2.1" height="15.0" fill="rgb(223,158,48)" rx="2" ry="2" />
<text  x="730.80" y="79.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (1,384,695 samples, 0.27%)</title><rect x="63.4" y="165" width="3.2" height="15.0" fill="rgb(241,200,3)" rx="2" ry="2" />
<text  x="66.45" y="175.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (1,346,994 samples, 0.26%)</title><rect x="48.6" y="197" width="3.1" height="15.0" fill="rgb(235,197,35)" rx="2" ry="2" />
<text  x="51.62" y="207.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (4,666,028 samples, 0.90%)</title><rect x="721.0" y="85" width="10.6" height="15.0" fill="rgb(219,131,12)" rx="2" ry="2" />
<text  x="723.99" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (878,269 samples, 0.17%)</title><rect x="901.6" y="85" width="2.0" height="15.0" fill="rgb(213,11,25)" rx="2" ry="2" />
<text  x="904.57" y="95.5" ></text>
</g>
<g >
<title>lex.py:305:token (2,167,369 samples, 0.42%)</title><rect x="715.4" y="197" width="4.9" height="15.0" fill="rgb(230,158,47)" rx="2" ry="2" />
<text  x="718.36" y="207.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'match' of 're.Pattern' objects&gt; (762,951 samples, 0.15%)</title><rect x="707.5" y="165" width="1.7" height="15.0" fill="rgb(216,143,10)" rx="2" ry="2" />
<text  x="710.50" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:360:get_mixed_type_key (1,011,227 samples, 0.19%)</title><rect x="176.1" y="149" width="2.2" height="15.0" fill="rgb(253,20,33)" rx="2" ry="2" />
<text  x="179.05" y="159.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (1,328,031 samples, 0.26%)</title><rect x="51.7" y="165" width="3.0" height="15.0" fill="rgb(214,150,23)" rx="2" ry="2" />
<text  x="54.68" y="175.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (1,384,101 samples, 0.27%)</title><rect x="42.4" y="165" width="3.1" height="15.0" fill="rgb(218,138,31)" rx="2" ry="2" />
<text  x="45.40" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:859:_get_networks_key (825,459 samples, 0.16%)</title><rect x="725.9" y="53" width="1.9" height="15.0" fill="rgb(212,40,44)" rx="2" ry="2" />
<text  x="728.92" y="63.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (5,297,135 samples, 1.02%)</title><rect x="47.0" y="213" width="12.0" height="15.0" fill="rgb(221,217,14)" rx="2" ry="2" />
<text  x="50.00" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (12,550,626 samples, 2.41%)</title><rect x="224.6" y="133" width="28.5" height="15.0" fill="rgb(223,120,29)" rx="2" ry="2" />
<text  x="227.60" y="143.5" >na..</text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (798,584 samples, 0.15%)</title><rect x="650.9" y="149" width="1.8" height="15.0" fill="rgb(230,15,35)" rx="2" ry="2" />
<text  x="653.90" y="159.5" ></text>
</g>
<g >
<title>policy.py:1013:AddObject (8,120,081 samples, 1.56%)</title><rect x="886.7" y="165" width="18.5" height="15.0" fill="rgb(205,142,49)" rx="2" ry="2" />
<text  x="889.74" y="175.5" ></text>
</g>
<g >
<title>junipersrx.py:687:_GenerateAddressBook (852,766 samples, 0.16%)</title><rect x="703.6" y="229" width="2.0" height="15.0" fill="rgb(226,76,41)" rx="2" ry="2" />
<text  x="706.64" y="239.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (5,281,184 samples, 1.02%)</title><rect x="59.1" y="213" width="12.0" height="15.0" fill="rgb(212,34,38)" rx="2" ry="2" />
<text  x="62.09" y="223.5" ></text>
</g>
<g >
<title>iptables.py:809:__str__ (79,296,211 samples, 15.24%)</title><rect x="80.9" y="245" width="179.8" height="15.0" fill="rgb(211,226,36)" rx="2" ry="2" />
<text  x="83.88" y="255.5" >iptables.py:809:__str__</text>
</g>
<g >
<title>copy.py:268:_reconstruct (1,349,369 samples, 0.26%)</title><rect x="54.7" y="197" width="3.1" height="15.0" fill="rgb(209,156,11)" rx="2" ry="2" />
<text  x="57.73" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1883:__init__ (657,919 samples, 0.13%)</title><rect x="788.1" y="85" width="1.5" height="15.0" fill="rgb(251,129,32)" rx="2" ry="2" />
<text  x="791.11" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:550:__int__ (953,377 samples, 0.18%)</title><rect x="112.6" y="149" width="2.2" height="15.0" fill="rgb(234,44,18)" rx="2" ry="2" />
<text  x="115.63" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (4,760,773 samples, 0.92%)</title><rect x="872.1" y="101" width="10.8" height="15.0" fill="rgb(211,9,1)" rx="2" ry="2" />
<text  x="875.12" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (1,550,759 samples, 0.30%)</title><rect x="170.3" y="133" width="3.5" height="15.0" fill="rgb(219,69,49)" rx="2" ry="2" />
<text  x="173.30" y="143.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (1,285,687 samples, 0.25%)</title><rect x="48.8" y="181" width="2.9" height="15.0" fill="rgb(225,26,38)" rx="2" ry="2" />
<text  x="51.76" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (2,727,713 samples, 0.52%)</title><rect x="231.0" y="101" width="6.1" height="15.0" fill="rgb(216,112,48)" rx="2" ry="2" />
<text  x="233.96" y="111.5" ></text>
</g>
<g >
<title>lex.py:862:lex (1,420,272 samples, 0.27%)</title><rect x="706.0" y="229" width="3.2" height="15.0" fill="rgb(221,225,15)" rx="2" ry="2" />
<text  x="709.01" y="239.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (3,242,388 samples, 0.62%)</title><rect x="173.8" y="165" width="7.4" height="15.0" fill="rgb(226,89,22)" rx="2" ry="2" />
<text  x="176.82" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (1,658,648 samples, 0.32%)</title><rect x="202.2" y="101" width="3.7" height="15.0" fill="rgb(248,67,7)" rx="2" ry="2" />
<text  x="205.17" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (1,453,407 samples, 0.28%)</title><rect x="221.3" y="85" width="3.3" height="15.0" fill="rgb(207,187,30)" rx="2" ry="2" />
<text  x="224.31" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (654,202 samples, 0.13%)</title><rect x="251.6" y="53" width="1.5" height="15.0" fill="rgb(240,178,15)" rx="2" ry="2" />
<text  x="254.59" y="63.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (1,209,727 samples, 0.23%)</title><rect x="114.8" y="149" width="2.7" height="15.0" fill="rgb(252,148,2)" rx="2" ry="2" />
<text  x="117.79" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:1830:&lt;listcomp&gt; (687,694 samples, 0.13%)</title><rect x="270.9" y="165" width="1.5" height="15.0" fill="rgb(242,180,29)" rx="2" ry="2" />
<text  x="273.87" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1257:version (1,325,189 samples, 0.25%)</title><rect x="689.6" y="149" width="3.0" height="15.0" fill="rgb(219,189,29)" rx="2" ry="2" />
<text  x="692.59" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (2,391,529 samples, 0.46%)</title><rect x="75.5" y="213" width="5.4" height="15.0" fill="rgb(243,11,21)" rx="2" ry="2" />
<text  x="78.46" y="223.5" ></text>
</g>
<g >
<title>naming.py:456:GetNet (2,584,747 samples, 0.50%)</title><rect x="899.3" y="117" width="5.9" height="15.0" fill="rgb(240,219,51)" rx="2" ry="2" />
<text  x="902.30" y="127.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'issuperset' of 'frozenset' objects&gt; (876,547 samples, 0.17%)</title><rect x="832.5" y="37" width="2.0" height="15.0" fill="rgb(244,99,45)" rx="2" ry="2" />
<text  x="835.52" y="47.5" ></text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (13,880,393 samples, 2.67%)</title><rect x="671.8" y="165" width="31.5" height="15.0" fill="rgb(246,219,9)" rx="2" ry="2" />
<text  x="674.77" y="175.5" >na..</text>
</g>
<g >
<title>nacaddr.py:360:CollapseAddrList (556,963 samples, 0.11%)</title><rect x="704.3" y="213" width="1.3" height="15.0" fill="rgb(250,24,30)" rx="2" ry="2" />
<text  x="707.31" y="223.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (1,390,488 samples, 0.27%)</title><rect x="39.2" y="181" width="3.2" height="15.0" fill="rgb(208,185,33)" rx="2" ry="2" />
<text  x="42.23" y="191.5" ></text>
</g>
<g >
<title>policy.py:1279:AddressCleanup (4,712,171 samples, 0.91%)</title><rect x="720.9" y="133" width="10.7" height="15.0" fill="rgb(224,168,48)" rx="2" ry="2" />
<text  x="723.88" y="143.5" ></text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (2,120,474 samples, 0.41%)</title><rect x="647.9" y="165" width="4.8" height="15.0" fill="rgb(211,33,18)" rx="2" ry="2" />
<text  x="650.90" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:360:get_mixed_type_key (883,859 samples, 0.17%)</title><rect x="185.3" y="149" width="2.0" height="15.0" fill="rgb(210,225,44)" rx="2" ry="2" />
<text  x="188.33" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (2,764,603 samples, 0.53%)</title><rect x="156.5" y="133" width="6.2" height="15.0" fill="rgb(229,198,3)" rx="2" ry="2" />
<text  x="159.47" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:699:hostmask (764,265 samples, 0.15%)</title><rect x="386.1" y="149" width="1.7" height="15.0" fill="rgb(246,37,41)" rx="2" ry="2" />
<text  x="389.09" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (1,430,185 samples, 0.27%)</title><rect x="896.1" y="101" width="3.2" height="15.0" fill="rgb(253,8,0)" rx="2" ry="2" />
<text  x="899.06" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (716,340 samples, 0.14%)</title><rect x="244.5" y="85" width="1.7" height="15.0" fill="rgb(211,24,46)" rx="2" ry="2" />
<text  x="247.55" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:683:overlaps (19,350,358 samples, 3.72%)</title><rect x="94.4" y="181" width="43.8" height="15.0" fill="rgb(254,183,37)" rx="2" ry="2" />
<text  x="97.35" y="191.5" >ipad..</text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (1,691,628 samples, 0.33%)</title><rect x="879.1" y="69" width="3.8" height="15.0" fill="rgb(205,1,7)" rx="2" ry="2" />
<text  x="882.08" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (1,907,338 samples, 0.37%)</title><rect x="853.7" y="69" width="4.3" height="15.0" fill="rgb(229,229,31)" rx="2" ry="2" />
<text  x="856.67" y="79.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (1,385,169 samples, 0.27%)</title><rect x="63.4" y="181" width="3.2" height="15.0" fill="rgb(206,190,19)" rx="2" ry="2" />
<text  x="66.45" y="191.5" ></text>
</g>
<g >
<title>aclgen.py:166:RenderFile (393,542,586 samples, 75.65%)</title><rect x="12.5" y="261" width="892.7" height="15.0" fill="rgb(207,185,37)" rx="2" ry="2" />
<text  x="15.54" y="271.5" >aclgen.py:166:RenderFile</text>
</g>
<g >
<title>ipaddress.py:585:__str__ (662,754 samples, 0.13%)</title><rect x="259.2" y="181" width="1.5" height="15.0" fill="rgb(252,116,33)" rx="2" ry="2" />
<text  x="262.23" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:153:__init__ (1,501,122 samples, 0.29%)</title><rect x="71.4" y="213" width="3.4" height="15.0" fill="rgb(250,174,54)" rx="2" ry="2" />
<text  x="74.36" y="223.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (1,373,012 samples, 0.26%)</title><rect x="39.3" y="165" width="3.1" height="15.0" fill="rgb(210,141,51)" rx="2" ry="2" />
<text  x="42.27" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (7,566,444 samples, 1.45%)</title><rect x="373.9" y="165" width="17.2" height="15.0" fill="rgb(238,5,54)" rx="2" ry="2" />
<text  x="376.91" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:395:SortAddrList (4,669,351 samples, 0.90%)</title><rect x="721.0" y="101" width="10.6" height="15.0" fill="rgb(244,172,19)" rx="2" ry="2" />
<text  x="723.98" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (4,527,517 samples, 0.87%)</title><rect x="230.1" y="117" width="10.3" height="15.0" fill="rgb(231,8,18)" rx="2" ry="2" />
<text  x="233.13" y="127.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (796,913 samples, 0.15%)</title><rect x="251.3" y="69" width="1.8" height="15.0" fill="rgb(221,89,40)" rx="2" ry="2" />
<text  x="254.26" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (2,331,247 samples, 0.45%)</title><rect x="782.8" y="85" width="5.3" height="15.0" fill="rgb(231,138,17)" rx="2" ry="2" />
<text  x="785.82" y="95.5" ></text>
</g>
<g >
<title>threading.py:1000:join (124,993,588 samples, 24.03%)</title><rect x="906.5" y="277" width="283.5" height="15.0" fill="rgb(227,165,30)" rx="2" ry="2" />
<text  x="909.49" y="287.5" >threading.py:1000:join</text>
</g>
<g >
<title>copy.py:268:_reconstruct (5,314,120 samples, 1.02%)</title><rect x="59.0" y="229" width="12.1" height="15.0" fill="rgb(220,151,49)" rx="2" ry="2" />
<text  x="62.02" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (7,087,369 samples, 1.36%)</title><rect x="847.0" y="101" width="16.1" height="15.0" fill="rgb(228,0,27)" rx="2" ry="2" />
<text  x="850.01" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (593,773 samples, 0.11%)</title><rect x="187.3" y="149" width="1.4" height="15.0" fill="rgb(235,39,2)" rx="2" ry="2" />
<text  x="190.34" y="159.5" ></text>
</g>
<g >
<title>naming.py:456:GetNet (65,304,365 samples, 12.55%)</title><rect x="738.3" y="149" width="148.1" height="15.0" fill="rgb(249,169,54)" rx="2" ry="2" />
<text  x="741.29" y="159.5" >naming.py:456:GetNet</text>
</g>
<g >
<title>ipaddress.py:859:_get_networks_key (617,310 samples, 0.12%)</title><rect x="176.9" y="133" width="1.4" height="15.0" fill="rgb(241,131,29)" rx="2" ry="2" />
<text  x="179.94" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (1,264,593 samples, 0.24%)</title><rect x="896.4" y="85" width="2.9" height="15.0" fill="rgb(230,21,25)" rx="2" ry="2" />
<text  x="899.43" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (1,080,637 samples, 0.21%)</title><rect x="250.6" y="85" width="2.5" height="15.0" fill="rgb(221,193,46)" rx="2" ry="2" />
<text  x="253.62" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:1268:__init__ (887,480 samples, 0.17%)</title><rect x="773.7" y="85" width="2.0" height="15.0" fill="rgb(224,0,7)" rx="2" ry="2" />
<text  x="776.67" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (3,340,888 samples, 0.64%)</title><rect x="864.5" y="85" width="7.6" height="15.0" fill="rgb(236,150,11)" rx="2" ry="2" />
<text  x="867.54" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:1257:version (1,913,823 samples, 0.37%)</title><rect x="667.4" y="165" width="4.4" height="15.0" fill="rgb(224,57,12)" rx="2" ry="2" />
<text  x="670.43" y="175.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (1,340,544 samples, 0.26%)</title><rect x="60.4" y="181" width="3.0" height="15.0" fill="rgb(210,73,22)" rx="2" ry="2" />
<text  x="63.40" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:278:_SafeToMerge (2,785,369 samples, 0.54%)</title><rect x="162.7" y="149" width="6.4" height="15.0" fill="rgb(251,67,43)" rx="2" ry="2" />
<text  x="165.74" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (614,111 samples, 0.12%)</title><rect x="836.3" y="85" width="1.4" height="15.0" fill="rgb(240,168,34)" rx="2" ry="2" />
<text  x="839.30" y="95.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'match' of 're.Pattern' objects&gt; (624,508 samples, 0.12%)</title><rect x="885.0" y="133" width="1.4" height="15.0" fill="rgb(221,73,3)" rx="2" ry="2" />
<text  x="888.00" y="143.5" ></text>
</g>
<g >
<title>junipersrx.py:301:__init__ (30,885,081 samples, 5.94%)</title><rect x="633.2" y="245" width="70.1" height="15.0" fill="rgb(222,71,26)" rx="2" ry="2" />
<text  x="636.20" y="255.5" >juniper..</text>
</g>
<g >
<title>ipaddress.py:360:get_mixed_type_key (1,352,200 samples, 0.26%)</title><rect x="724.7" y="69" width="3.1" height="15.0" fill="rgb(242,27,32)" rx="2" ry="2" />
<text  x="727.73" y="79.5" ></text>
</g>
<g >
<title>aclgen.py:501:Run (395,243,044 samples, 75.97%)</title><rect x="10.0" y="277" width="896.5" height="15.0" fill="rgb(238,168,8)" rx="2" ry="2" />
<text  x="13.02" y="287.5" >aclgen.py:501:Run</text>
</g>
<g >
<title>nacaddr.py:99:__deepcopy__ (558,270 samples, 0.11%)</title><rect x="45.5" y="181" width="1.3" height="15.0" fill="rgb(228,128,10)" rx="2" ry="2" />
<text  x="48.54" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (572,984 samples, 0.11%)</title><rect x="890.5" y="69" width="1.3" height="15.0" fill="rgb(218,163,36)" rx="2" ry="2" />
<text  x="893.51" y="79.5" ></text>
</g>
<g >
<title>nacaddr.py:93:supernet_of (22,283,190 samples, 4.28%)</title><rect x="652.7" y="181" width="50.6" height="15.0" fill="rgb(220,35,12)" rx="2" ry="2" />
<text  x="655.71" y="191.5" >nacad..</text>
</g>
<g >
<title>nacaddr.py:172:supernet_of (3,954,110 samples, 0.76%)</title><rect x="153.8" y="149" width="8.9" height="15.0" fill="rgb(215,49,6)" rx="2" ry="2" />
<text  x="156.77" y="159.5" ></text>
</g>
<g >
<title>aclgen.py:464:WriteFiles (587,000 samples, 0.11%)</title><rect x="905.2" y="261" width="1.3" height="15.0" fill="rgb(247,193,15)" rx="2" ry="2" />
<text  x="908.16" y="271.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (674,523 samples, 0.13%)</title><rect x="891.8" y="85" width="1.5" height="15.0" fill="rgb(242,202,47)" rx="2" ry="2" />
<text  x="894.81" y="95.5" ></text>
</g>
<g >
<title>yacc.py:325:parse (86,382,863 samples, 16.60%)</title><rect x="709.2" y="229" width="196.0" height="15.0" fill="rgb(223,66,54)" rx="2" ry="2" />
<text  x="712.23" y="239.5" >yacc.py:325:parse</text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (4,269,958 samples, 0.82%)</title><rect x="848.3" y="85" width="9.7" height="15.0" fill="rgb(235,112,8)" rx="2" ry="2" />
<text  x="851.31" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (2,482,617 samples, 0.48%)</title><rect x="828.9" y="53" width="5.6" height="15.0" fill="rgb(232,149,51)" rx="2" ry="2" />
<text  x="831.88" y="63.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (1,024,087 samples, 0.20%)</title><rect x="880.6" y="37" width="2.3" height="15.0" fill="rgb(239,170,49)" rx="2" ry="2" />
<text  x="883.60" y="47.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (1,406,561 samples, 0.27%)</title><rect x="854.8" y="53" width="3.2" height="15.0" fill="rgb(238,139,20)" rx="2" ry="2" />
<text  x="857.80" y="63.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (1,164,945 samples, 0.22%)</title><rect x="29.6" y="197" width="2.7" height="15.0" fill="rgb(211,158,16)" rx="2" ry="2" />
<text  x="32.61" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:120:supernet (564,666 samples, 0.11%)</title><rect x="152.5" y="149" width="1.3" height="15.0" fill="rgb(249,98,24)" rx="2" ry="2" />
<text  x="155.49" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:647:__lt__ (565,885 samples, 0.11%)</title><rect x="179.9" y="149" width="1.3" height="15.0" fill="rgb(253,116,8)" rx="2" ry="2" />
<text  x="182.89" y="159.5" ></text>
</g>
<g >
<title>juniper.py:97:Append (1,947,325 samples, 0.37%)</title><rect x="628.8" y="213" width="4.4" height="15.0" fill="rgb(224,225,48)" rx="2" ry="2" />
<text  x="631.79" y="223.5" ></text>
</g>
<g >
<title>juniper.py:186:__str__ (164,160,931 samples, 31.55%)</title><rect x="260.9" y="229" width="372.3" height="15.0" fill="rgb(218,16,14)" rx="2" ry="2" />
<text  x="263.86" y="239.5" >juniper.py:186:__str__</text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (10,351,333 samples, 1.99%)</title><rect x="753.8" y="101" width="23.5" height="15.0" fill="rgb(241,95,20)" rx="2" ry="2" />
<text  x="756.78" y="111.5" >i..</text>
</g>
<g >
<title>ipaddress.py:57:ip_network (2,129,119 samples, 0.41%)</title><rect x="888.5" y="101" width="4.8" height="15.0" fill="rgb(205,102,16)" rx="2" ry="2" />
<text  x="891.51" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (2,245,339 samples, 0.43%)</title><rect x="858.0" y="85" width="5.1" height="15.0" fill="rgb(233,39,12)" rx="2" ry="2" />
<text  x="860.99" y="95.5" ></text>
</g>
<g >
<title>nacaddr.py:153:__init__ (9,659,037 samples, 1.86%)</title><rect x="789.6" y="117" width="21.9" height="15.0" fill="rgb(213,137,16)" rx="2" ry="2" />
<text  x="792.60" y="127.5" >n..</text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (4,623,813 samples, 0.89%)</title><rect x="763.2" y="85" width="10.5" height="15.0" fill="rgb(209,84,6)" rx="2" ry="2" />
<text  x="766.19" y="95.5" ></text>
</g>
<g >
<title>nacaddr.py:400:RemoveAddressFromList (31,700,019 samples, 6.09%)</title><rect x="181.2" y="181" width="71.9" height="15.0" fill="rgb(254,103,4)" rx="2" ry="2" />
<text  x="184.17" y="191.5" >nacaddr...</text>
</g>
<g >
<title>lex.py:576:validate_all (1,277,552 samples, 0.25%)</title><rect x="706.3" y="213" width="2.9" height="15.0" fill="rgb(223,180,14)" rx="2" ry="2" />
<text  x="709.33" y="223.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (3,409,818 samples, 0.66%)</title><rect x="765.9" y="69" width="7.8" height="15.0" fill="rgb(242,225,3)" rx="2" ry="2" />
<text  x="768.94" y="79.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'extend' of 'list' objects&gt; (28,386,355 samples, 5.46%)</title><rect x="188.7" y="165" width="64.4" height="15.0" fill="rgb(223,114,12)" rx="2" ry="2" />
<text  x="191.69" y="175.5" >~:0:&lt;me..</text>
</g>
<g >
<title>ipaddress.py:670:__contains__ (8,798,299 samples, 1.69%)</title><rect x="99.1" y="165" width="20.0" height="15.0" fill="rgb(245,146,6)" rx="2" ry="2" />
<text  x="102.13" y="175.5" ></text>
</g>
<g >
<title>cisco.py:639:__str__ (2,066,513 samples, 0.40%)</title><rect x="15.7" y="229" width="4.7" height="15.0" fill="rgb(243,116,49)" rx="2" ry="2" />
<text  x="18.68" y="239.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (1,406,505 samples, 0.27%)</title><rect x="66.6" y="197" width="3.2" height="15.0" fill="rgb(245,145,4)" rx="2" ry="2" />
<text  x="69.59" y="207.5" ></text>
</g>
<g >
<title>threading.py:1038:_wait_for_tstate_lock (124,993,586 samples, 24.03%)</title><rect x="906.5" y="261" width="283.5" height="15.0" fill="rgb(205,102,23)" rx="2" ry="2" />
<text  x="909.49" y="271.5" >threading.py:1038:_wait_for_tstate_lock</text>
</g>
<g >
<title>ipaddress.py:613:__str__ (3,563,224 samples, 0.68%)</title><rect x="264.3" y="213" width="8.1" height="15.0" fill="rgb(249,181,50)" rx="2" ry="2" />
<text  x="267.34" y="223.5" ></text>
</g>
<g >
<title>policy.py:190:AddFilter (2,294,676 samples, 0.44%)</title><rect x="731.6" y="181" width="5.2" height="15.0" fill="rgb(217,109,42)" rx="2" ry="2" />
<text  x="734.57" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:300:_CollapseAddrListInternal (13,566,213 samples, 2.61%)</title><rect x="143.0" y="165" width="30.8" height="15.0" fill="rgb(231,93,18)" rx="2" ry="2" />
<text  x="146.04" y="175.5" >na..</text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (961,647 samples, 0.18%)</title><rect x="860.9" y="69" width="2.2" height="15.0" fill="rgb(219,47,24)" rx="2" ry="2" />
<text  x="863.90" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (775,678 samples, 0.15%)</title><rect x="73.0" y="197" width="1.8" height="15.0" fill="rgb(220,155,45)" rx="2" ry="2" />
<text  x="76.01" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1268:__init__ (787,111 samples, 0.15%)</title><rect x="834.5" y="85" width="1.8" height="15.0" fill="rgb(227,187,31)" rx="2" ry="2" />
<text  x="837.51" y="95.5" ></text>
</g>
<g >
<title>nacaddr.py:153:__init__ (2,545,284 samples, 0.49%)</title><rect x="240.4" y="117" width="5.8" height="15.0" fill="rgb(241,67,51)" rx="2" ry="2" />
<text  x="243.40" y="127.5" ></text>
</g>
<g >
<title>junipersrx.py:630:_BuildAddressBook (28,857,131 samples, 5.55%)</title><rect x="637.8" y="197" width="65.5" height="15.0" fill="rgb(214,136,48)" rx="2" ry="2" />
<text  x="640.80" y="207.5" >juniper..</text>
</g>
<g >
<title>nacaddr.py:395:SortAddrList (2,156,515 samples, 0.41%)</title><rect x="731.9" y="117" width="4.9" height="15.0" fill="rgb(219,151,47)" rx="2" ry="2" />
<text  x="734.89" y="127.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (2,154,981 samples, 0.41%)</title><rect x="731.9" y="101" width="4.9" height="15.0" fill="rgb(209,128,15)" rx="2" ry="2" />
<text  x="734.89" y="111.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (1,388,472 samples, 0.27%)</title><rect x="36.1" y="181" width="3.1" height="15.0" fill="rgb(223,58,20)" rx="2" ry="2" />
<text  x="39.08" y="191.5" ></text>
</g>
<g >
<title>policy.py:1290:cleanup (4,675,540 samples, 0.90%)</title><rect x="721.0" y="117" width="10.6" height="15.0" fill="rgb(206,57,11)" rx="2" ry="2" />
<text  x="723.97" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:1872:version (2,255,020 samples, 0.43%)</title><rect x="568.9" y="165" width="5.1" height="15.0" fill="rgb(233,125,36)" rx="2" ry="2" />
<text  x="571.90" y="175.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (1,148,785 samples, 0.22%)</title><rect x="27.0" y="197" width="2.6" height="15.0" fill="rgb(254,72,19)" rx="2" ry="2" />
<text  x="30.00" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1179:_string_from_ip_int (1,024,520 samples, 0.20%)</title><rect x="266.8" y="181" width="2.4" height="15.0" fill="rgb(252,215,21)" rx="2" ry="2" />
<text  x="269.83" y="191.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (5,244,526 samples, 1.01%)</title><rect x="34.9" y="213" width="11.9" height="15.0" fill="rgb(214,115,37)" rx="2" ry="2" />
<text  x="37.91" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (4,701,550 samples, 0.90%)</title><rect x="692.6" y="149" width="10.7" height="15.0" fill="rgb(218,127,2)" rx="2" ry="2" />
<text  x="695.59" y="159.5" ></text>
</g>
<g >
<title>aclgen.py:588:main (520,244,298 samples, 100.00%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(224,67,2)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >aclgen.py:588:main</text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (24,268,005 samples, 4.66%)</title><rect x="336.0" y="181" width="55.1" height="15.0" fill="rgb(224,147,43)" rx="2" ry="2" />
<text  x="339.03" y="191.5" >nacad..</text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (2,799,189 samples, 0.54%)</title><rect x="767.3" y="53" width="6.4" height="15.0" fill="rgb(228,166,35)" rx="2" ry="2" />
<text  x="770.32" y="63.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (1,159,595 samples, 0.22%)</title><rect x="32.3" y="181" width="2.6" height="15.0" fill="rgb(239,151,9)" rx="2" ry="2" />
<text  x="35.26" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (5,086,744 samples, 0.98%)</title><rect x="887.8" y="117" width="11.5" height="15.0" fill="rgb(238,87,20)" rx="2" ry="2" />
<text  x="890.76" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (22,569,507 samples, 4.34%)</title><rect x="574.0" y="165" width="51.2" height="15.0" fill="rgb(223,53,52)" rx="2" ry="2" />
<text  x="577.02" y="175.5" >ipadd..</text>
</g>
<g >
<title>policy.py:197:_TranslateTerms (4,967,517 samples, 0.95%)</title><rect x="720.3" y="149" width="11.3" height="15.0" fill="rgb(206,82,31)" rx="2" ry="2" />
<text  x="723.31" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:1257:version (9,045,143 samples, 1.74%)</title><rect x="449.6" y="181" width="20.6" height="15.0" fill="rgb(251,84,29)" rx="2" ry="2" />
<text  x="452.65" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:99:__deepcopy__ (564,701 samples, 0.11%)</title><rect x="69.8" y="197" width="1.3" height="15.0" fill="rgb(206,1,13)" rx="2" ry="2" />
<text  x="72.79" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:153:__init__ (3,984,384 samples, 0.77%)</title><rect x="863.1" y="101" width="9.0" height="15.0" fill="rgb(205,96,26)" rx="2" ry="2" />
<text  x="866.08" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (679,338 samples, 0.13%)</title><rect x="178.3" y="149" width="1.6" height="15.0" fill="rgb(244,40,25)" rx="2" ry="2" />
<text  x="181.35" y="159.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (1,404,466 samples, 0.27%)</title><rect x="60.3" y="197" width="3.1" height="15.0" fill="rgb(247,143,49)" rx="2" ry="2" />
<text  x="63.26" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (4,209,552 samples, 0.81%)</title><rect x="873.4" y="85" width="9.5" height="15.0" fill="rgb(219,11,28)" rx="2" ry="2" />
<text  x="876.37" y="95.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (4,272,480 samples, 0.82%)</title><rect x="615.5" y="149" width="9.7" height="15.0" fill="rgb(254,99,29)" rx="2" ry="2" />
<text  x="618.52" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:99:__deepcopy__ (541,592 samples, 0.10%)</title><rect x="57.8" y="197" width="1.2" height="15.0" fill="rgb(218,20,41)" rx="2" ry="2" />
<text  x="60.79" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (2,689,124 samples, 0.52%)</title><rect x="247.0" y="101" width="6.1" height="15.0" fill="rgb(207,148,13)" rx="2" ry="2" />
<text  x="249.97" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (17,181,369 samples, 3.30%)</title><rect x="750.6" y="117" width="39.0" height="15.0" fill="rgb(237,205,49)" rx="2" ry="2" />
<text  x="753.63" y="127.5" >ipa..</text>
</g>
<g >
<title>all (520,244,298 samples, 100%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(254,125,38)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>policy.py:1862:p_target (7,275,200 samples, 1.40%)</title><rect x="720.3" y="197" width="16.5" height="15.0" fill="rgb(207,135,39)" rx="2" ry="2" />
<text  x="723.28" y="207.5" ></text>
</g>
<g >
<title>policy.py:197:_TranslateTerms (2,294,222 samples, 0.44%)</title><rect x="731.6" y="165" width="5.2" height="15.0" fill="rgb(235,144,6)" rx="2" ry="2" />
<text  x="734.57" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (11,541,180 samples, 2.22%)</title><rect x="811.5" y="117" width="26.2" height="15.0" fill="rgb(236,97,12)" rx="2" ry="2" />
<text  x="814.51" y="127.5" >n..</text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (2,134,209 samples, 0.41%)</title><rect x="241.3" y="101" width="4.9" height="15.0" fill="rgb(234,185,2)" rx="2" ry="2" />
<text  x="244.33" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (1,041,167 samples, 0.20%)</title><rect x="160.4" y="117" width="2.3" height="15.0" fill="rgb(212,129,19)" rx="2" ry="2" />
<text  x="163.38" y="127.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (5,242,262 samples, 1.01%)</title><rect x="34.9" y="197" width="11.9" height="15.0" fill="rgb(207,183,34)" rx="2" ry="2" />
<text  x="37.92" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:423:AddressListExclude (74,569,855 samples, 14.33%)</title><rect x="83.9" y="197" width="169.2" height="15.0" fill="rgb(212,21,12)" rx="2" ry="2" />
<text  x="86.93" y="207.5" >nacaddr.py:423:Addres..</text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (1,432,352 samples, 0.28%)</title><rect x="387.8" y="149" width="3.3" height="15.0" fill="rgb(233,46,50)" rx="2" ry="2" />
<text  x="390.83" y="159.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (1,328,486 samples, 0.26%)</title><rect x="51.7" y="181" width="3.0" height="15.0" fill="rgb(240,168,17)" rx="2" ry="2" />
<text  x="54.68" y="191.5" ></text>
</g>
<g >
<title>naming.py:442:GetNetAddr (65,319,850 samples, 12.56%)</title><rect x="738.3" y="165" width="148.1" height="15.0" fill="rgb(229,16,13)" rx="2" ry="2" />
<text  x="741.26" y="175.5" >naming.py:442:GetN..</text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (1,003,637 samples, 0.19%)</title><rect x="893.8" y="85" width="2.3" height="15.0" fill="rgb(221,4,30)" rx="2" ry="2" />
<text  x="896.78" y="95.5" ></text>
</g>
<g >
<title>nacaddr.py:172:supernet_of (3,689,534 samples, 0.71%)</title><rect x="644.3" y="181" width="8.4" height="15.0" fill="rgb(237,99,9)" rx="2" ry="2" />
<text  x="647.35" y="191.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (1,247,486 samples, 0.24%)</title><rect x="880.1" y="53" width="2.8" height="15.0" fill="rgb(217,152,49)" rx="2" ry="2" />
<text  x="883.09" y="63.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (10,204,897 samples, 1.96%)</title><rect x="814.5" y="101" width="23.2" height="15.0" fill="rgb(226,180,34)" rx="2" ry="2" />
<text  x="817.54" y="111.5" >i..</text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.min&gt; (1,064,605 samples, 0.20%)</title><rect x="208.6" y="85" width="2.4" height="15.0" fill="rgb(221,169,46)" rx="2" ry="2" />
<text  x="211.60" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (1,434,356 samples, 0.28%)</title><rect x="237.1" y="101" width="3.3" height="15.0" fill="rgb(248,77,9)" rx="2" ry="2" />
<text  x="240.15" y="111.5" ></text>
</g>
<g >
<title>naming.py:456:GetNet (8,092,530 samples, 1.56%)</title><rect x="886.8" y="133" width="18.4" height="15.0" fill="rgb(230,141,47)" rx="2" ry="2" />
<text  x="889.81" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:667:__hash__ (779,509 samples, 0.15%)</title><rect x="301.4" y="181" width="1.8" height="15.0" fill="rgb(243,67,24)" rx="2" ry="2" />
<text  x="304.44" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (8,099,059 samples, 1.56%)</title><rect x="793.1" y="101" width="18.4" height="15.0" fill="rgb(210,198,13)" rx="2" ry="2" />
<text  x="796.14" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (589,956 samples, 0.11%)</title><rect x="903.6" y="85" width="1.3" height="15.0" fill="rgb(243,11,27)" rx="2" ry="2" />
<text  x="906.57" y="95.5" ></text>
</g>
<g >
<title>policy.py:2526:ParsePolicy (87,997,122 samples, 16.91%)</title><rect x="705.6" y="245" width="199.6" height="15.0" fill="rgb(251,72,42)" rx="2" ry="2" />
<text  x="708.57" y="255.5" >policy.py:2526:ParsePolicy</text>
</g>
<g >
<title>naming.py:456:GetNet (113,530 samples, 0.02%)</title><rect x="904.9" y="101" width="0.3" height="15.0" fill="rgb(212,228,11)" rx="2" ry="2" />
<text  x="907.90" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (692,420 samples, 0.13%)</title><rect x="775.7" y="85" width="1.6" height="15.0" fill="rgb(219,22,32)" rx="2" ry="2" />
<text  x="778.69" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:186:_count_righthand_zero_bits (2,240,608 samples, 0.43%)</title><rect x="205.9" y="101" width="5.1" height="15.0" fill="rgb(228,173,35)" rx="2" ry="2" />
<text  x="208.94" y="111.5" ></text>
</g>
<g >
<title>iptables.py:322:_CalculateAddresses (74,824,748 samples, 14.38%)</title><rect x="83.4" y="213" width="169.7" height="15.0" fill="rgb(250,106,10)" rx="2" ry="2" />
<text  x="86.36" y="223.5" >iptables.py:322:_Calc..</text>
</g>
<g >
<title>ipaddress.py:859:_get_networks_key (643,878 samples, 0.12%)</title><rect x="138.2" y="181" width="1.5" height="15.0" fill="rgb(241,55,36)" rx="2" ry="2" />
<text  x="141.24" y="191.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (1,388,828 samples, 0.27%)</title><rect x="66.6" y="181" width="3.2" height="15.0" fill="rgb(253,63,48)" rx="2" ry="2" />
<text  x="69.63" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (1,154,675 samples, 0.22%)</title><rect x="855.4" y="37" width="2.6" height="15.0" fill="rgb(215,211,28)" rx="2" ry="2" />
<text  x="858.37" y="47.5" ></text>
</g>
<g >
<title>naming.py:456:GetNet (20,858,154 samples, 4.01%)</title><rect x="837.7" y="133" width="47.3" height="15.0" fill="rgb(209,53,6)" rx="2" ry="2" />
<text  x="840.69" y="143.5" >nami..</text>
</g>
<g >
<title>juniper.py:687:_Comment (1,577,689 samples, 0.30%)</title><rect x="625.2" y="213" width="3.6" height="15.0" fill="rgb(226,164,17)" rx="2" ry="2" />
<text  x="628.21" y="223.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (1,325,278 samples, 0.25%)</title><rect x="36.2" y="165" width="3.0" height="15.0" fill="rgb(233,116,2)" rx="2" ry="2" />
<text  x="39.22" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:360:get_mixed_type_key (624,507 samples, 0.12%)</title><rect x="735.4" y="85" width="1.4" height="15.0" fill="rgb(207,21,19)" rx="2" ry="2" />
<text  x="738.36" y="95.5" ></text>
</g>
<g >
<title>nacaddr.py:423:AddressListExclude (1,236,955 samples, 0.24%)</title><rect x="17.6" y="213" width="2.8" height="15.0" fill="rgb(206,32,43)" rx="2" ry="2" />
<text  x="20.56" y="223.5" ></text>
</g>
<g >
<title>iptables.py:114:__str__ (79,263,734 samples, 15.24%)</title><rect x="81.0" y="229" width="179.7" height="15.0" fill="rgb(241,14,45)" rx="2" ry="2" />
<text  x="83.95" y="239.5" >iptables.py:114:__str__</text>
</g>
<g >
<title>juniper.py:668:&lt;listcomp&gt; (985,671 samples, 0.19%)</title><rect x="301.0" y="197" width="2.2" height="15.0" fill="rgb(231,148,11)" rx="2" ry="2" />
<text  x="303.97" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:699:hostmask (1,593,675 samples, 0.31%)</title><rect x="127.9" y="149" width="3.6" height="15.0" fill="rgb(232,102,36)" rx="2" ry="2" />
<text  x="130.85" y="159.5" ></text>
</g>
<g >
<title>lex.py:831:validate_module (1,174,041 samples, 0.23%)</title><rect x="706.6" y="181" width="2.6" height="15.0" fill="rgb(212,129,17)" rx="2" ry="2" />
<text  x="709.57" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (68,357,516 samples, 13.14%)</title><rect x="470.2" y="181" width="155.0" height="15.0" fill="rgb(234,177,38)" rx="2" ry="2" />
<text  x="473.16" y="191.5" >nacaddr.py:58:_is_s..</text>
</g>
<g >
<title>aclgenerator.py:272:__init__ (30,884,936 samples, 5.94%)</title><rect x="633.2" y="229" width="70.1" height="15.0" fill="rgb(240,186,37)" rx="2" ry="2" />
<text  x="636.20" y="239.5" >aclgene..</text>
</g>
<g >
<title>nacaddr.py:87:subnet_of (103,224,996 samples, 19.84%)</title><rect x="391.1" y="197" width="234.1" height="15.0" fill="rgb(215,23,14)" rx="2" ry="2" />
<text  x="394.08" y="207.5" >nacaddr.py:87:subnet_of</text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (5,585,823 samples, 1.07%)</title><rect x="22.2" y="229" width="12.7" height="15.0" fill="rgb(232,211,11)" rx="2" ry="2" />
<text  x="25.22" y="239.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (1,386,993 samples, 0.27%)</title><rect x="63.4" y="197" width="3.2" height="15.0" fill="rgb(217,100,30)" rx="2" ry="2" />
<text  x="66.44" y="207.5" ></text>
</g>
<g >
<title>junipersrx.py:336:_TranslatePolicy (30,265,700 samples, 5.82%)</title><rect x="634.6" y="213" width="68.7" height="15.0" fill="rgb(235,106,20)" rx="2" ry="2" />
<text  x="637.61" y="223.5" >juniper..</text>
</g>
<g >
<title>ipaddress.py:1872:version (755,997 samples, 0.15%)</title><rect x="372.2" y="165" width="1.7" height="15.0" fill="rgb(218,50,28)" rx="2" ry="2" />
<text  x="375.20" y="175.5" ></text>
</g>
<g >
<title>policy.py:405:__init__ (8,265,814 samples, 1.59%)</title><rect x="886.4" y="181" width="18.8" height="15.0" fill="rgb(216,94,20)" rx="2" ry="2" />
<text  x="889.41" y="191.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (1,342,753 samples, 0.26%)</title><rect x="54.7" y="181" width="3.1" height="15.0" fill="rgb(244,103,32)" rx="2" ry="2" />
<text  x="57.74" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:585:__str__ (2,897,243 samples, 0.56%)</title><rect x="265.9" y="197" width="6.5" height="15.0" fill="rgb(223,95,45)" rx="2" ry="2" />
<text  x="268.86" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1809:_string_from_ip_int (1,443,839 samples, 0.28%)</title><rect x="269.2" y="181" width="3.2" height="15.0" fill="rgb(248,211,11)" rx="2" ry="2" />
<text  x="272.15" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (5,443,205 samples, 1.05%)</title><rect x="777.3" y="101" width="12.3" height="15.0" fill="rgb(226,225,37)" rx="2" ry="2" />
<text  x="780.26" y="111.5" ></text>
</g>
<g >
<title>iptables.py:545:_GenerateAddressStatement (1,281,863 samples, 0.25%)</title><rect x="257.8" y="197" width="2.9" height="15.0" fill="rgb(242,164,21)" rx="2" ry="2" />
<text  x="260.83" y="207.5" ></text>
</g>
<g >
<title>junipersrx.py:850:__str__ (1,020,640 samples, 0.20%)</title><rect x="703.3" y="245" width="2.3" height="15.0" fill="rgb(249,179,23)" rx="2" ry="2" />
<text  x="706.26" y="255.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (898,532 samples, 0.17%)</title><rect x="235.1" y="69" width="2.0" height="15.0" fill="rgb(254,62,17)" rx="2" ry="2" />
<text  x="238.11" y="79.5" ></text>
</g>
<g >
<title>juniper.py:653:_MinimizePrefixes (155,535,792 samples, 29.90%)</title><rect x="272.4" y="213" width="352.8" height="15.0" fill="rgb(252,186,24)" rx="2" ry="2" />
<text  x="275.43" y="223.5" >juniper.py:653:_MinimizePrefixes</text>
</g>
<g >
<title>nacaddr.py:360:CollapseAddrList (18,281,382 samples, 3.51%)</title><rect x="139.7" y="181" width="41.5" height="15.0" fill="rgb(206,18,9)" rx="2" ry="2" />
<text  x="142.70" y="191.5" >nac..</text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (1,218,436 samples, 0.23%)</title><rect x="234.4" y="85" width="2.7" height="15.0" fill="rgb(223,144,24)" rx="2" ry="2" />
<text  x="237.38" y="95.5" ></text>
</g>
<g >
<title>policy.py:1013:AddObject (65,527,923 samples, 12.60%)</title><rect x="737.8" y="181" width="148.6" height="15.0" fill="rgb(246,214,2)" rx="2" ry="2" />
<text  x="740.79" y="191.5" >policy.py:1013:Add..</text>
</g>
<g >
<title>yacc.py:1003:parseopt_notrack (86,381,668 samples, 16.60%)</title><rect x="709.2" y="213" width="196.0" height="15.0" fill="rgb(224,87,51)" rx="2" ry="2" />
<text  x="712.23" y="223.5" >yacc.py:1003:parseopt_not..</text>
</g>
<g >
<title>ipaddress.py:1257:version (6,361,490 samples, 1.22%)</title><rect x="554.5" y="165" width="14.4" height="15.0" fill="rgb(217,134,27)" rx="2" ry="2" />
<text  x="557.47" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:178:__deepcopy__ (1,629,797 samples, 0.31%)</title><rect x="71.1" y="229" width="3.7" height="15.0" fill="rgb(228,8,0)" rx="2" ry="2" />
<text  x="74.07" y="239.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (2,098,299 samples, 0.40%)</title><rect x="900.1" y="101" width="4.8" height="15.0" fill="rgb(235,132,29)" rx="2" ry="2" />
<text  x="903.15" y="111.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (2,503,077 samples, 0.48%)</title><rect x="183.0" y="165" width="5.7" height="15.0" fill="rgb(220,180,31)" rx="2" ry="2" />
<text  x="186.01" y="175.5" ></text>
</g>
<g >
<title>policy.py:1912:p_term_spec (74,238,339 samples, 14.27%)</title><rect x="736.8" y="197" width="168.4" height="15.0" fill="rgb(239,4,16)" rx="2" ry="2" />
<text  x="739.78" y="207.5" >policy.py:1912:p_term..</text>
</g>
<g >
<title>lex.py:728:validate_rules (1,244,930 samples, 0.24%)</title><rect x="706.4" y="197" width="2.8" height="15.0" fill="rgb(227,39,16)" rx="2" ry="2" />
<text  x="709.41" y="207.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (5,253,234 samples, 1.01%)</title><rect x="34.9" y="229" width="11.9" height="15.0" fill="rgb(213,71,42)" rx="2" ry="2" />
<text  x="37.89" y="239.5" ></text>
</g>
<g >
<title>policy.py:190:AddFilter (4,968,110 samples, 0.95%)</title><rect x="720.3" y="165" width="11.3" height="15.0" fill="rgb(221,196,28)" rx="2" ry="2" />
<text  x="723.30" y="175.5" ></text>
</g>
<g >
<title>policy.py:1290:cleanup (2,159,374 samples, 0.42%)</title><rect x="731.9" y="133" width="4.9" height="15.0" fill="rgb(247,43,40)" rx="2" ry="2" />
<text  x="734.88" y="143.5" ></text>
</g>
<g >
<title>copy.py:268:_reconstruct (1,165,308 samples, 0.22%)</title><rect x="32.3" y="197" width="2.6" height="15.0" fill="rgb(225,171,10)" rx="2" ry="2" />
<text  x="35.25" y="207.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (1,147,274 samples, 0.22%)</title><rect x="27.0" y="181" width="2.6" height="15.0" fill="rgb(224,142,43)" rx="2" ry="2" />
<text  x="30.01" y="191.5" ></text>
</g>
<g >
<title>iptables.py:403:_FormatPart (3,380,541 samples, 0.65%)</title><rect x="253.1" y="213" width="7.6" height="15.0" fill="rgb(234,197,51)" rx="2" ry="2" />
<text  x="256.07" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (692,986 samples, 0.13%)</title><rect x="223.0" y="69" width="1.6" height="15.0" fill="rgb(240,211,50)" rx="2" ry="2" />
<text  x="226.03" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:1257:version (2,132,694 samples, 0.41%)</title><rect x="367.4" y="165" width="4.8" height="15.0" fill="rgb(243,226,4)" rx="2" ry="2" />
<text  x="370.36" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (8,446,685 samples, 1.62%)</title><rect x="119.1" y="165" width="19.1" height="15.0" fill="rgb(247,144,2)" rx="2" ry="2" />
<text  x="122.09" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (1,282,740 samples, 0.25%)</title><rect x="888.9" y="85" width="2.9" height="15.0" fill="rgb(245,58,49)" rx="2" ry="2" />
<text  x="891.90" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (1,121,358 samples, 0.22%)</title><rect x="869.6" y="69" width="2.5" height="15.0" fill="rgb(230,55,29)" rx="2" ry="2" />
<text  x="872.58" y="79.5" ></text>
</g>
<g >
<title>nacaddr.py:417:&lt;genexpr&gt; (28,014,779 samples, 5.38%)</title><rect x="189.5" y="149" width="63.6" height="15.0" fill="rgb(207,214,22)" rx="2" ry="2" />
<text  x="192.53" y="159.5" >nacadd..</text>
</g>
<g >
<title>ipaddress.py:202:summarize_address_range (12,976,816 samples, 2.49%)</title><rect x="195.2" y="117" width="29.4" height="15.0" fill="rgb(251,92,17)" rx="2" ry="2" />
<text  x="198.17" y="127.5" >ip..</text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (614,314 samples, 0.12%)</title><rect x="239.0" y="85" width="1.4" height="15.0" fill="rgb(229,136,54)" rx="2" ry="2" />
<text  x="242.01" y="95.5" ></text>
</g>
</g>
</svg>

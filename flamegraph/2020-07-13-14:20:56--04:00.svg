<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="374.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >"2020-07-13-14:20:56--04:00 cProfile"</text>
<text id="details" x="10.00" y="357" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="357" > </text>
<g id="frames">
<g >
<title>ipaddress.py:1631:_ip_int_from_string (1,444,672 samples, 0.24%)</title><rect x="270.4" y="101" width="2.9" height="15.0" fill="rgb(209,168,14)" rx="2" ry="2" />
<text  x="273.44" y="111.5" ></text>
</g>
<g >
<title>aclgenerator.py:272:__init__ (1,019,334 samples, 0.17%)</title><rect x="14.5" y="261" width="2.0" height="15.0" fill="rgb(245,1,52)" rx="2" ry="2" />
<text  x="17.54" y="271.5" ></text>
</g>
<g >
<title>ipaddress.py:1257:version (6,496,192 samples, 1.08%)</title><rect x="855.2" y="181" width="12.7" height="15.0" fill="rgb(216,33,11)" rx="2" ry="2" />
<text  x="858.15" y="191.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,696,742 samples, 0.45%)</title><rect x="91.5" y="181" width="5.3" height="15.0" fill="rgb(207,6,28)" rx="2" ry="2" />
<text  x="94.51" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (4,254,286 samples, 0.71%)</title><rect x="317.7" y="101" width="8.4" height="15.0" fill="rgb(238,151,16)" rx="2" ry="2" />
<text  x="320.71" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (145,955,714 samples, 24.32%)</title><rect x="630.3" y="197" width="287.1" height="15.0" fill="rgb(253,184,16)" rx="2" ry="2" />
<text  x="633.33" y="207.5" >nacaddr.py:58:_is_subnet_of</text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (1,378,069 samples, 0.23%)</title><rect x="1147.7" y="85" width="2.7" height="15.0" fill="rgb(209,31,6)" rx="2" ry="2" />
<text  x="1150.72" y="95.5" ></text>
</g>
<g >
<title>policy.py:1862:p_target (6,812,263 samples, 1.14%)</title><rect x="1041.8" y="213" width="13.4" height="15.0" fill="rgb(226,116,2)" rx="2" ry="2" />
<text  x="1044.81" y="223.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'issuperset' of 'frozenset' objects&gt; (1,056,819 samples, 0.18%)</title><rect x="359.8" y="53" width="2.1" height="15.0" fill="rgb(216,172,14)" rx="2" ry="2" />
<text  x="362.80" y="63.5" ></text>
</g>
<g >
<title>naming.py:455:GetNet (60,360,780 samples, 10.06%)</title><rect x="1056.4" y="165" width="118.7" height="15.0" fill="rgb(246,96,0)" rx="2" ry="2" />
<text  x="1059.38" y="175.5" >naming.py:455:..</text>
</g>
<g >
<title>ipaddress.py:1872:version (2,602,973 samples, 0.43%)</title><rect x="867.9" y="181" width="5.1" height="15.0" fill="rgb(207,166,18)" rx="2" ry="2" />
<text  x="870.93" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (752,131 samples, 0.13%)</title><rect x="1087.3" y="85" width="1.5" height="15.0" fill="rgb(224,43,16)" rx="2" ry="2" />
<text  x="1090.35" y="95.5" ></text>
</g>
<g >
<title>naming.py:441:GetNetAddr (60,371,600 samples, 10.06%)</title><rect x="1056.4" y="181" width="118.7" height="15.0" fill="rgb(235,145,42)" rx="2" ry="2" />
<text  x="1059.36" y="191.5" >naming.py:441:..</text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (1,662,716 samples, 0.28%)</title><rect x="252.4" y="117" width="3.3" height="15.0" fill="rgb(224,46,18)" rx="2" ry="2" />
<text  x="255.43" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:585:__str__ (664,565 samples, 0.11%)</title><rect x="370.3" y="197" width="1.3" height="15.0" fill="rgb(206,113,39)" rx="2" ry="2" />
<text  x="373.29" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:613:__str__ (2,487,552 samples, 0.41%)</title><rect x="1100.0" y="85" width="4.9" height="15.0" fill="rgb(234,161,4)" rx="2" ry="2" />
<text  x="1102.97" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:1809:_string_from_ip_int (1,459,054 samples, 0.24%)</title><rect x="1102.0" y="53" width="2.9" height="15.0" fill="rgb(223,17,1)" rx="2" ry="2" />
<text  x="1104.99" y="63.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (4,934,415 samples, 0.82%)</title><rect x="489.7" y="165" width="9.7" height="15.0" fill="rgb(222,58,31)" rx="2" ry="2" />
<text  x="492.69" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1257:version (1,442,404 samples, 0.24%)</title><rect x="1015.6" y="165" width="2.8" height="15.0" fill="rgb(244,218,41)" rx="2" ry="2" />
<text  x="1018.59" y="175.5" ></text>
</g>
<g >
<title>yacc.py:1003:parseopt_notrack (79,690,838 samples, 13.28%)</title><rect x="1033.3" y="229" width="156.7" height="15.0" fill="rgb(252,152,0)" rx="2" ry="2" />
<text  x="1036.29" y="239.5" >yacc.py:1003:parseop..</text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (55,503,280 samples, 9.25%)</title><rect x="442.5" y="197" width="109.1" height="15.0" fill="rgb(243,96,26)" rx="2" ry="2" />
<text  x="445.50" y="207.5" >nacaddr.py:58..</text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (31,478,881 samples, 5.25%)</title><rect x="966.4" y="181" width="61.9" height="15.0" fill="rgb(247,0,44)" rx="2" ry="2" />
<text  x="969.37" y="191.5" >nacadd..</text>
</g>
<g >
<title>copy.py:132:deepcopy (2,689,893 samples, 0.45%)</title><rect x="49.8" y="181" width="5.3" height="15.0" fill="rgb(234,169,7)" rx="2" ry="2" />
<text  x="52.79" y="191.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (887,728 samples, 0.15%)</title><rect x="1026.5" y="149" width="1.8" height="15.0" fill="rgb(235,176,40)" rx="2" ry="2" />
<text  x="1029.52" y="159.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'issuperset' of 'frozenset' objects&gt; (1,446,536 samples, 0.24%)</title><rect x="339.1" y="69" width="2.9" height="15.0" fill="rgb(221,119,41)" rx="2" ry="2" />
<text  x="342.11" y="79.5" ></text>
</g>
<g >
<title>copy.py:268:_reconstruct (10,618,364 samples, 1.77%)</title><rect x="85.7" y="245" width="20.9" height="15.0" fill="rgb(212,57,36)" rx="2" ry="2" />
<text  x="88.70" y="255.5" ></text>
</g>
<g >
<title>ipaddress.py:1809:_string_from_ip_int (880,980 samples, 0.15%)</title><rect x="108.0" y="197" width="1.8" height="15.0" fill="rgb(240,123,39)" rx="2" ry="2" />
<text  x="111.03" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (899,017 samples, 0.15%)</title><rect x="305.1" y="85" width="1.8" height="15.0" fill="rgb(244,50,10)" rx="2" ry="2" />
<text  x="308.15" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (2,901,365 samples, 0.48%)</title><rect x="993.0" y="149" width="5.7" height="15.0" fill="rgb(244,173,3)" rx="2" ry="2" />
<text  x="995.98" y="159.5" ></text>
</g>
<g >
<title>junipersrx.py:336:_TranslatePolicy (51,949,138 samples, 8.66%)</title><rect x="926.1" y="229" width="102.2" height="15.0" fill="rgb(230,93,14)" rx="2" ry="2" />
<text  x="929.11" y="239.5" >junipersrx.p..</text>
</g>
<g >
<title>functools.py:103:_ge_from_lt (21,390,818 samples, 3.56%)</title><rect x="736.9" y="181" width="42.1" height="15.0" fill="rgb(229,43,10)" rx="2" ry="2" />
<text  x="739.93" y="191.5" >fun..</text>
</g>
<g >
<title>copy.py:132:deepcopy (2,626,015 samples, 0.44%)</title><rect x="65.7" y="197" width="5.2" height="15.0" fill="rgb(208,90,34)" rx="2" ry="2" />
<text  x="68.70" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (1,040,705 samples, 0.17%)</title><rect x="1171.6" y="53" width="2.0" height="15.0" fill="rgb(225,209,29)" rx="2" ry="2" />
<text  x="1174.57" y="63.5" ></text>
</g>
<g >
<title>functools.py:98:_le_from_lt (38,729,615 samples, 6.45%)</title><rect x="779.0" y="181" width="76.2" height="15.0" fill="rgb(240,139,46)" rx="2" ry="2" />
<text  x="781.99" y="191.5" >functool..</text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (818,344 samples, 0.14%)</title><rect x="1135.8" y="101" width="1.7" height="15.0" fill="rgb(243,16,8)" rx="2" ry="2" />
<text  x="1138.84" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (1,875,017 samples, 0.31%)</title><rect x="1179.5" y="101" width="3.7" height="15.0" fill="rgb(246,212,28)" rx="2" ry="2" />
<text  x="1182.47" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:707:with_prefixlen (1,438,754 samples, 0.24%)</title><rect x="106.9" y="229" width="2.9" height="15.0" fill="rgb(241,115,42)" rx="2" ry="2" />
<text  x="109.94" y="239.5" ></text>
</g>
<g >
<title>nacaddr.py:146:__init__ (6,549,998 samples, 1.09%)</title><rect x="1153.5" y="117" width="12.8" height="15.0" fill="rgb(250,125,3)" rx="2" ry="2" />
<text  x="1156.47" y="127.5" ></text>
</g>
<g >
<title>juniper.py:653:_MinimizePrefixes (272,392,397 samples, 45.39%)</title><rect x="381.7" y="229" width="535.7" height="15.0" fill="rgb(217,228,18)" rx="2" ry="2" />
<text  x="384.70" y="239.5" >juniper.py:653:_MinimizePrefixes</text>
</g>
<g >
<title>nacaddr.py:92:__deepcopy__ (1,271,233 samples, 0.21%)</title><rect x="104.1" y="213" width="2.5" height="15.0" fill="rgb(234,84,53)" rx="2" ry="2" />
<text  x="107.08" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (1,389,732 samples, 0.23%)</title><rect x="125.2" y="165" width="2.7" height="15.0" fill="rgb(218,14,4)" rx="2" ry="2" />
<text  x="128.16" y="175.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (2,122,569 samples, 0.35%)</title><rect x="214.4" y="149" width="4.2" height="15.0" fill="rgb(246,225,13)" rx="2" ry="2" />
<text  x="217.44" y="159.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'issuperset' of 'frozenset' objects&gt; (884,150 samples, 0.15%)</title><rect x="1134.1" y="53" width="1.7" height="15.0" fill="rgb(235,0,11)" rx="2" ry="2" />
<text  x="1137.10" y="63.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (3,559,196 samples, 0.59%)</title><rect x="1097.9" y="101" width="7.0" height="15.0" fill="rgb(248,71,24)" rx="2" ry="2" />
<text  x="1100.86" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (8,508,425 samples, 1.42%)</title><rect x="534.9" y="181" width="16.7" height="15.0" fill="rgb(239,159,32)" rx="2" ry="2" />
<text  x="537.91" y="191.5" ></text>
</g>
<g >
<title>juniper.py:956:__str__ (280,883,224 samples, 46.81%)</title><rect x="371.6" y="261" width="552.3" height="15.0" fill="rgb(213,26,26)" rx="2" ry="2" />
<text  x="374.59" y="271.5" >juniper.py:956:__str__</text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (810,362 samples, 0.14%)</title><rect x="1084.2" y="101" width="1.6" height="15.0" fill="rgb(245,59,18)" rx="2" ry="2" />
<text  x="1087.21" y="111.5" ></text>
</g>
<g >
<title>lex.py:728:validate_rules (1,059,638 samples, 0.18%)</title><rect x="1031.2" y="213" width="2.1" height="15.0" fill="rgb(208,20,15)" rx="2" ry="2" />
<text  x="1034.20" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (16,095,352 samples, 2.68%)</title><rect x="1142.0" y="133" width="31.6" height="15.0" fill="rgb(214,89,2)" rx="2" ry="2" />
<text  x="1144.96" y="143.5" >na..</text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (4,839,763 samples, 0.81%)</title><rect x="937.8" y="181" width="9.5" height="15.0" fill="rgb(228,223,27)" rx="2" ry="2" />
<text  x="940.77" y="191.5" ></text>
</g>
<g >
<title>iptables.py:322:_CalculateAddresses (119,536,045 samples, 19.92%)</title><rect x="130.0" y="229" width="235.0" height="15.0" fill="rgb(244,75,17)" rx="2" ry="2" />
<text  x="132.97" y="239.5" >iptables.py:322:_CalculateAddre..</text>
</g>
<g >
<title>nacaddr.py:74:__init__ (3,695,688 samples, 0.62%)</title><rect x="1166.3" y="117" width="7.3" height="15.0" fill="rgb(228,151,53)" rx="2" ry="2" />
<text  x="1169.35" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:146:__init__ (15,807,411 samples, 2.63%)</title><rect x="1088.8" y="133" width="31.1" height="15.0" fill="rgb(206,200,20)" rx="2" ry="2" />
<text  x="1091.83" y="143.5" >na..</text>
</g>
<g >
<title>nacaddr.py:381:SortAddrList (4,415,024 samples, 0.74%)</title><rect x="1042.4" y="117" width="8.6" height="15.0" fill="rgb(209,133,20)" rx="2" ry="2" />
<text  x="1045.36" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (20,796,502 samples, 3.47%)</title><rect x="814.3" y="165" width="40.9" height="15.0" fill="rgb(238,172,34)" rx="2" ry="2" />
<text  x="817.26" y="175.5" >ipa..</text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (2,865,730 samples, 0.48%)</title><rect x="291.0" y="85" width="5.7" height="15.0" fill="rgb(206,211,42)" rx="2" ry="2" />
<text  x="294.04" y="95.5" ></text>
</g>
<g >
<title>nacaddr.py:409:AddressListExclude (119,272,500 samples, 19.88%)</title><rect x="130.5" y="213" width="234.5" height="15.0" fill="rgb(234,196,27)" rx="2" ry="2" />
<text  x="133.49" y="223.5" >nacaddr.py:409:AddressListExclude</text>
</g>
<g >
<title>functools.py:98:_le_from_lt (700,167 samples, 0.12%)</title><rect x="223.3" y="133" width="1.4" height="15.0" fill="rgb(251,199,47)" rx="2" ry="2" />
<text  x="226.32" y="143.5" ></text>
</g>
<g >
<title>copy.py:268:_reconstruct (2,691,223 samples, 0.45%)</title><rect x="76.1" y="213" width="5.3" height="15.0" fill="rgb(242,67,18)" rx="2" ry="2" />
<text  x="79.11" y="223.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (2,651,605 samples, 0.44%)</title><rect x="70.9" y="213" width="5.2" height="15.0" fill="rgb(251,168,43)" rx="2" ry="2" />
<text  x="73.87" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (751,597 samples, 0.13%)</title><rect x="296.7" y="101" width="1.5" height="15.0" fill="rgb(234,55,13)" rx="2" ry="2" />
<text  x="299.68" y="111.5" ></text>
</g>
<g >
<title>lex.py:576:validate_all (1,089,965 samples, 0.18%)</title><rect x="1031.1" y="229" width="2.2" height="15.0" fill="rgb(239,128,37)" rx="2" ry="2" />
<text  x="1034.14" y="239.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (2,635,435 samples, 0.44%)</title><rect x="233.1" y="181" width="5.1" height="15.0" fill="rgb(227,223,19)" rx="2" ry="2" />
<text  x="236.06" y="191.5" ></text>
</g>
<g >
<title>naming.py:441:GetNetAddr (7,492,936 samples, 1.25%)</title><rect x="1175.3" y="165" width="14.7" height="15.0" fill="rgb(240,84,5)" rx="2" ry="2" />
<text  x="1178.27" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (22,531,386 samples, 3.75%)</title><rect x="873.0" y="181" width="44.4" height="15.0" fill="rgb(218,150,40)" rx="2" ry="2" />
<text  x="876.04" y="191.5" >ipad..</text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (3,303,438 samples, 0.55%)</title><rect x="1111.6" y="85" width="6.5" height="15.0" fill="rgb(249,114,46)" rx="2" ry="2" />
<text  x="1114.65" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:699:hostmask (1,644,178 samples, 0.27%)</title><rect x="174.6" y="165" width="3.3" height="15.0" fill="rgb(251,151,19)" rx="2" ry="2" />
<text  x="177.64" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:146:__init__ (705,635 samples, 0.12%)</title><rect x="211.7" y="149" width="1.4" height="15.0" fill="rgb(243,186,14)" rx="2" ry="2" />
<text  x="214.71" y="159.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (10,489,696 samples, 1.75%)</title><rect x="44.1" y="229" width="20.6" height="15.0" fill="rgb(251,126,19)" rx="2" ry="2" />
<text  x="47.08" y="239.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (2,444,273 samples, 0.41%)</title><rect x="25.5" y="213" width="4.8" height="15.0" fill="rgb(248,196,30)" rx="2" ry="2" />
<text  x="28.54" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (719,861 samples, 0.12%)</title><rect x="944.3" y="149" width="1.5" height="15.0" fill="rgb(210,49,37)" rx="2" ry="2" />
<text  x="947.34" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:585:__str__ (895,119 samples, 0.15%)</title><rect x="1159.1" y="53" width="1.7" height="15.0" fill="rgb(228,162,44)" rx="2" ry="2" />
<text  x="1162.08" y="63.5" ></text>
</g>
<g >
<title>policy.py:1279:AddressCleanup (4,447,581 samples, 0.74%)</title><rect x="1042.3" y="149" width="8.7" height="15.0" fill="rgb(219,34,8)" rx="2" ry="2" />
<text  x="1045.29" y="159.5" ></text>
</g>
<g >
<title>naming.py:455:GetNet (7,491,593 samples, 1.25%)</title><rect x="1175.3" y="149" width="14.7" height="15.0" fill="rgb(231,155,43)" rx="2" ry="2" />
<text  x="1178.27" y="159.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'extend' of 'list' objects&gt; (64,478,788 samples, 10.75%)</title><rect x="238.2" y="181" width="126.8" height="15.0" fill="rgb(243,7,30)" rx="2" ry="2" />
<text  x="241.24" y="191.5" >~:0:&lt;method 'ex..</text>
</g>
<g >
<title>ipaddress.py:613:__str__ (676,977 samples, 0.11%)</title><rect x="302.0" y="85" width="1.3" height="15.0" fill="rgb(215,102,42)" rx="2" ry="2" />
<text  x="304.97" y="95.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (2,738,573 samples, 0.46%)</title><rect x="96.8" y="213" width="5.4" height="15.0" fill="rgb(216,127,7)" rx="2" ry="2" />
<text  x="99.81" y="223.5" ></text>
</g>
<g >
<title>naming.py:455:GetNet (92,279 samples, 0.02%)</title><rect x="1189.8" y="117" width="0.2" height="15.0" fill="rgb(236,89,17)" rx="2" ry="2" />
<text  x="1192.82" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (13,066,954 samples, 2.18%)</title><rect x="753.3" y="165" width="25.7" height="15.0" fill="rgb(251,58,21)" rx="2" ry="2" />
<text  x="756.29" y="175.5" >i..</text>
</g>
<g >
<title>copy.py:132:deepcopy (10,589,471 samples, 1.76%)</title><rect x="85.8" y="229" width="20.8" height="15.0" fill="rgb(230,43,51)" rx="2" ry="2" />
<text  x="88.75" y="239.5" ></text>
</g>
<g >
<title>naming.py:455:GetNet (2,374,719 samples, 0.40%)</title><rect x="1185.3" y="133" width="4.7" height="15.0" fill="rgb(230,153,22)" rx="2" ry="2" />
<text  x="1188.33" y="143.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,726,285 samples, 0.45%)</title><rect x="96.8" y="197" width="5.4" height="15.0" fill="rgb(209,22,6)" rx="2" ry="2" />
<text  x="99.84" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (3,948,580 samples, 0.66%)</title><rect x="334.2" y="85" width="7.8" height="15.0" fill="rgb(227,24,11)" rx="2" ry="2" />
<text  x="337.19" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (860,608 samples, 0.14%)</title><rect x="137.7" y="197" width="1.7" height="15.0" fill="rgb(246,157,43)" rx="2" ry="2" />
<text  x="140.71" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (776,936 samples, 0.13%)</title><rect x="1188.3" y="85" width="1.5" height="15.0" fill="rgb(223,145,27)" rx="2" ry="2" />
<text  x="1191.29" y="95.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.isinstance&gt; (928,527 samples, 0.15%)</title><rect x="497.6" y="149" width="1.8" height="15.0" fill="rgb(254,82,40)" rx="2" ry="2" />
<text  x="500.57" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:386:RemoveAddressFromList (697,935 samples, 0.12%)</title><rect x="19.5" y="213" width="1.3" height="15.0" fill="rgb(219,60,46)" rx="2" ry="2" />
<text  x="22.45" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (15,107,264 samples, 2.52%)</title><rect x="1090.2" y="117" width="29.7" height="15.0" fill="rgb(213,88,40)" rx="2" ry="2" />
<text  x="1093.20" y="127.5" >ip..</text>
</g>
<g >
<title>nacaddr.py:86:supernet_of (776,729 samples, 0.13%)</title><rect x="15.0" y="213" width="1.5" height="15.0" fill="rgb(252,92,41)" rx="2" ry="2" />
<text  x="18.02" y="223.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (3,169,037 samples, 0.53%)</title><rect x="224.7" y="181" width="6.2" height="15.0" fill="rgb(235,110,39)" rx="2" ry="2" />
<text  x="227.70" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (7,853,289 samples, 1.31%)</title><rect x="512.7" y="165" width="15.5" height="15.0" fill="rgb(224,68,21)" rx="2" ry="2" />
<text  x="515.71" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (38,843,663 samples, 6.47%)</title><rect x="1061.1" y="149" width="76.4" height="15.0" fill="rgb(214,191,38)" rx="2" ry="2" />
<text  x="1064.07" y="159.5" >nacaddr...</text>
</g>
<g >
<title>nacaddr.py:92:__deepcopy__ (1,151,404 samples, 0.19%)</title><rect x="41.8" y="213" width="2.3" height="15.0" fill="rgb(219,133,8)" rx="2" ry="2" />
<text  x="44.80" y="223.5" ></text>
</g>
<g >
<title>lex.py:305:token (1,908,898 samples, 0.32%)</title><rect x="1038.1" y="213" width="3.7" height="15.0" fill="rgb(206,216,2)" rx="2" ry="2" />
<text  x="1041.06" y="223.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (2,480,431 samples, 0.41%)</title><rect x="30.3" y="213" width="4.9" height="15.0" fill="rgb(245,99,12)" rx="2" ry="2" />
<text  x="33.35" y="223.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,685,400 samples, 0.45%)</title><rect x="76.1" y="197" width="5.3" height="15.0" fill="rgb(237,141,4)" rx="2" ry="2" />
<text  x="79.12" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (8,367,479 samples, 1.39%)</title><rect x="1121.0" y="117" width="16.5" height="15.0" fill="rgb(244,48,24)" rx="2" ry="2" />
<text  x="1124.00" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (4,927,406 samples, 0.82%)</title><rect x="118.2" y="229" width="9.7" height="15.0" fill="rgb(230,25,3)" rx="2" ry="2" />
<text  x="121.21" y="239.5" ></text>
</g>
<g >
<title>junipersrx.py:301:__init__ (53,051,493 samples, 8.84%)</title><rect x="923.9" y="261" width="104.4" height="15.0" fill="rgb(228,178,29)" rx="2" ry="2" />
<text  x="926.94" y="271.5" >junipersrx.p..</text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (4,617,622 samples, 0.77%)</title><rect x="1006.5" y="149" width="9.1" height="15.0" fill="rgb(216,134,4)" rx="2" ry="2" />
<text  x="1009.51" y="159.5" ></text>
</g>
<g >
<title>nacaddr.py:286:_CollapseAddrListInternal (18,629,383 samples, 3.10%)</title><rect x="188.1" y="181" width="36.6" height="15.0" fill="rgb(237,188,17)" rx="2" ry="2" />
<text  x="191.07" y="191.5" >nac..</text>
</g>
<g >
<title>ipaddress.py:1830:&lt;listcomp&gt; (741,566 samples, 0.12%)</title><rect x="324.6" y="37" width="1.5" height="15.0" fill="rgb(211,24,3)" rx="2" ry="2" />
<text  x="327.62" y="47.5" ></text>
</g>
<g >
<title>yacc.py:325:parse (79,692,114 samples, 13.28%)</title><rect x="1033.3" y="245" width="156.7" height="15.0" fill="rgb(239,138,43)" rx="2" ry="2" />
<text  x="1036.29" y="255.5" >yacc.py:325:parse</text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (10,496,722 samples, 1.75%)</title><rect x="44.1" y="245" width="20.6" height="15.0" fill="rgb(217,51,49)" rx="2" ry="2" />
<text  x="47.06" y="255.5" ></text>
</g>
<g >
<title>nacaddr.py:164:__deepcopy__ (4,643,826 samples, 0.77%)</title><rect x="106.6" y="245" width="9.1" height="15.0" fill="rgb(237,4,8)" rx="2" ry="2" />
<text  x="109.58" y="255.5" ></text>
</g>
<g >
<title>ipaddress.py:699:hostmask (832,071 samples, 0.14%)</title><rect x="547.0" y="165" width="1.7" height="15.0" fill="rgb(230,41,49)" rx="2" ry="2" />
<text  x="550.04" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (8,208,198 samples, 1.37%)</title><rect x="282.0" y="117" width="16.2" height="15.0" fill="rgb(219,75,52)" rx="2" ry="2" />
<text  x="285.02" y="127.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (2,442,968 samples, 0.41%)</title><rect x="25.5" y="197" width="4.8" height="15.0" fill="rgb(239,163,2)" rx="2" ry="2" />
<text  x="28.54" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (2,563,006 samples, 0.43%)</title><rect x="219.7" y="149" width="5.0" height="15.0" fill="rgb(252,5,32)" rx="2" ry="2" />
<text  x="222.66" y="159.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (2,650,189 samples, 0.44%)</title><rect x="70.9" y="197" width="5.2" height="15.0" fill="rgb(214,59,7)" rx="2" ry="2" />
<text  x="73.87" y="207.5" ></text>
</g>
<g >
<title>functools.py:98:_le_from_lt (8,599,461 samples, 1.43%)</title><rect x="998.7" y="165" width="16.9" height="15.0" fill="rgb(239,38,53)" rx="2" ry="2" />
<text  x="1001.68" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (5,173,576 samples, 0.86%)</title><rect x="351.7" y="101" width="10.2" height="15.0" fill="rgb(212,170,49)" rx="2" ry="2" />
<text  x="354.70" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (860,081 samples, 0.14%)</title><rect x="42.4" y="181" width="1.7" height="15.0" fill="rgb(244,170,53)" rx="2" ry="2" />
<text  x="45.37" y="191.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.isinstance&gt; (904,865 samples, 0.15%)</title><rect x="1013.8" y="133" width="1.8" height="15.0" fill="rgb(221,205,30)" rx="2" ry="2" />
<text  x="1016.81" y="143.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,649,728 samples, 0.44%)</title><rect x="70.9" y="181" width="5.2" height="15.0" fill="rgb(220,221,47)" rx="2" ry="2" />
<text  x="73.87" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:381:SortAddrList (1,995,127 samples, 0.33%)</title><rect x="1051.3" y="133" width="3.9" height="15.0" fill="rgb(218,150,25)" rx="2" ry="2" />
<text  x="1054.28" y="143.5" ></text>
</g>
<g >
<title>nacaddr.py:146:__init__ (812,943 samples, 0.14%)</title><rect x="1188.2" y="101" width="1.6" height="15.0" fill="rgb(236,205,7)" rx="2" ry="2" />
<text  x="1191.22" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (949,591 samples, 0.16%)</title><rect x="104.7" y="181" width="1.9" height="15.0" fill="rgb(224,204,33)" rx="2" ry="2" />
<text  x="107.71" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:585:__str__ (2,885,017 samples, 0.48%)</title><rect x="376.0" y="213" width="5.7" height="15.0" fill="rgb(229,49,29)" rx="2" ry="2" />
<text  x="379.03" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (838,579 samples, 0.14%)</title><rect x="1181.5" y="85" width="1.7" height="15.0" fill="rgb(220,89,29)" rx="2" ry="2" />
<text  x="1184.50" y="95.5" ></text>
</g>
<g >
<title>nacaddr.py:146:__init__ (1,961,915 samples, 0.33%)</title><rect x="1179.3" y="117" width="3.9" height="15.0" fill="rgb(246,183,6)" rx="2" ry="2" />
<text  x="1182.30" y="127.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (1,292,904 samples, 0.22%)</title><rect x="1171.1" y="69" width="2.5" height="15.0" fill="rgb(244,147,44)" rx="2" ry="2" />
<text  x="1174.07" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:613:__str__ (3,565,638 samples, 0.59%)</title><rect x="374.7" y="229" width="7.0" height="15.0" fill="rgb(214,153,34)" rx="2" ry="2" />
<text  x="377.69" y="239.5" ></text>
</g>
<g >
<title>all (600,058,946 samples, 100%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(249,131,4)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>ipaddress.py:553:__eq__ (1,005,711 samples, 0.17%)</title><rect x="510.7" y="165" width="2.0" height="15.0" fill="rgb(220,7,5)" rx="2" ry="2" />
<text  x="513.73" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (3,002,078 samples, 0.50%)</title><rect x="356.0" y="69" width="5.9" height="15.0" fill="rgb(250,183,46)" rx="2" ry="2" />
<text  x="358.97" y="79.5" ></text>
</g>
<g >
<title>nacaddr.py:346:CollapseAddrList (23,334,707 samples, 3.89%)</title><rect x="185.0" y="197" width="45.9" height="15.0" fill="rgb(210,154,6)" rx="2" ry="2" />
<text  x="188.05" y="207.5" >naca..</text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (968,621 samples, 0.16%)</title><rect x="301.4" y="101" width="1.9" height="15.0" fill="rgb(241,98,2)" rx="2" ry="2" />
<text  x="304.39" y="111.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (1,726,513 samples, 0.29%)</title><rect x="124.5" y="181" width="3.4" height="15.0" fill="rgb(238,9,36)" rx="2" ry="2" />
<text  x="127.50" y="191.5" ></text>
</g>
<g >
<title>junipersrx.py:850:__str__ (1,186,003 samples, 0.20%)</title><rect x="1028.3" y="261" width="2.3" height="15.0" fill="rgb(242,76,9)" rx="2" ry="2" />
<text  x="1031.27" y="271.5" ></text>
</g>
<g >
<title>ipaddress.py:1809:_string_from_ip_int (1,743,999 samples, 0.29%)</title><rect x="322.6" y="53" width="3.5" height="15.0" fill="rgb(223,201,4)" rx="2" ry="2" />
<text  x="325.65" y="63.5" ></text>
</g>
<g >
<title>policy.py:190:AddFilter (2,117,588 samples, 0.35%)</title><rect x="1051.0" y="197" width="4.2" height="15.0" fill="rgb(238,33,35)" rx="2" ry="2" />
<text  x="1054.04" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:585:__str__ (2,160,231 samples, 0.36%)</title><rect x="1100.6" y="69" width="4.3" height="15.0" fill="rgb(249,214,41)" rx="2" ry="2" />
<text  x="1103.61" y="79.5" ></text>
</g>
<g >
<title>policy.py:197:_TranslateTerms (4,684,314 samples, 0.78%)</title><rect x="1041.8" y="165" width="9.2" height="15.0" fill="rgb(231,227,6)" rx="2" ry="2" />
<text  x="1044.83" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (1,997,651 samples, 0.33%)</title><rect x="1185.9" y="117" width="3.9" height="15.0" fill="rgb(249,2,24)" rx="2" ry="2" />
<text  x="1188.89" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (1,793,480 samples, 0.30%)</title><rect x="1170.1" y="85" width="3.5" height="15.0" fill="rgb(242,198,33)" rx="2" ry="2" />
<text  x="1173.09" y="95.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (2,702,017 samples, 0.45%)</title><rect x="49.8" y="197" width="5.3" height="15.0" fill="rgb(245,129,27)" rx="2" ry="2" />
<text  x="52.76" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:164:__deepcopy__ (935,828 samples, 0.16%)</title><rect x="81.4" y="213" width="1.8" height="15.0" fill="rgb(227,137,18)" rx="2" ry="2" />
<text  x="84.40" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (1,929,842 samples, 0.32%)</title><rect x="1076.5" y="69" width="3.8" height="15.0" fill="rgb(251,215,23)" rx="2" ry="2" />
<text  x="1079.47" y="79.5" ></text>
</g>
<g >
<title>aclgenerator.py:404:FixHighPorts (919,672 samples, 0.15%)</title><rect x="924.3" y="213" width="1.8" height="15.0" fill="rgb(246,98,51)" rx="2" ry="2" />
<text  x="927.30" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:553:__eq__ (2,663,251 samples, 0.44%)</title><rect x="809.0" y="165" width="5.3" height="15.0" fill="rgb(242,211,26)" rx="2" ry="2" />
<text  x="812.02" y="175.5" ></text>
</g>
<g >
<title>cisco.py:641:__str__ (2,169,568 samples, 0.36%)</title><rect x="16.6" y="245" width="4.2" height="15.0" fill="rgb(225,2,51)" rx="2" ry="2" />
<text  x="19.56" y="255.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (1,838,766 samples, 0.31%)</title><rect x="303.3" y="101" width="3.6" height="15.0" fill="rgb(229,167,48)" rx="2" ry="2" />
<text  x="306.30" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1809:_string_from_ip_int (1,948,586 samples, 0.32%)</title><rect x="377.9" y="197" width="3.8" height="15.0" fill="rgb(220,168,11)" rx="2" ry="2" />
<text  x="380.87" y="207.5" ></text>
</g>
<g >
<title>copy.py:219:_deepcopy_tuple (2,698,652 samples, 0.45%)</title><rect x="91.5" y="213" width="5.3" height="15.0" fill="rgb(250,187,25)" rx="2" ry="2" />
<text  x="94.51" y="223.5" ></text>
</g>
<g >
<title>policy.py:190:AddFilter (4,685,288 samples, 0.78%)</title><rect x="1041.8" y="181" width="9.2" height="15.0" fill="rgb(224,98,42)" rx="2" ry="2" />
<text  x="1044.83" y="191.5" ></text>
</g>
<g >
<title>juniper.py:186:__str__ (280,830,233 samples, 46.80%)</title><rect x="371.7" y="245" width="552.2" height="15.0" fill="rgb(225,173,51)" rx="2" ry="2" />
<text  x="374.70" y="255.5" >juniper.py:186:__str__</text>
</g>
<g >
<title>policy.py:2527:ParsePolicy (81,058,586 samples, 13.51%)</title><rect x="1030.6" y="261" width="159.4" height="15.0" fill="rgb(221,94,15)" rx="2" ry="2" />
<text  x="1033.60" y="271.5" >policy.py:2527:Parse..</text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (1,474,797 samples, 0.25%)</title><rect x="1157.9" y="85" width="2.9" height="15.0" fill="rgb(233,46,11)" rx="2" ry="2" />
<text  x="1160.94" y="95.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,636,933 samples, 0.44%)</title><rect x="44.6" y="181" width="5.2" height="15.0" fill="rgb(221,48,45)" rx="2" ry="2" />
<text  x="47.58" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (2,799,659 samples, 0.47%)</title><rect x="1160.8" y="85" width="5.5" height="15.0" fill="rgb(231,133,24)" rx="2" ry="2" />
<text  x="1163.84" y="95.5" ></text>
</g>
<g >
<title>policy.py:1279:AddressCleanup (2,009,840 samples, 0.33%)</title><rect x="1051.3" y="165" width="3.9" height="15.0" fill="rgb(250,20,28)" rx="2" ry="2" />
<text  x="1054.25" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:585:__str__ (1,311,132 samples, 0.22%)</title><rect x="107.2" y="213" width="2.6" height="15.0" fill="rgb(254,197,40)" rx="2" ry="2" />
<text  x="110.19" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:171:supernet (997,129 samples, 0.17%)</title><rect x="211.1" y="165" width="2.0" height="15.0" fill="rgb(208,139,38)" rx="2" ry="2" />
<text  x="214.13" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (2,511,582 samples, 0.42%)</title><rect x="1130.9" y="69" width="4.9" height="15.0" fill="rgb(245,116,24)" rx="2" ry="2" />
<text  x="1133.90" y="79.5" ></text>
</g>
<g >
<title>nacaddr.py:164:__deepcopy__ (862,654 samples, 0.14%)</title><rect x="40.1" y="213" width="1.7" height="15.0" fill="rgb(215,146,4)" rx="2" ry="2" />
<text  x="43.10" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (4,328,289 samples, 0.72%)</title><rect x="1127.3" y="101" width="8.5" height="15.0" fill="rgb(219,130,45)" rx="2" ry="2" />
<text  x="1130.33" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (3,975,259 samples, 0.66%)</title><rect x="288.9" y="101" width="7.8" height="15.0" fill="rgb(224,42,2)" rx="2" ry="2" />
<text  x="291.86" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (678,586 samples, 0.11%)</title><rect x="211.8" y="133" width="1.3" height="15.0" fill="rgb(238,12,43)" rx="2" ry="2" />
<text  x="214.76" y="143.5" ></text>
</g>
<g >
<title>policy.py:1290:cleanup (1,997,321 samples, 0.33%)</title><rect x="1051.3" y="149" width="3.9" height="15.0" fill="rgb(227,226,15)" rx="2" ry="2" />
<text  x="1054.28" y="159.5" ></text>
</g>
<g >
<title>policy.py:1013:AddObject (60,540,341 samples, 10.09%)</title><rect x="1056.0" y="197" width="119.1" height="15.0" fill="rgb(211,162,13)" rx="2" ry="2" />
<text  x="1059.03" y="207.5" >policy.py:1013..</text>
</g>
<g >
<title>policy.py:405:__init__ (7,588,543 samples, 1.26%)</title><rect x="1175.1" y="197" width="14.9" height="15.0" fill="rgb(209,120,16)" rx="2" ry="2" />
<text  x="1178.08" y="207.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (911,863 samples, 0.15%)</title><rect x="924.3" y="197" width="1.8" height="15.0" fill="rgb(241,55,40)" rx="2" ry="2" />
<text  x="927.32" y="207.5" ></text>
</g>
<g >
<title>aclgen.py:587:main (600,058,946 samples, 100.00%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(251,69,5)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >aclgen.py:587:main</text>
</g>
<g >
<title>nacaddr.py:30:IP (46,658,348 samples, 7.78%)</title><rect x="273.3" y="149" width="91.7" height="15.0" fill="rgb(221,4,24)" rx="2" ry="2" />
<text  x="276.28" y="159.5" >nacaddr.py..</text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (936,915 samples, 0.16%)</title><rect x="62.9" y="165" width="1.8" height="15.0" fill="rgb(219,159,6)" rx="2" ry="2" />
<text  x="65.86" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (2,306,729 samples, 0.38%)</title><rect x="292.1" y="69" width="4.6" height="15.0" fill="rgb(232,94,11)" rx="2" ry="2" />
<text  x="295.14" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (1,368,821 samples, 0.23%)</title><rect x="1163.7" y="69" width="2.6" height="15.0" fill="rgb(230,92,53)" rx="2" ry="2" />
<text  x="1166.66" y="79.5" ></text>
</g>
<g >
<title>iptables.py:809:__str__ (123,926,373 samples, 20.65%)</title><rect x="127.9" y="261" width="243.7" height="15.0" fill="rgb(239,160,9)" rx="2" ry="2" />
<text  x="130.90" y="271.5" >iptables.py:809:__str__</text>
</g>
<g >
<title>ipaddress.py:585:__str__ (2,582,112 samples, 0.43%)</title><rect x="321.0" y="69" width="5.1" height="15.0" fill="rgb(215,157,50)" rx="2" ry="2" />
<text  x="324.00" y="79.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,672,609 samples, 0.45%)</title><rect x="86.2" y="197" width="5.3" height="15.0" fill="rgb(244,152,15)" rx="2" ry="2" />
<text  x="89.25" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:202:summarize_address_range (14,348,586 samples, 2.39%)</title><rect x="245.1" y="133" width="28.2" height="15.0" fill="rgb(212,136,4)" rx="2" ry="2" />
<text  x="248.07" y="143.5" >i..</text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (6,867,096 samples, 1.14%)</title><rect x="1068.0" y="117" width="13.5" height="15.0" fill="rgb(229,85,9)" rx="2" ry="2" />
<text  x="1071.00" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (1,454,390 samples, 0.24%)</title><rect x="1176.4" y="117" width="2.9" height="15.0" fill="rgb(224,46,38)" rx="2" ry="2" />
<text  x="1179.44" y="127.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (10,599,842 samples, 1.77%)</title><rect x="23.2" y="229" width="20.9" height="15.0" fill="rgb(207,220,11)" rx="2" ry="2" />
<text  x="26.22" y="239.5" ></text>
</g>
<g >
<title>policy.py:172:__init__ (4,685,920 samples, 0.78%)</title><rect x="1041.8" y="197" width="9.2" height="15.0" fill="rgb(227,225,25)" rx="2" ry="2" />
<text  x="1044.83" y="207.5" ></text>
</g>
<g >
<title>aclgen.py:501:Run (600,047,918 samples, 100.00%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(211,87,4)" rx="2" ry="2" />
<text  x="13.02" y="303.5" >aclgen.py:501:Run</text>
</g>
<g >
<title>nacaddr.py:74:__init__ (992,975 samples, 0.17%)</title><rect x="83.7" y="197" width="2.0" height="15.0" fill="rgb(214,195,48)" rx="2" ry="2" />
<text  x="86.74" y="207.5" ></text>
</g>
<g >
<title>lex.py:831:validate_module (993,988 samples, 0.17%)</title><rect x="1031.3" y="197" width="2.0" height="15.0" fill="rgb(237,80,44)" rx="2" ry="2" />
<text  x="1034.33" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1142:_parse_octet (799,654 samples, 0.13%)</title><rect x="1148.9" y="53" width="1.5" height="15.0" fill="rgb(242,200,50)" rx="2" ry="2" />
<text  x="1151.86" y="63.5" ></text>
</g>
<g >
<title>ipaddress.py:360:get_mixed_type_key (862,994 samples, 0.14%)</title><rect x="227.9" y="165" width="1.7" height="15.0" fill="rgb(214,21,48)" rx="2" ry="2" />
<text  x="230.92" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:613:__str__ (2,973,356 samples, 0.50%)</title><rect x="320.2" y="85" width="5.9" height="15.0" fill="rgb(205,90,41)" rx="2" ry="2" />
<text  x="323.23" y="95.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (2,700,135 samples, 0.45%)</title><rect x="44.5" y="197" width="5.3" height="15.0" fill="rgb(253,9,24)" rx="2" ry="2" />
<text  x="47.45" y="207.5" ></text>
</g>
<g >
<title>iptables.py:114:__str__ (123,899,396 samples, 20.65%)</title><rect x="127.9" y="245" width="243.7" height="15.0" fill="rgb(241,179,11)" rx="2" ry="2" />
<text  x="130.95" y="255.5" >iptables.py:114:__str__</text>
</g>
<g >
<title>ipaddress.py:667:__hash__ (796,168 samples, 0.13%)</title><rect x="407.3" y="197" width="1.6" height="15.0" fill="rgb(214,168,38)" rx="2" ry="2" />
<text  x="410.33" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (997,103 samples, 0.17%)</title><rect x="62.7" y="181" width="2.0" height="15.0" fill="rgb(250,119,47)" rx="2" ry="2" />
<text  x="65.74" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (852,300 samples, 0.14%)</title><rect x="1177.6" y="101" width="1.7" height="15.0" fill="rgb(239,37,17)" rx="2" ry="2" />
<text  x="1180.62" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:707:with_prefixlen (954,569 samples, 0.16%)</title><rect x="116.3" y="229" width="1.9" height="15.0" fill="rgb(232,50,3)" rx="2" ry="2" />
<text  x="119.33" y="239.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,696,564 samples, 0.45%)</title><rect x="55.1" y="181" width="5.3" height="15.0" fill="rgb(238,199,39)" rx="2" ry="2" />
<text  x="58.09" y="191.5" ></text>
</g>
<g >
<title>junipersrx.py:630:_BuildAddressBook (956,573 samples, 0.16%)</title><rect x="14.7" y="229" width="1.8" height="15.0" fill="rgb(214,47,49)" rx="2" ry="2" />
<text  x="17.66" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (4,453,087 samples, 0.74%)</title><rect x="298.2" y="117" width="8.7" height="15.0" fill="rgb(240,110,53)" rx="2" ry="2" />
<text  x="301.16" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (647,247 samples, 0.11%)</title><rect x="237.0" y="165" width="1.2" height="15.0" fill="rgb(232,165,46)" rx="2" ry="2" />
<text  x="239.97" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:164:__deepcopy__ (939,718 samples, 0.16%)</title><rect x="60.4" y="197" width="1.8" height="15.0" fill="rgb(242,152,51)" rx="2" ry="2" />
<text  x="63.39" y="207.5" ></text>
</g>
<g >
<title>iptables.py:403:_FormatPart (3,335,681 samples, 0.56%)</title><rect x="365.0" y="229" width="6.6" height="15.0" fill="rgb(239,89,28)" rx="2" ry="2" />
<text  x="368.03" y="239.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (8,918,978 samples, 1.49%)</title><rect x="1119.9" y="133" width="17.6" height="15.0" fill="rgb(219,76,12)" rx="2" ry="2" />
<text  x="1122.91" y="143.5" ></text>
</g>
<g >
<title>naming.py:455:GetNet (743,507 samples, 0.12%)</title><rect x="1173.6" y="133" width="1.5" height="15.0" fill="rgb(231,111,47)" rx="2" ry="2" />
<text  x="1176.62" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:360:get_mixed_type_key (1,104,516 samples, 0.18%)</title><rect x="1045.7" y="85" width="2.2" height="15.0" fill="rgb(247,0,19)" rx="2" ry="2" />
<text  x="1048.69" y="95.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (1,993,037 samples, 0.33%)</title><rect x="1051.3" y="117" width="3.9" height="15.0" fill="rgb(232,38,14)" rx="2" ry="2" />
<text  x="1054.29" y="127.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'issuperset' of 'frozenset' objects&gt; (1,210,192 samples, 0.20%)</title><rect x="1115.8" y="69" width="2.3" height="15.0" fill="rgb(241,227,16)" rx="2" ry="2" />
<text  x="1118.77" y="79.5" ></text>
</g>
<g >
<title>nacaddr.py:146:__init__ (3,021,466 samples, 0.50%)</title><rect x="109.8" y="229" width="5.9" height="15.0" fill="rgb(225,138,32)" rx="2" ry="2" />
<text  x="112.77" y="239.5" ></text>
</g>
<g >
<title>juniper.py:97:Append (1,832,530 samples, 0.31%)</title><rect x="920.3" y="229" width="3.6" height="15.0" fill="rgb(234,85,46)" rx="2" ry="2" />
<text  x="923.34" y="239.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.sorted&gt; (4,410,400 samples, 0.73%)</title><rect x="1042.4" y="101" width="8.6" height="15.0" fill="rgb(237,67,47)" rx="2" ry="2" />
<text  x="1045.37" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:86:supernet_of (3,093,867 samples, 0.52%)</title><rect x="218.6" y="165" width="6.1" height="15.0" fill="rgb(213,45,21)" rx="2" ry="2" />
<text  x="221.62" y="175.5" ></text>
</g>
<g >
<title>functools.py:103:_ge_from_lt (4,749,582 samples, 0.79%)</title><rect x="989.3" y="165" width="9.4" height="15.0" fill="rgb(218,125,18)" rx="2" ry="2" />
<text  x="992.34" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:409:AddressListExclude (1,220,453 samples, 0.20%)</title><rect x="18.4" y="229" width="2.4" height="15.0" fill="rgb(218,88,3)" rx="2" ry="2" />
<text  x="21.42" y="239.5" ></text>
</g>
<g >
<title>nacaddr.py:152:subnet_of (72,589,171 samples, 12.10%)</title><rect x="408.9" y="213" width="142.7" height="15.0" fill="rgb(224,57,43)" rx="2" ry="2" />
<text  x="411.90" y="223.5" >nacaddr.py:152:sub..</text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (10,912,169 samples, 1.82%)</title><rect x="22.6" y="245" width="21.5" height="15.0" fill="rgb(232,71,17)" rx="2" ry="2" />
<text  x="25.61" y="255.5" >c..</text>
</g>
<g >
<title>ipaddress.py:699:hostmask (2,203,430 samples, 0.37%)</title><rect x="905.2" y="165" width="4.3" height="15.0" fill="rgb(242,148,15)" rx="2" ry="2" />
<text  x="908.16" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (8,076,058 samples, 1.35%)</title><rect x="326.1" y="101" width="15.9" height="15.0" fill="rgb(229,192,26)" rx="2" ry="2" />
<text  x="329.08" y="111.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'match' of 're.Pattern' objects&gt; (649,247 samples, 0.11%)</title><rect x="1040.5" y="197" width="1.3" height="15.0" fill="rgb(207,64,0)" rx="2" ry="2" />
<text  x="1043.53" y="207.5" ></text>
</g>
<g >
<title>iputils.py:7:exclude_address (16,000,644 samples, 2.67%)</title><rect x="241.8" y="149" width="31.5" height="15.0" fill="rgb(224,79,44)" rx="2" ry="2" />
<text  x="244.82" y="159.5" >ip..</text>
</g>
<g >
<title>ipaddress.py:859:_get_networks_key (665,362 samples, 0.11%)</title><rect x="183.7" y="197" width="1.3" height="15.0" fill="rgb(233,172,32)" rx="2" ry="2" />
<text  x="186.74" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (8,399,031 samples, 1.40%)</title><rect x="167.2" y="181" width="16.5" height="15.0" fill="rgb(233,214,2)" rx="2" ry="2" />
<text  x="170.22" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:30:IP (4,821,027 samples, 0.80%)</title><rect x="1175.8" y="133" width="9.5" height="15.0" fill="rgb(236,202,26)" rx="2" ry="2" />
<text  x="1178.85" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (5,002,832 samples, 0.83%)</title><rect x="1018.4" y="165" width="9.9" height="15.0" fill="rgb(241,91,28)" rx="2" ry="2" />
<text  x="1021.43" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1872:version (4,167,777 samples, 0.69%)</title><rect x="434.3" y="197" width="8.2" height="15.0" fill="rgb(252,78,15)" rx="2" ry="2" />
<text  x="437.30" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:403:&lt;genexpr&gt; (655,544 samples, 0.11%)</title><rect x="19.5" y="181" width="1.3" height="15.0" fill="rgb(220,149,7)" rx="2" ry="2" />
<text  x="22.53" y="191.5" ></text>
</g>
<g >
<title>lex.py:862:lex (1,207,616 samples, 0.20%)</title><rect x="1030.9" y="245" width="2.4" height="15.0" fill="rgb(238,125,6)" rx="2" ry="2" />
<text  x="1033.91" y="255.5" ></text>
</g>
<g >
<title>cisco.py:1235:__str__ (2,176,528 samples, 0.36%)</title><rect x="16.5" y="261" width="4.3" height="15.0" fill="rgb(245,38,10)" rx="2" ry="2" />
<text  x="19.54" y="271.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (671,579 samples, 0.11%)</title><rect x="111.9" y="197" width="1.3" height="15.0" fill="rgb(250,204,50)" rx="2" ry="2" />
<text  x="114.88" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:403:&lt;genexpr&gt; (64,052,007 samples, 10.67%)</title><rect x="239.1" y="165" width="125.9" height="15.0" fill="rgb(240,83,21)" rx="2" ry="2" />
<text  x="242.08" y="175.5" >nacaddr.py:403:..</text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (1,509,779 samples, 0.25%)</title><rect x="548.7" y="165" width="2.9" height="15.0" fill="rgb(229,96,42)" rx="2" ry="2" />
<text  x="551.67" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:146:__init__ (18,894,503 samples, 3.15%)</title><rect x="306.9" y="133" width="37.2" height="15.0" fill="rgb(216,66,8)" rx="2" ry="2" />
<text  x="309.92" y="143.5" >nac..</text>
</g>
<g >
<title>ipaddress.py:647:__lt__ (758,468 samples, 0.13%)</title><rect x="1049.5" y="85" width="1.5" height="15.0" fill="rgb(205,79,32)" rx="2" ry="2" />
<text  x="1052.55" y="95.5" ></text>
</g>
<g >
<title>ipaddress.py:1735:_parse_hextet (706,335 samples, 0.12%)</title><rect x="271.9" y="85" width="1.4" height="15.0" fill="rgb(226,140,41)" rx="2" ry="2" />
<text  x="274.89" y="95.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (3,729,586 samples, 0.62%)</title><rect x="354.5" y="85" width="7.4" height="15.0" fill="rgb(236,58,53)" rx="2" ry="2" />
<text  x="357.54" y="95.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (1,010,594 samples, 0.17%)</title><rect x="104.6" y="197" width="2.0" height="15.0" fill="rgb(254,162,24)" rx="2" ry="2" />
<text  x="107.59" y="207.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (2,983,332 samples, 0.50%)</title><rect x="177.9" y="165" width="5.8" height="15.0" fill="rgb(231,201,8)" rx="2" ry="2" />
<text  x="180.87" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:158:supernet_of (6,713,332 samples, 1.12%)</title><rect x="197.9" y="165" width="13.2" height="15.0" fill="rgb(225,187,45)" rx="2" ry="2" />
<text  x="200.93" y="175.5" ></text>
</g>
<g >
<title>juniper.py:891:_TranslatePolicy (954,987 samples, 0.16%)</title><rect x="924.2" y="229" width="1.9" height="15.0" fill="rgb(242,216,11)" rx="2" ry="2" />
<text  x="927.23" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (6,756,545 samples, 1.13%)</title><rect x="1104.9" y="101" width="13.2" height="15.0" fill="rgb(221,178,4)" rx="2" ry="2" />
<text  x="1107.86" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (14,006,713 samples, 2.33%)</title><rect x="279.4" y="133" width="27.5" height="15.0" fill="rgb(242,90,20)" rx="2" ry="2" />
<text  x="282.37" y="143.5" >i..</text>
</g>
<g >
<title>policy.py:1290:cleanup (4,419,878 samples, 0.74%)</title><rect x="1042.3" y="133" width="8.7" height="15.0" fill="rgb(227,214,25)" rx="2" ry="2" />
<text  x="1045.35" y="143.5" ></text>
</g>
<g >
<title>nacaddr.py:86:supernet_of (41,179,326 samples, 6.86%)</title><rect x="947.3" y="197" width="81.0" height="15.0" fill="rgb(230,139,11)" rx="2" ry="2" />
<text  x="950.29" y="207.5" >nacaddr.p..</text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (872,195 samples, 0.15%)</title><rect x="209.4" y="133" width="1.7" height="15.0" fill="rgb(224,177,13)" rx="2" ry="2" />
<text  x="212.42" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:360:get_mixed_type_key (831,736 samples, 0.14%)</title><rect x="235.3" y="165" width="1.7" height="15.0" fill="rgb(212,89,0)" rx="2" ry="2" />
<text  x="238.33" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1257:version (2,453,128 samples, 0.41%)</title><rect x="528.2" y="181" width="4.8" height="15.0" fill="rgb(207,49,2)" rx="2" ry="2" />
<text  x="531.15" y="191.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (2,736,666 samples, 0.46%)</title><rect x="86.1" y="213" width="5.4" height="15.0" fill="rgb(222,10,52)" rx="2" ry="2" />
<text  x="89.12" y="223.5" ></text>
</g>
<g >
<title>copy.py:210:_deepcopy_list (2,688,955 samples, 0.45%)</title><rect x="65.6" y="213" width="5.3" height="15.0" fill="rgb(212,50,44)" rx="2" ry="2" />
<text  x="68.58" y="223.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.isinstance&gt; (2,458,857 samples, 0.41%)</title><rect x="774.2" y="149" width="4.8" height="15.0" fill="rgb(248,31,34)" rx="2" ry="2" />
<text  x="777.16" y="159.5" ></text>
</g>
<g >
<title>functools.py:98:_le_from_lt (1,340,607 samples, 0.22%)</title><rect x="943.1" y="165" width="2.7" height="15.0" fill="rgb(223,90,43)" rx="2" ry="2" />
<text  x="946.12" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:158:supernet_of (6,595,182 samples, 1.10%)</title><rect x="934.3" y="197" width="13.0" height="15.0" fill="rgb(244,190,9)" rx="2" ry="2" />
<text  x="937.32" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1268:__init__ (629,249 samples, 0.10%)</title><rect x="361.9" y="101" width="1.2" height="15.0" fill="rgb(249,20,27)" rx="2" ry="2" />
<text  x="364.87" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:92:__deepcopy__ (1,254,263 samples, 0.21%)</title><rect x="62.2" y="197" width="2.5" height="15.0" fill="rgb(212,88,53)" rx="2" ry="2" />
<text  x="65.24" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (637,429 samples, 0.11%)</title><rect x="1152.2" y="85" width="1.3" height="15.0" fill="rgb(234,93,41)" rx="2" ry="2" />
<text  x="1155.21" y="95.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.isinstance&gt; (1,538,924 samples, 0.26%)</title><rect x="525.1" y="149" width="3.1" height="15.0" fill="rgb(221,40,41)" rx="2" ry="2" />
<text  x="528.13" y="159.5" ></text>
</g>
<g >
<title>aclgenerator.py:272:__init__ (53,051,273 samples, 8.84%)</title><rect x="923.9" y="245" width="104.4" height="15.0" fill="rgb(225,58,6)" rx="2" ry="2" />
<text  x="926.94" y="255.5" >aclgenerator..</text>
</g>
<g >
<title>ipaddress.py:613:__str__ (1,030,748 samples, 0.17%)</title><rect x="1158.8" y="69" width="2.0" height="15.0" fill="rgb(239,119,53)" rx="2" ry="2" />
<text  x="1161.82" y="79.5" ></text>
</g>
<g >
<title>ipaddress.py:186:_count_righthand_zero_bits (2,068,481 samples, 0.34%)</title><rect x="255.7" y="117" width="4.1" height="15.0" fill="rgb(224,175,39)" rx="2" ry="2" />
<text  x="258.70" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:92:__deepcopy__ (6,198,221 samples, 1.03%)</title><rect x="115.7" y="245" width="12.2" height="15.0" fill="rgb(238,123,51)" rx="2" ry="2" />
<text  x="118.71" y="255.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (10,001,595 samples, 1.67%)</title><rect x="345.4" y="117" width="19.6" height="15.0" fill="rgb(230,90,33)" rx="2" ry="2" />
<text  x="348.37" y="127.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (3,120,226 samples, 0.52%)</title><rect x="1129.7" y="85" width="6.1" height="15.0" fill="rgb(205,212,46)" rx="2" ry="2" />
<text  x="1132.71" y="95.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,442,543 samples, 0.41%)</title><rect x="25.5" y="181" width="4.8" height="15.0" fill="rgb(220,188,23)" rx="2" ry="2" />
<text  x="28.54" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (2,845,466 samples, 0.47%)</title><rect x="1144.8" y="101" width="5.6" height="15.0" fill="rgb(229,220,7)" rx="2" ry="2" />
<text  x="1147.84" y="111.5" ></text>
</g>
<g >
<title>iptables.py:545:_GenerateAddressStatement (1,292,637 samples, 0.22%)</title><rect x="369.1" y="213" width="2.5" height="15.0" fill="rgb(211,72,10)" rx="2" ry="2" />
<text  x="372.05" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:1830:&lt;listcomp&gt; (828,558 samples, 0.14%)</title><rect x="380.1" y="181" width="1.6" height="15.0" fill="rgb(246,6,30)" rx="2" ry="2" />
<text  x="383.07" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (6,259,883 samples, 1.04%)</title><rect x="1154.0" y="101" width="12.3" height="15.0" fill="rgb(212,184,5)" rx="2" ry="2" />
<text  x="1157.04" y="111.5" ></text>
</g>
<g >
<title>policy.py:1013:AddObject (7,515,310 samples, 1.25%)</title><rect x="1175.2" y="181" width="14.8" height="15.0" fill="rgb(226,49,26)" rx="2" ry="2" />
<text  x="1178.22" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (3,725,516 samples, 0.62%)</title><rect x="1081.5" y="117" width="7.3" height="15.0" fill="rgb(218,7,20)" rx="2" ry="2" />
<text  x="1084.50" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (779,913 samples, 0.13%)</title><rect x="945.8" y="165" width="1.5" height="15.0" fill="rgb(221,69,54)" rx="2" ry="2" />
<text  x="948.76" y="175.5" ></text>
</g>
<g >
<title>functools.py:103:_ge_from_lt (8,077,718 samples, 1.35%)</title><rect x="483.5" y="181" width="15.9" height="15.0" fill="rgb(240,15,17)" rx="2" ry="2" />
<text  x="486.51" y="191.5" ></text>
</g>
<g >
<title>junipersrx.py:630:_BuildAddressBook (50,714,015 samples, 8.45%)</title><rect x="928.5" y="213" width="99.8" height="15.0" fill="rgb(236,2,46)" rx="2" ry="2" />
<text  x="931.54" y="223.5" >junipersrx.p..</text>
</g>
<g >
<title>aclgen.py:166:RenderFile (598,546,348 samples, 99.75%)</title><rect x="13.0" y="277" width="1177.0" height="15.0" fill="rgb(250,59,36)" rx="2" ry="2" />
<text  x="15.97" y="287.5" >aclgen.py:166:RenderFile</text>
</g>
<g >
<title>~:0:&lt;method 'issuperset' of 'frozenset' objects&gt; (812,036 samples, 0.14%)</title><rect x="295.1" y="53" width="1.6" height="15.0" fill="rgb(231,129,34)" rx="2" ry="2" />
<text  x="298.08" y="63.5" ></text>
</g>
<g >
<title>nacaddr.py:386:RemoveAddressFromList (68,193,951 samples, 11.36%)</title><rect x="230.9" y="197" width="134.1" height="15.0" fill="rgb(226,82,52)" rx="2" ry="2" />
<text  x="233.93" y="207.5" >nacaddr.py:386:R..</text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (1,274,882 samples, 0.21%)</title><rect x="113.2" y="197" width="2.5" height="15.0" fill="rgb(254,137,46)" rx="2" ry="2" />
<text  x="116.20" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (915,333 samples, 0.15%)</title><rect x="42.3" y="197" width="1.8" height="15.0" fill="rgb(209,159,20)" rx="2" ry="2" />
<text  x="45.26" y="207.5" ></text>
</g>
<g >
<title>juniper.py:668:&lt;listcomp&gt; (1,018,186 samples, 0.17%)</title><rect x="406.9" y="213" width="2.0" height="15.0" fill="rgb(222,144,7)" rx="2" ry="2" />
<text  x="409.89" y="223.5" ></text>
</g>
<g >
<title>juniper.py:687:_Comment (1,519,526 samples, 0.25%)</title><rect x="917.4" y="229" width="2.9" height="15.0" fill="rgb(229,13,44)" rx="2" ry="2" />
<text  x="920.35" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (6,870,635 samples, 1.14%)</title><rect x="259.8" y="117" width="13.5" height="15.0" fill="rgb(249,216,18)" rx="2" ry="2" />
<text  x="262.77" y="127.5" ></text>
</g>
<g >
<title>junipersrx.py:687:_GenerateAddressBook (1,031,408 samples, 0.17%)</title><rect x="1028.6" y="245" width="2.0" height="15.0" fill="rgb(223,123,54)" rx="2" ry="2" />
<text  x="1031.57" y="255.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (1,038,518 samples, 0.17%)</title><rect x="1183.3" y="101" width="2.0" height="15.0" fill="rgb(208,218,15)" rx="2" ry="2" />
<text  x="1186.29" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (11,718,217 samples, 1.95%)</title><rect x="1065.8" y="133" width="23.0" height="15.0" fill="rgb(222,153,7)" rx="2" ry="2" />
<text  x="1068.78" y="143.5" >i..</text>
</g>
<g >
<title>policy.py:1912:p_term_spec (68,546,558 samples, 11.42%)</title><rect x="1055.2" y="213" width="134.8" height="15.0" fill="rgb(208,52,44)" rx="2" ry="2" />
<text  x="1058.21" y="223.5" >policy.py:1912:p_..</text>
</g>
<g >
<title>copy.py:132:deepcopy (10,613,770 samples, 1.77%)</title><rect x="64.8" y="229" width="20.9" height="15.0" fill="rgb(214,122,45)" rx="2" ry="2" />
<text  x="67.82" y="239.5" ></text>
</g>
<g >
<title>nacaddr.py:164:__deepcopy__ (952,432 samples, 0.16%)</title><rect x="102.2" y="213" width="1.9" height="15.0" fill="rgb(206,36,4)" rx="2" ry="2" />
<text  x="105.20" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:670:__contains__ (11,941,470 samples, 1.99%)</title><rect x="143.7" y="181" width="23.5" height="15.0" fill="rgb(214,45,34)" rx="2" ry="2" />
<text  x="146.74" y="191.5" >i..</text>
</g>
<g >
<title>functools.py:103:_ge_from_lt (828,043 samples, 0.14%)</title><rect x="204.8" y="133" width="1.7" height="15.0" fill="rgb(250,70,40)" rx="2" ry="2" />
<text  x="207.84" y="143.5" ></text>
</g>
<g >
<title>naming.py:455:GetNet (19,133,441 samples, 3.19%)</title><rect x="1137.5" y="149" width="37.6" height="15.0" fill="rgb(224,111,18)" rx="2" ry="2" />
<text  x="1140.45" y="159.5" >nam..</text>
</g>
<g >
<title>copy.py:268:_reconstruct (2,480,793 samples, 0.41%)</title><rect x="35.2" y="213" width="4.9" height="15.0" fill="rgb(232,100,38)" rx="2" ry="2" />
<text  x="38.23" y="223.5" ></text>
</g>
<g >
<title>functools.py:98:_le_from_lt (14,625,289 samples, 2.44%)</title><rect x="499.4" y="181" width="28.8" height="15.0" fill="rgb(205,148,53)" rx="2" ry="2" />
<text  x="502.39" y="191.5" >fu..</text>
</g>
<g >
<title>~:0:&lt;method 'extend' of 'list' objects&gt; (659,912 samples, 0.11%)</title><rect x="19.5" y="197" width="1.3" height="15.0" fill="rgb(241,157,15)" rx="2" ry="2" />
<text  x="22.53" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:588:__hash__ (1,024,242 samples, 0.17%)</title><rect x="186.1" y="181" width="2.0" height="15.0" fill="rgb(214,211,41)" rx="2" ry="2" />
<text  x="189.05" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (4,629,973 samples, 0.77%)</title><rect x="118.8" y="213" width="9.1" height="15.0" fill="rgb(225,140,10)" rx="2" ry="2" />
<text  x="121.79" y="223.5" ></text>
</g>
<g >
<title>nacaddr.py:80:subnet_of (185,972,921 samples, 30.99%)</title><rect x="551.6" y="213" width="365.8" height="15.0" fill="rgb(209,225,33)" rx="2" ry="2" />
<text  x="554.64" y="223.5" >nacaddr.py:80:subnet_of</text>
</g>
<g >
<title>policy.py:197:_TranslateTerms (2,116,818 samples, 0.35%)</title><rect x="1051.0" y="181" width="4.2" height="15.0" fill="rgb(209,186,37)" rx="2" ry="2" />
<text  x="1054.04" y="191.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.isinstance&gt; (4,075,264 samples, 0.68%)</title><rect x="847.1" y="149" width="8.1" height="15.0" fill="rgb(247,134,2)" rx="2" ry="2" />
<text  x="850.14" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (1,543,713 samples, 0.26%)</title><rect x="1150.4" y="101" width="3.1" height="15.0" fill="rgb(210,60,15)" rx="2" ry="2" />
<text  x="1153.43" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (978,162 samples, 0.16%)</title><rect x="363.1" y="101" width="1.9" height="15.0" fill="rgb(206,190,49)" rx="2" ry="2" />
<text  x="366.11" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1631:_ip_int_from_string (1,538,338 samples, 0.26%)</title><rect x="1085.8" y="101" width="3.0" height="15.0" fill="rgb(223,144,35)" rx="2" ry="2" />
<text  x="1088.80" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:57:ip_network (4,855,587 samples, 0.81%)</title><rect x="1143.9" y="117" width="9.6" height="15.0" fill="rgb(223,152,34)" rx="2" ry="2" />
<text  x="1146.92" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (18,057,622 samples, 3.01%)</title><rect x="308.6" y="117" width="35.5" height="15.0" fill="rgb(205,126,1)" rx="2" ry="2" />
<text  x="311.56" y="127.5" >ipa..</text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (2,397,510 samples, 0.40%)</title><rect x="1075.6" y="85" width="4.7" height="15.0" fill="rgb(245,140,52)" rx="2" ry="2" />
<text  x="1078.55" y="95.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (10,660,798 samples, 1.78%)</title><rect x="344.1" y="133" width="20.9" height="15.0" fill="rgb(254,71,1)" rx="2" ry="2" />
<text  x="347.07" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (3,467,168 samples, 0.58%)</title><rect x="1166.8" y="101" width="6.8" height="15.0" fill="rgb(205,130,4)" rx="2" ry="2" />
<text  x="1169.80" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (1,106,966 samples, 0.18%)</title><rect x="1183.2" y="117" width="2.1" height="15.0" fill="rgb(234,117,54)" rx="2" ry="2" />
<text  x="1186.15" y="127.5" ></text>
</g>
<g >
<title>nacaddr.py:264:_SafeToMerge (2,809,178 samples, 0.47%)</title><rect x="213.1" y="165" width="5.5" height="15.0" fill="rgb(206,192,34)" rx="2" ry="2" />
<text  x="216.09" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (761,021 samples, 0.13%)</title><rect x="268.9" y="101" width="1.5" height="15.0" fill="rgb(226,60,52)" rx="2" ry="2" />
<text  x="271.95" y="111.5" ></text>
</g>
<g >
<title>nacaddr.py:113:supernet (962,525 samples, 0.16%)</title><rect x="196.0" y="165" width="1.9" height="15.0" fill="rgb(229,91,24)" rx="2" ry="2" />
<text  x="199.04" y="175.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,475,426 samples, 0.41%)</title><rect x="35.2" y="197" width="4.9" height="15.0" fill="rgb(226,116,33)" rx="2" ry="2" />
<text  x="38.24" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1872:version (982,949 samples, 0.16%)</title><rect x="533.0" y="181" width="1.9" height="15.0" fill="rgb(215,117,20)" rx="2" ry="2" />
<text  x="535.98" y="191.5" ></text>
</g>
<g >
<title>nacaddr.py:92:__deepcopy__ (1,249,070 samples, 0.21%)</title><rect x="83.2" y="213" width="2.5" height="15.0" fill="rgb(251,168,18)" rx="2" ry="2" />
<text  x="86.24" y="223.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method builtins.isinstance&gt; (678,255 samples, 0.11%)</title><rect x="165.9" y="165" width="1.3" height="15.0" fill="rgb(211,84,23)" rx="2" ry="2" />
<text  x="168.89" y="175.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (2,394,970 samples, 0.40%)</title><rect x="123.2" y="197" width="4.7" height="15.0" fill="rgb(238,210,49)" rx="2" ry="2" />
<text  x="126.19" y="207.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'issuperset' of 'frozenset' objects&gt; (679,361 samples, 0.11%)</title><rect x="1078.9" y="53" width="1.4" height="15.0" fill="rgb(215,128,4)" rx="2" ry="2" />
<text  x="1081.93" y="63.5" ></text>
</g>
<g >
<title>nacaddr.py:58:_is_subnet_of (5,412,420 samples, 0.90%)</title><rect x="200.5" y="149" width="10.6" height="15.0" fill="rgb(207,142,10)" rx="2" ry="2" />
<text  x="203.49" y="159.5" ></text>
</g>
<g >
<title>copy.py:268:_reconstruct (2,702,411 samples, 0.45%)</title><rect x="55.1" y="197" width="5.3" height="15.0" fill="rgb(248,98,20)" rx="2" ry="2" />
<text  x="58.08" y="207.5" ></text>
</g>
<g >
<title>nacaddr.py:74:__init__ (631,761 samples, 0.11%)</title><rect x="196.7" y="149" width="1.2" height="15.0" fill="rgb(215,2,51)" rx="2" ry="2" />
<text  x="199.69" y="159.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (859,521 samples, 0.14%)</title><rect x="1047.9" y="85" width="1.6" height="15.0" fill="rgb(231,76,50)" rx="2" ry="2" />
<text  x="1050.86" y="95.5" ></text>
</g>
<g >
<title>copy.py:236:_deepcopy_dict (10,673,682 samples, 1.78%)</title><rect x="64.7" y="245" width="21.0" height="15.0" fill="rgb(240,146,15)" rx="2" ry="2" />
<text  x="67.71" y="255.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (2,469,302 samples, 0.41%)</title><rect x="30.4" y="197" width="4.8" height="15.0" fill="rgb(215,217,30)" rx="2" ry="2" />
<text  x="33.37" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1883:__init__ (898,546 samples, 0.15%)</title><rect x="1118.1" y="101" width="1.8" height="15.0" fill="rgb(231,216,8)" rx="2" ry="2" />
<text  x="1121.15" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (805,037 samples, 0.13%)</title><rect x="207.8" y="117" width="1.6" height="15.0" fill="rgb(233,199,54)" rx="2" ry="2" />
<text  x="210.83" y="127.5" ></text>
</g>
<g >
<title>ipaddress.py:1257:version (2,177,099 samples, 0.36%)</title><rect x="962.1" y="181" width="4.3" height="15.0" fill="rgb(229,160,13)" rx="2" ry="2" />
<text  x="965.08" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:2160:__init__ (2,850,566 samples, 0.48%)</title><rect x="110.1" y="213" width="5.6" height="15.0" fill="rgb(205,25,7)" rx="2" ry="2" />
<text  x="113.10" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:550:__int__ (977,474 samples, 0.16%)</title><rect x="161.6" y="165" width="1.9" height="15.0" fill="rgb(224,5,41)" rx="2" ry="2" />
<text  x="164.61" y="175.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'get' of 'dict' objects&gt; (3,998,086 samples, 0.67%)</title><rect x="909.5" y="165" width="7.9" height="15.0" fill="rgb(222,174,9)" rx="2" ry="2" />
<text  x="912.49" y="175.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (54,449,357 samples, 9.07%)</title><rect x="20.8" y="261" width="107.1" height="15.0" fill="rgb(205,189,30)" rx="2" ry="2" />
<text  x="23.82" y="271.5" >copy.py:132:d..</text>
</g>
<g >
<title>functools.py:103:_ge_from_lt (740,433 samples, 0.12%)</title><rect x="941.7" y="165" width="1.4" height="15.0" fill="rgb(225,36,23)" rx="2" ry="2" />
<text  x="944.66" y="175.5" ></text>
</g>
<g >
<title>nacaddr.py:346:CollapseAddrList (757,685 samples, 0.13%)</title><rect x="1029.1" y="229" width="1.5" height="15.0" fill="rgb(251,191,44)" rx="2" ry="2" />
<text  x="1032.11" y="239.5" ></text>
</g>
<g >
<title>ipaddress.py:683:overlaps (22,543,262 samples, 3.76%)</title><rect x="139.4" y="197" width="44.3" height="15.0" fill="rgb(212,97,41)" rx="2" ry="2" />
<text  x="142.41" y="207.5" >ipad..</text>
</g>
<g >
<title>ipaddress.py:588:__hash__ (1,578,897 samples, 0.26%)</title><rect x="215.5" y="133" width="3.1" height="15.0" fill="rgb(207,125,38)" rx="2" ry="2" />
<text  x="218.51" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:1116:_ip_int_from_string (3,325,758 samples, 0.55%)</title><rect x="1073.7" y="101" width="6.6" height="15.0" fill="rgb(221,75,47)" rx="2" ry="2" />
<text  x="1076.73" y="111.5" ></text>
</g>
<g >
<title>ipaddress.py:1477:__init__ (933,036 samples, 0.16%)</title><rect x="83.9" y="181" width="1.8" height="15.0" fill="rgb(238,109,44)" rx="2" ry="2" />
<text  x="86.86" y="191.5" ></text>
</g>
<g >
<title>copy.py:132:deepcopy (10,487,409 samples, 1.75%)</title><rect x="44.1" y="213" width="20.6" height="15.0" fill="rgb(240,125,31)" rx="2" ry="2" />
<text  x="47.08" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:158:_split_optional_netmask (628,797 samples, 0.10%)</title><rect x="1080.3" y="101" width="1.2" height="15.0" fill="rgb(214,48,18)" rx="2" ry="2" />
<text  x="1083.27" y="111.5" ></text>
</g>
<g >
<title>junipersrx.py:336:_TranslatePolicy (979,870 samples, 0.16%)</title><rect x="14.6" y="245" width="1.9" height="15.0" fill="rgb(233,144,40)" rx="2" ry="2" />
<text  x="17.62" y="255.5" ></text>
</g>
<g >
<title>ipaddress.py:1257:version (9,925,830 samples, 1.65%)</title><rect x="610.8" y="197" width="19.5" height="15.0" fill="rgb(242,122,33)" rx="2" ry="2" />
<text  x="613.82" y="207.5" ></text>
</g>
<g >
<title>ipaddress.py:1883:__init__ (1,074,026 samples, 0.18%)</title><rect x="342.0" y="101" width="2.1" height="15.0" fill="rgb(229,57,26)" rx="2" ry="2" />
<text  x="344.96" y="111.5" ></text>
</g>
<g >
<title>~:0:&lt;method 'match' of 're.Pattern' objects&gt; (628,841 samples, 0.10%)</title><rect x="1032.1" y="181" width="1.2" height="15.0" fill="rgb(242,23,45)" rx="2" ry="2" />
<text  x="1035.05" y="191.5" ></text>
</g>
<g >
<title>ipaddress.py:585:__str__ (727,888 samples, 0.12%)</title><rect x="116.8" y="213" width="1.4" height="15.0" fill="rgb(215,98,48)" rx="2" ry="2" />
<text  x="119.78" y="223.5" ></text>
</g>
<g >
<title>ipaddress.py:690:broadcast_address (1,200,131 samples, 0.20%)</title><rect x="163.5" y="165" width="2.4" height="15.0" fill="rgb(236,137,36)" rx="2" ry="2" />
<text  x="166.53" y="175.5" ></text>
</g>
<g >
<title>functools.py:98:_le_from_lt (1,499,232 samples, 0.25%)</title><rect x="206.5" y="133" width="2.9" height="15.0" fill="rgb(224,85,27)" rx="2" ry="2" />
<text  x="209.47" y="143.5" ></text>
</g>
<g >
<title>ipaddress.py:560:__lt__ (671,572 samples, 0.11%)</title><rect x="229.6" y="165" width="1.3" height="15.0" fill="rgb(246,8,15)" rx="2" ry="2" />
<text  x="232.61" y="175.5" ></text>
</g>
<g >
<title>copy.py:220:&lt;listcomp&gt; (2,697,211 samples, 0.45%)</title><rect x="91.5" y="197" width="5.3" height="15.0" fill="rgb(223,183,50)" rx="2" ry="2" />
<text  x="94.51" y="207.5" ></text>
</g>
<g >
<title>~:0:&lt;built-in method from_bytes&gt; (993,438 samples, 0.17%)</title><rect x="1148.5" y="69" width="1.9" height="15.0" fill="rgb(243,71,30)" rx="2" ry="2" />
<text  x="1151.48" y="79.5" ></text>
</g>
</g>
</svg>
